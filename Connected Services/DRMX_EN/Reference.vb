'------------------------------------------------------------------------------
' <auto-generated>
'     此代码由工具生成。
'     运行时版本:4.0.30319.42000
'
'     对此文件的更改可能会导致不正确的行为，并且如果
'     重新生成代码，这些更改将会丢失。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Runtime.Serialization

Namespace DRMX_EN
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="UserDetails", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class UserDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UserNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PasswordField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmailField As String
        
        Private RegisterDateField As Date
        
        Private UpdateDateField As Date
        
        Private IsApprovedField As Boolean
        
        Private IsLockedOutField As Boolean
        
        Private IsSuperUserField As Boolean
        
        Private AdminIDField As Integer
        
        Private GroupIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FullNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TitleField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CompanyField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AddressField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CityField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ProvinceField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ZipField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CountryField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PhoneField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CompanyURLField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IPField As String
        
        Private MoneyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SQuestionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SAnswerField As String
        
        Private CustomerIDField As Integer
        
        Private BindNumField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false)>  _
        Public Property UserName() As String
            Get
                Return Me.UserNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UserNameField, value) <> true) Then
                    Me.UserNameField = value
                    Me.RaisePropertyChanged("UserName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public Property Password() As String
            Get
                Return Me.PasswordField
            End Get
            Set
                If (Object.ReferenceEquals(Me.PasswordField, value) <> true) Then
                    Me.PasswordField = value
                    Me.RaisePropertyChanged("Password")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public Property Email() As String
            Get
                Return Me.EmailField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EmailField, value) <> true) Then
                    Me.EmailField = value
                    Me.RaisePropertyChanged("Email")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=3)>  _
        Public Property RegisterDate() As Date
            Get
                Return Me.RegisterDateField
            End Get
            Set
                If (Me.RegisterDateField.Equals(value) <> true) Then
                    Me.RegisterDateField = value
                    Me.RaisePropertyChanged("RegisterDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=4)>  _
        Public Property UpdateDate() As Date
            Get
                Return Me.UpdateDateField
            End Get
            Set
                If (Me.UpdateDateField.Equals(value) <> true) Then
                    Me.UpdateDateField = value
                    Me.RaisePropertyChanged("UpdateDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=5)>  _
        Public Property IsApproved() As Boolean
            Get
                Return Me.IsApprovedField
            End Get
            Set
                If (Me.IsApprovedField.Equals(value) <> true) Then
                    Me.IsApprovedField = value
                    Me.RaisePropertyChanged("IsApproved")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=6)>  _
        Public Property IsLockedOut() As Boolean
            Get
                Return Me.IsLockedOutField
            End Get
            Set
                If (Me.IsLockedOutField.Equals(value) <> true) Then
                    Me.IsLockedOutField = value
                    Me.RaisePropertyChanged("IsLockedOut")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=7)>  _
        Public Property IsSuperUser() As Boolean
            Get
                Return Me.IsSuperUserField
            End Get
            Set
                If (Me.IsSuperUserField.Equals(value) <> true) Then
                    Me.IsSuperUserField = value
                    Me.RaisePropertyChanged("IsSuperUser")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=8)>  _
        Public Property AdminID() As Integer
            Get
                Return Me.AdminIDField
            End Get
            Set
                If (Me.AdminIDField.Equals(value) <> true) Then
                    Me.AdminIDField = value
                    Me.RaisePropertyChanged("AdminID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=9)>  _
        Public Property GroupID() As Integer
            Get
                Return Me.GroupIDField
            End Get
            Set
                If (Me.GroupIDField.Equals(value) <> true) Then
                    Me.GroupIDField = value
                    Me.RaisePropertyChanged("GroupID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=10)>  _
        Public Property FullName() As String
            Get
                Return Me.FullNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FullNameField, value) <> true) Then
                    Me.FullNameField = value
                    Me.RaisePropertyChanged("FullName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=11)>  _
        Public Property Title() As String
            Get
                Return Me.TitleField
            End Get
            Set
                If (Object.ReferenceEquals(Me.TitleField, value) <> true) Then
                    Me.TitleField = value
                    Me.RaisePropertyChanged("Title")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=12)>  _
        Public Property Company() As String
            Get
                Return Me.CompanyField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CompanyField, value) <> true) Then
                    Me.CompanyField = value
                    Me.RaisePropertyChanged("Company")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=13)>  _
        Public Property Address() As String
            Get
                Return Me.AddressField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AddressField, value) <> true) Then
                    Me.AddressField = value
                    Me.RaisePropertyChanged("Address")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=14)>  _
        Public Property City() As String
            Get
                Return Me.CityField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CityField, value) <> true) Then
                    Me.CityField = value
                    Me.RaisePropertyChanged("City")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=15)>  _
        Public Property Province() As String
            Get
                Return Me.ProvinceField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ProvinceField, value) <> true) Then
                    Me.ProvinceField = value
                    Me.RaisePropertyChanged("Province")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=16)>  _
        Public Property Zip() As String
            Get
                Return Me.ZipField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ZipField, value) <> true) Then
                    Me.ZipField = value
                    Me.RaisePropertyChanged("Zip")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=17)>  _
        Public Property Country() As String
            Get
                Return Me.CountryField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CountryField, value) <> true) Then
                    Me.CountryField = value
                    Me.RaisePropertyChanged("Country")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=18)>  _
        Public Property Phone() As String
            Get
                Return Me.PhoneField
            End Get
            Set
                If (Object.ReferenceEquals(Me.PhoneField, value) <> true) Then
                    Me.PhoneField = value
                    Me.RaisePropertyChanged("Phone")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=19)>  _
        Public Property CompanyURL() As String
            Get
                Return Me.CompanyURLField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CompanyURLField, value) <> true) Then
                    Me.CompanyURLField = value
                    Me.RaisePropertyChanged("CompanyURL")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=20)>  _
        Public Property IP() As String
            Get
                Return Me.IPField
            End Get
            Set
                If (Object.ReferenceEquals(Me.IPField, value) <> true) Then
                    Me.IPField = value
                    Me.RaisePropertyChanged("IP")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=21)>  _
        Public Property Money() As Decimal
            Get
                Return Me.MoneyField
            End Get
            Set
                If (Me.MoneyField.Equals(value) <> true) Then
                    Me.MoneyField = value
                    Me.RaisePropertyChanged("Money")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=22)>  _
        Public Property SQuestion() As String
            Get
                Return Me.SQuestionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SQuestionField, value) <> true) Then
                    Me.SQuestionField = value
                    Me.RaisePropertyChanged("SQuestion")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=23)>  _
        Public Property SAnswer() As String
            Get
                Return Me.SAnswerField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SAnswerField, value) <> true) Then
                    Me.SAnswerField = value
                    Me.RaisePropertyChanged("SAnswer")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=24)>  _
        Public Property CustomerID() As Integer
            Get
                Return Me.CustomerIDField
            End Get
            Set
                If (Me.CustomerIDField.Equals(value) <> true) Then
                    Me.CustomerIDField = value
                    Me.RaisePropertyChanged("CustomerID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=25)>  _
        Public Property BindNum() As Integer
            Get
                Return Me.BindNumField
            End Get
            Set
                If (Me.BindNumField.Equals(value) <> true) Then
                    Me.BindNumField = value
                    Me.RaisePropertyChanged("BindNum")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ReportDetails", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class ReportDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        Private BalanceField As Decimal
        
        Private MonthlyFeeField As Decimal
        
        Private LicenseFeeField As Decimal
        
        Private TotalLicensesField As Integer
        
        Private TotalCostField As Decimal
        
        Private CostTodayField As Decimal
        
        Private CostYesterdayField As Decimal
        
        Private CostThisMonthField As Decimal
        
        Private CostLastMonthField As Decimal
        
        Private CountTodayField As Integer
        
        Private CountYesterdayField As Integer
        
        Private CountThisMonthField As Integer
        
        Private CountLastMonthField As Integer
        
        Private Date1Field As Date
        
        Private Date2Field As Date
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true)>  _
        Public Property Balance() As Decimal
            Get
                Return Me.BalanceField
            End Get
            Set
                If (Me.BalanceField.Equals(value) <> true) Then
                    Me.BalanceField = value
                    Me.RaisePropertyChanged("Balance")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true)>  _
        Public Property MonthlyFee() As Decimal
            Get
                Return Me.MonthlyFeeField
            End Get
            Set
                If (Me.MonthlyFeeField.Equals(value) <> true) Then
                    Me.MonthlyFeeField = value
                    Me.RaisePropertyChanged("MonthlyFee")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=2)>  _
        Public Property LicenseFee() As Decimal
            Get
                Return Me.LicenseFeeField
            End Get
            Set
                If (Me.LicenseFeeField.Equals(value) <> true) Then
                    Me.LicenseFeeField = value
                    Me.RaisePropertyChanged("LicenseFee")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=3)>  _
        Public Property TotalLicenses() As Integer
            Get
                Return Me.TotalLicensesField
            End Get
            Set
                If (Me.TotalLicensesField.Equals(value) <> true) Then
                    Me.TotalLicensesField = value
                    Me.RaisePropertyChanged("TotalLicenses")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=4)>  _
        Public Property TotalCost() As Decimal
            Get
                Return Me.TotalCostField
            End Get
            Set
                If (Me.TotalCostField.Equals(value) <> true) Then
                    Me.TotalCostField = value
                    Me.RaisePropertyChanged("TotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=5)>  _
        Public Property CostToday() As Decimal
            Get
                Return Me.CostTodayField
            End Get
            Set
                If (Me.CostTodayField.Equals(value) <> true) Then
                    Me.CostTodayField = value
                    Me.RaisePropertyChanged("CostToday")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=6)>  _
        Public Property CostYesterday() As Decimal
            Get
                Return Me.CostYesterdayField
            End Get
            Set
                If (Me.CostYesterdayField.Equals(value) <> true) Then
                    Me.CostYesterdayField = value
                    Me.RaisePropertyChanged("CostYesterday")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=7)>  _
        Public Property CostThisMonth() As Decimal
            Get
                Return Me.CostThisMonthField
            End Get
            Set
                If (Me.CostThisMonthField.Equals(value) <> true) Then
                    Me.CostThisMonthField = value
                    Me.RaisePropertyChanged("CostThisMonth")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=8)>  _
        Public Property CostLastMonth() As Decimal
            Get
                Return Me.CostLastMonthField
            End Get
            Set
                If (Me.CostLastMonthField.Equals(value) <> true) Then
                    Me.CostLastMonthField = value
                    Me.RaisePropertyChanged("CostLastMonth")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=9)>  _
        Public Property CountToday() As Integer
            Get
                Return Me.CountTodayField
            End Get
            Set
                If (Me.CountTodayField.Equals(value) <> true) Then
                    Me.CountTodayField = value
                    Me.RaisePropertyChanged("CountToday")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=10)>  _
        Public Property CountYesterday() As Integer
            Get
                Return Me.CountYesterdayField
            End Get
            Set
                If (Me.CountYesterdayField.Equals(value) <> true) Then
                    Me.CountYesterdayField = value
                    Me.RaisePropertyChanged("CountYesterday")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=11)>  _
        Public Property CountThisMonth() As Integer
            Get
                Return Me.CountThisMonthField
            End Get
            Set
                If (Me.CountThisMonthField.Equals(value) <> true) Then
                    Me.CountThisMonthField = value
                    Me.RaisePropertyChanged("CountThisMonth")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=12)>  _
        Public Property CountLastMonth() As Integer
            Get
                Return Me.CountLastMonthField
            End Get
            Set
                If (Me.CountLastMonthField.Equals(value) <> true) Then
                    Me.CountLastMonthField = value
                    Me.RaisePropertyChanged("CountLastMonth")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=13)>  _
        Public Property Date1() As Date
            Get
                Return Me.Date1Field
            End Get
            Set
                If (Me.Date1Field.Equals(value) <> true) Then
                    Me.Date1Field = value
                    Me.RaisePropertyChanged("Date1")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=14)>  _
        Public Property Date2() As Date
            Get
                Return Me.Date2Field
            End Get
            Set
                If (Me.Date2Field.Equals(value) <> true) Then
                    Me.Date2Field = value
                    Me.RaisePropertyChanged("Date2")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="GroupDetails", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class GroupDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        Private GroupIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private GroupNameField As String
        
        Private AdminIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IP1Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IP2Field As String
        
        Private RequireLoginField As Boolean
        
        Private CustomerIDField As Integer
        
        Private BindNumField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true)>  _
        Public Property GroupID() As Integer
            Get
                Return Me.GroupIDField
            End Get
            Set
                If (Me.GroupIDField.Equals(value) <> true) Then
                    Me.GroupIDField = value
                    Me.RaisePropertyChanged("GroupID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false)>  _
        Public Property GroupName() As String
            Get
                Return Me.GroupNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.GroupNameField, value) <> true) Then
                    Me.GroupNameField = value
                    Me.RaisePropertyChanged("GroupName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=2)>  _
        Public Property AdminID() As Integer
            Get
                Return Me.AdminIDField
            End Get
            Set
                If (Me.AdminIDField.Equals(value) <> true) Then
                    Me.AdminIDField = value
                    Me.RaisePropertyChanged("AdminID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=3)>  _
        Public Property IP1() As String
            Get
                Return Me.IP1Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.IP1Field, value) <> true) Then
                    Me.IP1Field = value
                    Me.RaisePropertyChanged("IP1")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=4)>  _
        Public Property IP2() As String
            Get
                Return Me.IP2Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.IP2Field, value) <> true) Then
                    Me.IP2Field = value
                    Me.RaisePropertyChanged("IP2")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=5)>  _
        Public Property RequireLogin() As Boolean
            Get
                Return Me.RequireLoginField
            End Get
            Set
                If (Me.RequireLoginField.Equals(value) <> true) Then
                    Me.RequireLoginField = value
                    Me.RaisePropertyChanged("RequireLogin")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=6)>  _
        Public Property CustomerID() As Integer
            Get
                Return Me.CustomerIDField
            End Get
            Set
                If (Me.CustomerIDField.Equals(value) <> true) Then
                    Me.CustomerIDField = value
                    Me.RaisePropertyChanged("CustomerID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=7)>  _
        Public Property BindNum() As Integer
            Get
                Return Me.BindNumField
            End Get
            Set
                If (Me.BindNumField.Equals(value) <> true) Then
                    Me.BindNumField = value
                    Me.RaisePropertyChanged("BindNum")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.CollectionDataContractAttribute(Name:="ArrayOfAnyType", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", ItemName:="anyType"),  _
     System.SerializableAttribute()>  _
    Public Class ArrayOfAnyType
        Inherits System.Collections.Generic.List(Of Object)
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="LicenseProfileDetails", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class LicenseProfileDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LicenseProfileIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LicenseProfileNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private KeyIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IndividualizationField As String
        
        Private CreateDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private YourSeedIDField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false)>  _
        Public Property LicenseProfileID() As String
            Get
                Return Me.LicenseProfileIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LicenseProfileIDField, value) <> true) Then
                    Me.LicenseProfileIDField = value
                    Me.RaisePropertyChanged("LicenseProfileID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false)>  _
        Public Property LicenseProfileName() As String
            Get
                Return Me.LicenseProfileNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LicenseProfileNameField, value) <> true) Then
                    Me.LicenseProfileNameField = value
                    Me.RaisePropertyChanged("LicenseProfileName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public Property KeyID() As String
            Get
                Return Me.KeyIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.KeyIDField, value) <> true) Then
                    Me.KeyIDField = value
                    Me.RaisePropertyChanged("KeyID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=3)>  _
        Public Property Individualization() As String
            Get
                Return Me.IndividualizationField
            End Get
            Set
                If (Object.ReferenceEquals(Me.IndividualizationField, value) <> true) Then
                    Me.IndividualizationField = value
                    Me.RaisePropertyChanged("Individualization")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=4)>  _
        Public Property CreateDate() As Date
            Get
                Return Me.CreateDateField
            End Get
            Set
                If (Me.CreateDateField.Equals(value) <> true) Then
                    Me.CreateDateField = value
                    Me.RaisePropertyChanged("CreateDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=5)>  _
        Public Property YourSeedID() As String
            Get
                Return Me.YourSeedIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.YourSeedIDField, value) <> true) Then
                    Me.YourSeedIDField = value
                    Me.RaisePropertyChanged("YourSeedID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="RightsDetails", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class RightsDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        Private RightsIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RightsDescriptionField As String
        
        Private AllowPlayOnPcField As Boolean
        
        Private PlaycountField As Integer
        
        Private AllowBurnToCDField As Boolean
        
        Private BurnToCDCountField As Integer
        
        Private AllowBackupRestoreField As Boolean
        
        Private BeginDateField As Date
        
        Private ExpirationDateField As Date
        
        Private ExpirationAfterFirstUseField As Integer
        
        Private ExpirationOnStoreField As Integer
        
        Private DeleteOnClockRollBackField As Boolean
        
        Private DisableOnClockRollBackField As Boolean
        
        Private AllowTransferToNonSDMIField As Boolean
        
        Private AllowTransferToSDMIField As Boolean
        
        Private TransferCountField As Integer
        
        Private PMRightsField As Integer
        
        Private PMExpirationDateField As Date
        
        Private PriceField As Decimal
        
        Private GracePeriodField As Integer
        
        Private AllowCopyField As Boolean
        
        Private CopyCountField As Integer
        
        Private AllowPrintField As Boolean
        
        Private AllowClipBoardField As Boolean
        
        Private AllowDocField As Boolean
        
        Private EnableWatermarkField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private WatermarkTextField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private WatermarkAreaField As String
        
        Private RandomChangeAreaField As Boolean
        
        Private RandomFrequencyField As Integer
        
        Private FontSizeField As Integer
        
        Private BlockScreen2Field As Boolean
        
        Private EnableWhitelistField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ExpireTimeUnitField As String
        
        Private PreviewTimeField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PreviewTimeUnitField As String
        
        Private PreviewPageField As Integer
        
        Private WatermarkPixelModeField As Integer
        
        Private WatermarkAlphaField As Integer
        
        Private WatermarkSpeedField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true)>  _
        Public Property RightsID() As Integer
            Get
                Return Me.RightsIDField
            End Get
            Set
                If (Me.RightsIDField.Equals(value) <> true) Then
                    Me.RightsIDField = value
                    Me.RaisePropertyChanged("RightsID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public Property RightsDescription() As String
            Get
                Return Me.RightsDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RightsDescriptionField, value) <> true) Then
                    Me.RightsDescriptionField = value
                    Me.RaisePropertyChanged("RightsDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=2)>  _
        Public Property AllowPlayOnPc() As Boolean
            Get
                Return Me.AllowPlayOnPcField
            End Get
            Set
                If (Me.AllowPlayOnPcField.Equals(value) <> true) Then
                    Me.AllowPlayOnPcField = value
                    Me.RaisePropertyChanged("AllowPlayOnPc")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=3)>  _
        Public Property Playcount() As Integer
            Get
                Return Me.PlaycountField
            End Get
            Set
                If (Me.PlaycountField.Equals(value) <> true) Then
                    Me.PlaycountField = value
                    Me.RaisePropertyChanged("Playcount")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=4)>  _
        Public Property AllowBurnToCD() As Boolean
            Get
                Return Me.AllowBurnToCDField
            End Get
            Set
                If (Me.AllowBurnToCDField.Equals(value) <> true) Then
                    Me.AllowBurnToCDField = value
                    Me.RaisePropertyChanged("AllowBurnToCD")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=5)>  _
        Public Property BurnToCDCount() As Integer
            Get
                Return Me.BurnToCDCountField
            End Get
            Set
                If (Me.BurnToCDCountField.Equals(value) <> true) Then
                    Me.BurnToCDCountField = value
                    Me.RaisePropertyChanged("BurnToCDCount")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=6)>  _
        Public Property AllowBackupRestore() As Boolean
            Get
                Return Me.AllowBackupRestoreField
            End Get
            Set
                If (Me.AllowBackupRestoreField.Equals(value) <> true) Then
                    Me.AllowBackupRestoreField = value
                    Me.RaisePropertyChanged("AllowBackupRestore")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=7)>  _
        Public Property BeginDate() As Date
            Get
                Return Me.BeginDateField
            End Get
            Set
                If (Me.BeginDateField.Equals(value) <> true) Then
                    Me.BeginDateField = value
                    Me.RaisePropertyChanged("BeginDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=8)>  _
        Public Property ExpirationDate() As Date
            Get
                Return Me.ExpirationDateField
            End Get
            Set
                If (Me.ExpirationDateField.Equals(value) <> true) Then
                    Me.ExpirationDateField = value
                    Me.RaisePropertyChanged("ExpirationDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=9)>  _
        Public Property ExpirationAfterFirstUse() As Integer
            Get
                Return Me.ExpirationAfterFirstUseField
            End Get
            Set
                If (Me.ExpirationAfterFirstUseField.Equals(value) <> true) Then
                    Me.ExpirationAfterFirstUseField = value
                    Me.RaisePropertyChanged("ExpirationAfterFirstUse")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=10)>  _
        Public Property ExpirationOnStore() As Integer
            Get
                Return Me.ExpirationOnStoreField
            End Get
            Set
                If (Me.ExpirationOnStoreField.Equals(value) <> true) Then
                    Me.ExpirationOnStoreField = value
                    Me.RaisePropertyChanged("ExpirationOnStore")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=11)>  _
        Public Property DeleteOnClockRollBack() As Boolean
            Get
                Return Me.DeleteOnClockRollBackField
            End Get
            Set
                If (Me.DeleteOnClockRollBackField.Equals(value) <> true) Then
                    Me.DeleteOnClockRollBackField = value
                    Me.RaisePropertyChanged("DeleteOnClockRollBack")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=12)>  _
        Public Property DisableOnClockRollBack() As Boolean
            Get
                Return Me.DisableOnClockRollBackField
            End Get
            Set
                If (Me.DisableOnClockRollBackField.Equals(value) <> true) Then
                    Me.DisableOnClockRollBackField = value
                    Me.RaisePropertyChanged("DisableOnClockRollBack")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=13)>  _
        Public Property AllowTransferToNonSDMI() As Boolean
            Get
                Return Me.AllowTransferToNonSDMIField
            End Get
            Set
                If (Me.AllowTransferToNonSDMIField.Equals(value) <> true) Then
                    Me.AllowTransferToNonSDMIField = value
                    Me.RaisePropertyChanged("AllowTransferToNonSDMI")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=14)>  _
        Public Property AllowTransferToSDMI() As Boolean
            Get
                Return Me.AllowTransferToSDMIField
            End Get
            Set
                If (Me.AllowTransferToSDMIField.Equals(value) <> true) Then
                    Me.AllowTransferToSDMIField = value
                    Me.RaisePropertyChanged("AllowTransferToSDMI")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=15)>  _
        Public Property TransferCount() As Integer
            Get
                Return Me.TransferCountField
            End Get
            Set
                If (Me.TransferCountField.Equals(value) <> true) Then
                    Me.TransferCountField = value
                    Me.RaisePropertyChanged("TransferCount")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=16)>  _
        Public Property PMRights() As Integer
            Get
                Return Me.PMRightsField
            End Get
            Set
                If (Me.PMRightsField.Equals(value) <> true) Then
                    Me.PMRightsField = value
                    Me.RaisePropertyChanged("PMRights")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=17)>  _
        Public Property PMExpirationDate() As Date
            Get
                Return Me.PMExpirationDateField
            End Get
            Set
                If (Me.PMExpirationDateField.Equals(value) <> true) Then
                    Me.PMExpirationDateField = value
                    Me.RaisePropertyChanged("PMExpirationDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=18)>  _
        Public Property Price() As Decimal
            Get
                Return Me.PriceField
            End Get
            Set
                If (Me.PriceField.Equals(value) <> true) Then
                    Me.PriceField = value
                    Me.RaisePropertyChanged("Price")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=19)>  _
        Public Property GracePeriod() As Integer
            Get
                Return Me.GracePeriodField
            End Get
            Set
                If (Me.GracePeriodField.Equals(value) <> true) Then
                    Me.GracePeriodField = value
                    Me.RaisePropertyChanged("GracePeriod")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=20)>  _
        Public Property AllowCopy() As Boolean
            Get
                Return Me.AllowCopyField
            End Get
            Set
                If (Me.AllowCopyField.Equals(value) <> true) Then
                    Me.AllowCopyField = value
                    Me.RaisePropertyChanged("AllowCopy")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=21)>  _
        Public Property CopyCount() As Integer
            Get
                Return Me.CopyCountField
            End Get
            Set
                If (Me.CopyCountField.Equals(value) <> true) Then
                    Me.CopyCountField = value
                    Me.RaisePropertyChanged("CopyCount")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=22)>  _
        Public Property AllowPrint() As Boolean
            Get
                Return Me.AllowPrintField
            End Get
            Set
                If (Me.AllowPrintField.Equals(value) <> true) Then
                    Me.AllowPrintField = value
                    Me.RaisePropertyChanged("AllowPrint")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=23)>  _
        Public Property AllowClipBoard() As Boolean
            Get
                Return Me.AllowClipBoardField
            End Get
            Set
                If (Me.AllowClipBoardField.Equals(value) <> true) Then
                    Me.AllowClipBoardField = value
                    Me.RaisePropertyChanged("AllowClipBoard")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=24)>  _
        Public Property AllowDoc() As Boolean
            Get
                Return Me.AllowDocField
            End Get
            Set
                If (Me.AllowDocField.Equals(value) <> true) Then
                    Me.AllowDocField = value
                    Me.RaisePropertyChanged("AllowDoc")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=25)>  _
        Public Property EnableWatermark() As Boolean
            Get
                Return Me.EnableWatermarkField
            End Get
            Set
                If (Me.EnableWatermarkField.Equals(value) <> true) Then
                    Me.EnableWatermarkField = value
                    Me.RaisePropertyChanged("EnableWatermark")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=26)>  _
        Public Property WatermarkText() As String
            Get
                Return Me.WatermarkTextField
            End Get
            Set
                If (Object.ReferenceEquals(Me.WatermarkTextField, value) <> true) Then
                    Me.WatermarkTextField = value
                    Me.RaisePropertyChanged("WatermarkText")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=27)>  _
        Public Property WatermarkArea() As String
            Get
                Return Me.WatermarkAreaField
            End Get
            Set
                If (Object.ReferenceEquals(Me.WatermarkAreaField, value) <> true) Then
                    Me.WatermarkAreaField = value
                    Me.RaisePropertyChanged("WatermarkArea")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=28)>  _
        Public Property RandomChangeArea() As Boolean
            Get
                Return Me.RandomChangeAreaField
            End Get
            Set
                If (Me.RandomChangeAreaField.Equals(value) <> true) Then
                    Me.RandomChangeAreaField = value
                    Me.RaisePropertyChanged("RandomChangeArea")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=29)>  _
        Public Property RandomFrequency() As Integer
            Get
                Return Me.RandomFrequencyField
            End Get
            Set
                If (Me.RandomFrequencyField.Equals(value) <> true) Then
                    Me.RandomFrequencyField = value
                    Me.RaisePropertyChanged("RandomFrequency")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=30)>  _
        Public Property FontSize() As Integer
            Get
                Return Me.FontSizeField
            End Get
            Set
                If (Me.FontSizeField.Equals(value) <> true) Then
                    Me.FontSizeField = value
                    Me.RaisePropertyChanged("FontSize")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=31)>  _
        Public Property BlockScreen2() As Boolean
            Get
                Return Me.BlockScreen2Field
            End Get
            Set
                If (Me.BlockScreen2Field.Equals(value) <> true) Then
                    Me.BlockScreen2Field = value
                    Me.RaisePropertyChanged("BlockScreen2")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=32)>  _
        Public Property EnableWhitelist() As Boolean
            Get
                Return Me.EnableWhitelistField
            End Get
            Set
                If (Me.EnableWhitelistField.Equals(value) <> true) Then
                    Me.EnableWhitelistField = value
                    Me.RaisePropertyChanged("EnableWhitelist")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=33)>  _
        Public Property ExpireTimeUnit() As String
            Get
                Return Me.ExpireTimeUnitField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ExpireTimeUnitField, value) <> true) Then
                    Me.ExpireTimeUnitField = value
                    Me.RaisePropertyChanged("ExpireTimeUnit")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=34)>  _
        Public Property PreviewTime() As Integer
            Get
                Return Me.PreviewTimeField
            End Get
            Set
                If (Me.PreviewTimeField.Equals(value) <> true) Then
                    Me.PreviewTimeField = value
                    Me.RaisePropertyChanged("PreviewTime")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=35)>  _
        Public Property PreviewTimeUnit() As String
            Get
                Return Me.PreviewTimeUnitField
            End Get
            Set
                If (Object.ReferenceEquals(Me.PreviewTimeUnitField, value) <> true) Then
                    Me.PreviewTimeUnitField = value
                    Me.RaisePropertyChanged("PreviewTimeUnit")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=36)>  _
        Public Property PreviewPage() As Integer
            Get
                Return Me.PreviewPageField
            End Get
            Set
                If (Me.PreviewPageField.Equals(value) <> true) Then
                    Me.PreviewPageField = value
                    Me.RaisePropertyChanged("PreviewPage")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=37)>  _
        Public Property WatermarkPixelMode() As Integer
            Get
                Return Me.WatermarkPixelModeField
            End Get
            Set
                If (Me.WatermarkPixelModeField.Equals(value) <> true) Then
                    Me.WatermarkPixelModeField = value
                    Me.RaisePropertyChanged("WatermarkPixelMode")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=38)>  _
        Public Property WatermarkAlpha() As Integer
            Get
                Return Me.WatermarkAlphaField
            End Get
            Set
                If (Me.WatermarkAlphaField.Equals(value) <> true) Then
                    Me.WatermarkAlphaField = value
                    Me.RaisePropertyChanged("WatermarkAlpha")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=39)>  _
        Public Property WatermarkSpeed() As Integer
            Get
                Return Me.WatermarkSpeedField
            End Get
            Set
                If (Me.WatermarkSpeedField.Equals(value) <> true) Then
                    Me.WatermarkSpeedField = value
                    Me.RaisePropertyChanged("WatermarkSpeed")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", ConfigurationName:="DRMX_EN.HaihaisoftLicenseServiceSoap")>  _
    Public Interface HaihaisoftLicenseServiceSoap
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 UserName 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/UserLogin", ReplyAction:="*")>  _
        Function UserLogin(ByVal request As DRMX_EN.UserLoginRequest) As DRMX_EN.UserLoginResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/UserLogin", ReplyAction:="*")>  _
        Function UserLoginAsync(ByVal request As DRMX_EN.UserLoginRequest) As System.Threading.Tasks.Task(Of DRMX_EN.UserLoginResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 UserName 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/CheckUserE"& _ 
            "xists", ReplyAction:="*")>  _
        Function CheckUserExists(ByVal request As DRMX_EN.CheckUserExistsRequest) As DRMX_EN.CheckUserExistsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/CheckUserE"& _ 
            "xists", ReplyAction:="*")>  _
        Function CheckUserExistsAsync(ByVal request As DRMX_EN.CheckUserExistsRequest) As System.Threading.Tasks.Task(Of DRMX_EN.CheckUserExistsResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 PID 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/PEnhancedV"& _ 
            "File", ReplyAction:="*")>  _
        Function PEnhancedVFile(ByVal request As DRMX_EN.PEnhancedVFileRequest) As DRMX_EN.PEnhancedVFileResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/PEnhancedV"& _ 
            "File", ReplyAction:="*")>  _
        Function PEnhancedVFileAsync(ByVal request As DRMX_EN.PEnhancedVFileRequest) As System.Threading.Tasks.Task(Of DRMX_EN.PEnhancedVFileResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 UserName 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/UserLoginB"& _ 
            "ySQuestion", ReplyAction:="*")>  _
        Function UserLoginBySQuestion(ByVal request As DRMX_EN.UserLoginBySQuestionRequest) As DRMX_EN.UserLoginBySQuestionResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/UserLoginB"& _ 
            "ySQuestion", ReplyAction:="*")>  _
        Function UserLoginBySQuestionAsync(ByVal request As DRMX_EN.UserLoginBySQuestionRequest) As System.Threading.Tasks.Task(Of DRMX_EN.UserLoginBySQuestionResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/GetUserDet"& _ 
            "ails", ReplyAction:="*")>  _
        Function GetUserDetails(ByVal request As DRMX_EN.GetUserDetailsRequest) As DRMX_EN.GetUserDetailsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/GetUserDet"& _ 
            "ails", ReplyAction:="*")>  _
        Function GetUserDetailsAsync(ByVal request As DRMX_EN.GetUserDetailsRequest) As System.Threading.Tasks.Task(Of DRMX_EN.GetUserDetailsResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/GetUserDet"& _ 
            "ailsByUserID", ReplyAction:="*")>  _
        Function GetUserDetailsByUserID(ByVal request As DRMX_EN.GetUserDetailsByUserIDRequest) As DRMX_EN.GetUserDetailsByUserIDResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/GetUserDet"& _ 
            "ailsByUserID", ReplyAction:="*")>  _
        Function GetUserDetailsByUserIDAsync(ByVal request As DRMX_EN.GetUserDetailsByUserIDRequest) As System.Threading.Tasks.Task(Of DRMX_EN.GetUserDetailsByUserIDResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/GetReportD"& _ 
            "etails", ReplyAction:="*")>  _
        Function GetReportDetails(ByVal request As DRMX_EN.GetReportDetailsRequest) As DRMX_EN.GetReportDetailsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/GetReportD"& _ 
            "etails", ReplyAction:="*")>  _
        Function GetReportDetailsAsync(ByVal request As DRMX_EN.GetReportDetailsRequest) As System.Threading.Tasks.Task(Of DRMX_EN.GetReportDetailsResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/DeleteUser"& _ 
            "", ReplyAction:="*")>  _
        Function DeleteUser(ByVal request As DRMX_EN.DeleteUserRequest) As DRMX_EN.DeleteUserResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/DeleteUser"& _ 
            "", ReplyAction:="*")>  _
        Function DeleteUserAsync(ByVal request As DRMX_EN.DeleteUserRequest) As System.Threading.Tasks.Task(Of DRMX_EN.DeleteUserResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/RevokeEndU"& _ 
            "serLicense", ReplyAction:="*")>  _
        Function RevokeEndUserLicense(ByVal request As DRMX_EN.RevokeEndUserLicenseRequest) As DRMX_EN.RevokeEndUserLicenseResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/RevokeEndU"& _ 
            "serLicense", ReplyAction:="*")>  _
        Function RevokeEndUserLicenseAsync(ByVal request As DRMX_EN.RevokeEndUserLicenseRequest) As System.Threading.Tasks.Task(Of DRMX_EN.RevokeEndUserLicenseResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/CheckUserI"& _ 
            "sRevoked", ReplyAction:="*")>  _
        Function CheckUserIsRevoked(ByVal request As DRMX_EN.CheckUserIsRevokedRequest) As DRMX_EN.CheckUserIsRevokedResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/CheckUserI"& _ 
            "sRevoked", ReplyAction:="*")>  _
        Function CheckUserIsRevokedAsync(ByVal request As DRMX_EN.CheckUserIsRevokedRequest) As System.Threading.Tasks.Task(Of DRMX_EN.CheckUserIsRevokedResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/CheckUserI"& _ 
            "sRevokedByLicenseProfileID", ReplyAction:="*")>  _
        Function CheckUserIsRevokedByLicenseProfileID(ByVal request As DRMX_EN.CheckUserIsRevokedByLicenseProfileIDRequest) As DRMX_EN.CheckUserIsRevokedByLicenseProfileIDResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/CheckUserI"& _ 
            "sRevokedByLicenseProfileID", ReplyAction:="*")>  _
        Function CheckUserIsRevokedByLicenseProfileIDAsync(ByVal request As DRMX_EN.CheckUserIsRevokedByLicenseProfileIDRequest) As System.Threading.Tasks.Task(Of DRMX_EN.CheckUserIsRevokedByLicenseProfileIDResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/DeleteUser"& _ 
            "AllBind", ReplyAction:="*")>  _
        Function DeleteUserAllBind(ByVal request As DRMX_EN.DeleteUserAllBindRequest) As DRMX_EN.DeleteUserAllBindResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/DeleteUser"& _ 
            "AllBind", ReplyAction:="*")>  _
        Function DeleteUserAllBindAsync(ByVal request As DRMX_EN.DeleteUserAllBindRequest) As System.Threading.Tasks.Task(Of DRMX_EN.DeleteUserAllBindResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/getLicense"& _ 
            "RemoteToTableWithVersion", ReplyAction:="*")>  _
        Function getLicenseRemoteToTableWithVersion(ByVal request As DRMX_EN.getLicenseRemoteToTableWithVersionRequest) As DRMX_EN.getLicenseRemoteToTableWithVersionResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/getLicense"& _ 
            "RemoteToTableWithVersion", ReplyAction:="*")>  _
        Function getLicenseRemoteToTableWithVersionAsync(ByVal request As DRMX_EN.getLicenseRemoteToTableWithVersionRequest) As System.Threading.Tasks.Task(Of DRMX_EN.getLicenseRemoteToTableWithVersionResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/getLicense"& _ 
            "RemoteToTableWithVersionWithMac", ReplyAction:="*")>  _
        Function getLicenseRemoteToTableWithVersionWithMac(ByVal request As DRMX_EN.getLicenseRemoteToTableWithVersionWithMacRequest) As DRMX_EN.getLicenseRemoteToTableWithVersionWithMacResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/getLicense"& _ 
            "RemoteToTableWithVersionWithMac", ReplyAction:="*")>  _
        Function getLicenseRemoteToTableWithVersionWithMacAsync(ByVal request As DRMX_EN.getLicenseRemoteToTableWithVersionWithMacRequest) As System.Threading.Tasks.Task(Of DRMX_EN.getLicenseRemoteToTableWithVersionWithMacResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/getLicense"& _ 
            "ForHHMeet", ReplyAction:="*")>  _
        Function getLicenseForHHMeet(ByVal request As DRMX_EN.getLicenseForHHMeetRequest) As DRMX_EN.getLicenseForHHMeetResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/getLicense"& _ 
            "ForHHMeet", ReplyAction:="*")>  _
        Function getLicenseForHHMeetAsync(ByVal request As DRMX_EN.getLicenseForHHMeetRequest) As System.Threading.Tasks.Task(Of DRMX_EN.getLicenseForHHMeetResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/GetLicense"& _ 
            "ProfileDetails", ReplyAction:="*")>  _
        Function GetLicenseProfileDetails(ByVal request As DRMX_EN.GetLicenseProfileDetailsRequest) As DRMX_EN.GetLicenseProfileDetailsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/GetLicense"& _ 
            "ProfileDetails", ReplyAction:="*")>  _
        Function GetLicenseProfileDetailsAsync(ByVal request As DRMX_EN.GetLicenseProfileDetailsRequest) As System.Threading.Tasks.Task(Of DRMX_EN.GetLicenseProfileDetailsResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/GetLicense"& _ 
            "ProfileIDByEncryptID", ReplyAction:="*")>  _
        Function GetLicenseProfileIDByEncryptID(ByVal request As DRMX_EN.GetLicenseProfileIDByEncryptIDRequest) As DRMX_EN.GetLicenseProfileIDByEncryptIDResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/GetLicense"& _ 
            "ProfileIDByEncryptID", ReplyAction:="*")>  _
        Function GetLicenseProfileIDByEncryptIDAsync(ByVal request As DRMX_EN.GetLicenseProfileIDByEncryptIDRequest) As System.Threading.Tasks.Task(Of DRMX_EN.GetLicenseProfileIDByEncryptIDResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/DeleteLice"& _ 
            "nseProfile", ReplyAction:="*")>  _
        Function DeleteLicenseProfile(ByVal request As DRMX_EN.DeleteLicenseProfileRequest) As DRMX_EN.DeleteLicenseProfileResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/DeleteLice"& _ 
            "nseProfile", ReplyAction:="*")>  _
        Function DeleteLicenseProfileAsync(ByVal request As DRMX_EN.DeleteLicenseProfileRequest) As System.Threading.Tasks.Task(Of DRMX_EN.DeleteLicenseProfileResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/AddNewUser"& _ 
            "", ReplyAction:="*")>  _
        Function AddNewUser(ByVal request As DRMX_EN.AddNewUserRequest) As DRMX_EN.AddNewUserResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/AddNewUser"& _ 
            "", ReplyAction:="*")>  _
        Function AddNewUserAsync(ByVal request As DRMX_EN.AddNewUserRequest) As System.Threading.Tasks.Task(Of DRMX_EN.AddNewUserResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/UpdateUser"& _ 
            "", ReplyAction:="*")>  _
        Function UpdateUser(ByVal request As DRMX_EN.UpdateUserRequest) As DRMX_EN.UpdateUserResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/UpdateUser"& _ 
            "", ReplyAction:="*")>  _
        Function UpdateUserAsync(ByVal request As DRMX_EN.UpdateUserRequest) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateUserResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/UpdateUser"& _ 
            "Password", ReplyAction:="*")>  _
        Function UpdateUserPassword(ByVal request As DRMX_EN.UpdateUserPasswordRequest) As DRMX_EN.UpdateUserPasswordResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/UpdateUser"& _ 
            "Password", ReplyAction:="*")>  _
        Function UpdateUserPasswordAsync(ByVal request As DRMX_EN.UpdateUserPasswordRequest) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateUserPasswordResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/UpdateUser"& _ 
            "RevokeSeedIDs", ReplyAction:="*")>  _
        Function UpdateUserRevokeSeedIDs(ByVal request As DRMX_EN.UpdateUserRevokeSeedIDsRequest) As DRMX_EN.UpdateUserRevokeSeedIDsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/UpdateUser"& _ 
            "RevokeSeedIDs", ReplyAction:="*")>  _
        Function UpdateUserRevokeSeedIDsAsync(ByVal request As DRMX_EN.UpdateUserRevokeSeedIDsRequest) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateUserRevokeSeedIDsResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/UpdateUser"& _ 
            "Group", ReplyAction:="*")>  _
        Function UpdateUserGroup(ByVal request As DRMX_EN.UpdateUserGroupRequest) As DRMX_EN.UpdateUserGroupResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/UpdateUser"& _ 
            "Group", ReplyAction:="*")>  _
        Function UpdateUserGroupAsync(ByVal request As DRMX_EN.UpdateUserGroupRequest) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateUserGroupResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/GetUserGro"& _ 
            "upDetails", ReplyAction:="*")>  _
        Function GetUserGroupDetails(ByVal request As DRMX_EN.GetUserGroupDetailsRequest) As DRMX_EN.GetUserGroupDetailsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/GetUserGro"& _ 
            "upDetails", ReplyAction:="*")>  _
        Function GetUserGroupDetailsAsync(ByVal request As DRMX_EN.GetUserGroupDetailsRequest) As System.Threading.Tasks.Task(Of DRMX_EN.GetUserGroupDetailsResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/DeleteUser"& _ 
            "Group", ReplyAction:="*")>  _
        Function DeleteUserGroup(ByVal request As DRMX_EN.DeleteUserGroupRequest) As DRMX_EN.DeleteUserGroupResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/DeleteUser"& _ 
            "Group", ReplyAction:="*")>  _
        Function DeleteUserGroupAsync(ByVal request As DRMX_EN.DeleteUserGroupRequest) As System.Threading.Tasks.Task(Of DRMX_EN.DeleteUserGroupResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/UpdateLice"& _ 
            "nseProfile", ReplyAction:="*")>  _
        Function UpdateLicenseProfile(ByVal request As DRMX_EN.UpdateLicenseProfileRequest) As DRMX_EN.UpdateLicenseProfileResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/UpdateLice"& _ 
            "nseProfile", ReplyAction:="*")>  _
        Function UpdateLicenseProfileAsync(ByVal request As DRMX_EN.UpdateLicenseProfileRequest) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateLicenseProfileResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/UserAddMon"& _ 
            "ey", ReplyAction:="*")>  _
        Function UserAddMoney(ByVal request As DRMX_EN.UserAddMoneyRequest) As DRMX_EN.UserAddMoneyResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/UserAddMon"& _ 
            "ey", ReplyAction:="*")>  _
        Function UserAddMoneyAsync(ByVal request As DRMX_EN.UserAddMoneyRequest) As System.Threading.Tasks.Task(Of DRMX_EN.UserAddMoneyResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/UserAddMon"& _ 
            "eyByUserName", ReplyAction:="*")>  _
        Function UserAddMoneyByUserName(ByVal request As DRMX_EN.UserAddMoneyByUserNameRequest) As DRMX_EN.UserAddMoneyByUserNameResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/UserAddMon"& _ 
            "eyByUserName", ReplyAction:="*")>  _
        Function UserAddMoneyByUserNameAsync(ByVal request As DRMX_EN.UserAddMoneyByUserNameRequest) As System.Threading.Tasks.Task(Of DRMX_EN.UserAddMoneyByUserNameResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/UpdateRigh"& _ 
            "t", ReplyAction:="*")>  _
        Function UpdateRight(ByVal request As DRMX_EN.UpdateRightRequest) As DRMX_EN.UpdateRightResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/UpdateRigh"& _ 
            "t", ReplyAction:="*")>  _
        Function UpdateRightAsync(ByVal request As DRMX_EN.UpdateRightRequest) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateRightResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/UpdateRigh"& _ 
            "tWithDisableVirtualMachine", ReplyAction:="*")>  _
        Function UpdateRightWithDisableVirtualMachine(ByVal request As DRMX_EN.UpdateRightWithDisableVirtualMachineRequest) As DRMX_EN.UpdateRightWithDisableVirtualMachineResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/UpdateRigh"& _ 
            "tWithDisableVirtualMachine", ReplyAction:="*")>  _
        Function UpdateRightWithDisableVirtualMachineAsync(ByVal request As DRMX_EN.UpdateRightWithDisableVirtualMachineRequest) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateRightWithDisableVirtualMachineResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/UpdateRigh"& _ 
            "tWithPrintCount", ReplyAction:="*")>  _
        Function UpdateRightWithPrintCount(ByVal request As DRMX_EN.UpdateRightWithPrintCountRequest) As DRMX_EN.UpdateRightWithPrintCountResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/UpdateRigh"& _ 
            "tWithPrintCount", ReplyAction:="*")>  _
        Function UpdateRightWithPrintCountAsync(ByVal request As DRMX_EN.UpdateRightWithPrintCountRequest) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateRightWithPrintCountResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/AddLicense"& _ 
            "Profile", ReplyAction:="*")>  _
        Function AddLicenseProfile(ByVal request As DRMX_EN.AddLicenseProfileRequest) As DRMX_EN.AddLicenseProfileResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/AddLicense"& _ 
            "Profile", ReplyAction:="*")>  _
        Function AddLicenseProfileAsync(ByVal request As DRMX_EN.AddLicenseProfileRequest) As System.Threading.Tasks.Task(Of DRMX_EN.AddLicenseProfileResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/AddLicense"& _ 
            "ProfileToGroup", ReplyAction:="*")>  _
        Function AddLicenseProfileToGroup(ByVal request As DRMX_EN.AddLicenseProfileToGroupRequest) As DRMX_EN.AddLicenseProfileToGroupResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/AddLicense"& _ 
            "ProfileToGroup", ReplyAction:="*")>  _
        Function AddLicenseProfileToGroupAsync(ByVal request As DRMX_EN.AddLicenseProfileToGroupRequest) As System.Threading.Tasks.Task(Of DRMX_EN.AddLicenseProfileToGroupResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/RemoveLice"& _ 
            "nseProfilesFromGroup", ReplyAction:="*")>  _
        Function RemoveLicenseProfilesFromGroup(ByVal request As DRMX_EN.RemoveLicenseProfilesFromGroupRequest) As DRMX_EN.RemoveLicenseProfilesFromGroupResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/RemoveLice"& _ 
            "nseProfilesFromGroup", ReplyAction:="*")>  _
        Function RemoveLicenseProfilesFromGroupAsync(ByVal request As DRMX_EN.RemoveLicenseProfilesFromGroupRequest) As System.Threading.Tasks.Task(Of DRMX_EN.RemoveLicenseProfilesFromGroupResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/AddRight", ReplyAction:="*")>  _
        Function AddRight(ByVal request As DRMX_EN.AddRightRequest) As DRMX_EN.AddRightResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/AddRight", ReplyAction:="*")>  _
        Function AddRightAsync(ByVal request As DRMX_EN.AddRightRequest) As System.Threading.Tasks.Task(Of DRMX_EN.AddRightResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/AddRightTo"& _ 
            "LicenseProfile", ReplyAction:="*")>  _
        Function AddRightToLicenseProfile(ByVal request As DRMX_EN.AddRightToLicenseProfileRequest) As DRMX_EN.AddRightToLicenseProfileResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/AddRightTo"& _ 
            "LicenseProfile", ReplyAction:="*")>  _
        Function AddRightToLicenseProfileAsync(ByVal request As DRMX_EN.AddRightToLicenseProfileRequest) As System.Threading.Tasks.Task(Of DRMX_EN.AddRightToLicenseProfileResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/RemoveRigh"& _ 
            "tsFromLicenseProfile", ReplyAction:="*")>  _
        Function RemoveRightsFromLicenseProfile(ByVal request As DRMX_EN.RemoveRightsFromLicenseProfileRequest) As DRMX_EN.RemoveRightsFromLicenseProfileResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/RemoveRigh"& _ 
            "tsFromLicenseProfile", ReplyAction:="*")>  _
        Function RemoveRightsFromLicenseProfileAsync(ByVal request As DRMX_EN.RemoveRightsFromLicenseProfileRequest) As System.Threading.Tasks.Task(Of DRMX_EN.RemoveRightsFromLicenseProfileResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 Email 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/aLogin", ReplyAction:="*")>  _
        Function aLogin(ByVal request As DRMX_EN.aLoginRequest) As DRMX_EN.aLoginResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/aLogin", ReplyAction:="*")>  _
        Function aLoginAsync(ByVal request As DRMX_EN.aLoginRequest) As System.Threading.Tasks.Task(Of DRMX_EN.aLoginResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 Email 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/aLogin2", ReplyAction:="*")>  _
        Function aLogin2(ByVal request As DRMX_EN.aLogin2Request) As DRMX_EN.aLogin2Response
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/aLogin2", ReplyAction:="*")>  _
        Function aLogin2Async(ByVal request As DRMX_EN.aLogin2Request) As System.Threading.Tasks.Task(Of DRMX_EN.aLogin2Response)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/WebService"& _ 
            "Login", ReplyAction:="*")>  _
        Function WebServiceLogin(ByVal request As DRMX_EN.WebServiceLoginRequest) As DRMX_EN.WebServiceLoginResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/WebService"& _ 
            "Login", ReplyAction:="*")>  _
        Function WebServiceLoginAsync(ByVal request As DRMX_EN.WebServiceLoginRequest) As System.Threading.Tasks.Task(Of DRMX_EN.WebServiceLoginResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/AddUserGro"& _ 
            "up", ReplyAction:="*")>  _
        Function AddUserGroup(ByVal request As DRMX_EN.AddUserGroupRequest) As DRMX_EN.AddUserGroupResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/AddUserGro"& _ 
            "up", ReplyAction:="*")>  _
        Function AddUserGroupAsync(ByVal request As DRMX_EN.AddUserGroupRequest) As System.Threading.Tasks.Task(Of DRMX_EN.AddUserGroupResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/ListRights"& _ 
            "", ReplyAction:="*")>  _
        Function ListRights(ByVal request As DRMX_EN.ListRightsRequest) As DRMX_EN.ListRightsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/ListRights"& _ 
            "", ReplyAction:="*")>  _
        Function ListRightsAsync(ByVal request As DRMX_EN.ListRightsRequest) As System.Threading.Tasks.Task(Of DRMX_EN.ListRightsResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/ListUserGr"& _ 
            "oups", ReplyAction:="*")>  _
        Function ListUserGroups(ByVal request As DRMX_EN.ListUserGroupsRequest) As DRMX_EN.ListUserGroupsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/ListUserGr"& _ 
            "oups", ReplyAction:="*")>  _
        Function ListUserGroupsAsync(ByVal request As DRMX_EN.ListUserGroupsRequest) As System.Threading.Tasks.Task(Of DRMX_EN.ListUserGroupsResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/ListLicens"& _ 
            "eProfiles", ReplyAction:="*")>  _
        Function ListLicenseProfiles(ByVal request As DRMX_EN.ListLicenseProfilesRequest) As DRMX_EN.ListLicenseProfilesResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/ListLicens"& _ 
            "eProfiles", ReplyAction:="*")>  _
        Function ListLicenseProfilesAsync(ByVal request As DRMX_EN.ListLicenseProfilesRequest) As System.Threading.Tasks.Task(Of DRMX_EN.ListLicenseProfilesResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/ListLicens"& _ 
            "eProfilesAsString", ReplyAction:="*")>  _
        Function ListLicenseProfilesAsString(ByVal request As DRMX_EN.ListLicenseProfilesAsStringRequest) As DRMX_EN.ListLicenseProfilesAsStringResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/ListLicens"& _ 
            "eProfilesAsString", ReplyAction:="*")>  _
        Function ListLicenseProfilesAsStringAsync(ByVal request As DRMX_EN.ListLicenseProfilesAsStringRequest) As System.Threading.Tasks.Task(Of DRMX_EN.ListLicenseProfilesAsStringResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/ListUsers", ReplyAction:="*")>  _
        Function ListUsers(ByVal request As DRMX_EN.ListUsersRequest) As DRMX_EN.ListUsersResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/ListUsers", ReplyAction:="*")>  _
        Function ListUsersAsync(ByVal request As DRMX_EN.ListUsersRequest) As System.Threading.Tasks.Task(Of DRMX_EN.ListUsersResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/ListReport"& _ 
            "s", ReplyAction:="*")>  _
        Function ListReports(ByVal request As DRMX_EN.ListReportsRequest) As DRMX_EN.ListReportsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/ListReport"& _ 
            "s", ReplyAction:="*")>  _
        Function ListReportsAsync(ByVal request As DRMX_EN.ListReportsRequest) As System.Threading.Tasks.Task(Of DRMX_EN.ListReportsResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 Email 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/GetRights", ReplyAction:="*")>  _
        Function GetRights(ByVal request As DRMX_EN.GetRightsRequest) As DRMX_EN.GetRightsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/GetRights", ReplyAction:="*")>  _
        Function GetRightsAsync(ByVal request As DRMX_EN.GetRightsRequest) As System.Threading.Tasks.Task(Of DRMX_EN.GetRightsResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 Email 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/GetRightsR"& _ 
            "eturnString", ReplyAction:="*")>  _
        Function GetRightsReturnString(ByVal request As DRMX_EN.GetRightsReturnStringRequest) As DRMX_EN.GetRightsReturnStringResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/GetRightsR"& _ 
            "eturnString", ReplyAction:="*")>  _
        Function GetRightsReturnStringAsync(ByVal request As DRMX_EN.GetRightsReturnStringRequest) As System.Threading.Tasks.Task(Of DRMX_EN.GetRightsReturnStringResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 Email 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/GetBlockli"& _ 
            "stOfRight", ReplyAction:="*")>  _
        Function GetBlocklistOfRight(ByVal request As DRMX_EN.GetBlocklistOfRightRequest) As DRMX_EN.GetBlocklistOfRightResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/GetBlockli"& _ 
            "stOfRight", ReplyAction:="*")>  _
        Function GetBlocklistOfRightAsync(ByVal request As DRMX_EN.GetBlocklistOfRightRequest) As System.Threading.Tasks.Task(Of DRMX_EN.GetBlocklistOfRightResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 Email 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/DeleteRigh"& _ 
            "t", ReplyAction:="*")>  _
        Function DeleteRight(ByVal request As DRMX_EN.DeleteRightRequest) As DRMX_EN.DeleteRightResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/DeleteRigh"& _ 
            "t", ReplyAction:="*")>  _
        Function DeleteRightAsync(ByVal request As DRMX_EN.DeleteRightRequest) As System.Threading.Tasks.Task(Of DRMX_EN.DeleteRightResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 Email 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/SendEmail", ReplyAction:="*")>  _
        Function SendEmail(ByVal request As DRMX_EN.SendEmailRequest) As DRMX_EN.SendEmailResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/SendEmail", ReplyAction:="*")>  _
        Function SendEmailAsync(ByVal request As DRMX_EN.SendEmailRequest) As System.Threading.Tasks.Task(Of DRMX_EN.SendEmailResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 WebServiceAuthStr 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/AddNewAdmi"& _ 
            "n", ReplyAction:="*")>  _
        Function AddNewAdmin(ByVal request As DRMX_EN.AddNewAdminRequest) As DRMX_EN.AddNewAdminResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/AddNewAdmi"& _ 
            "n", ReplyAction:="*")>  _
        Function AddNewAdminAsync(ByVal request As DRMX_EN.AddNewAdminRequest) As System.Threading.Tasks.Task(Of DRMX_EN.AddNewAdminResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 WebServiceAuthStr 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/UpdateAdmi"& _ 
            "nInfo", ReplyAction:="*")>  _
        Function UpdateAdminInfo(ByVal request As DRMX_EN.UpdateAdminInfoRequest) As DRMX_EN.UpdateAdminInfoResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/UpdateAdmi"& _ 
            "nInfo", ReplyAction:="*")>  _
        Function UpdateAdminInfoAsync(ByVal request As DRMX_EN.UpdateAdminInfoRequest) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateAdminInfoResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 WebServiceAuthStr 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/UpdateAdmi"& _ 
            "nPwd", ReplyAction:="*")>  _
        Function UpdateAdminPwd(ByVal request As DRMX_EN.UpdateAdminPwdRequest) As DRMX_EN.UpdateAdminPwdResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/UpdateAdmi"& _ 
            "nPwd", ReplyAction:="*")>  _
        Function UpdateAdminPwdAsync(ByVal request As DRMX_EN.UpdateAdminPwdRequest) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateAdminPwdResponse)
        
        'CODEGEN: 命名空间 http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService 的元素名称 AdminEmail 以后生成的消息协定未标记为 nillable
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/GetPackage"& _ 
            "rParams", ReplyAction:="*")>  _
        Function GetPackagerParams(ByVal request As DRMX_EN.GetPackagerParamsRequest) As DRMX_EN.GetPackagerParamsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService/GetPackage"& _ 
            "rParams", ReplyAction:="*")>  _
        Function GetPackagerParamsAsync(ByVal request As DRMX_EN.GetPackagerParamsRequest) As System.Threading.Tasks.Task(Of DRMX_EN.GetPackagerParamsResponse)
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UserLoginRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UserLogin", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.UserLoginRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.UserLoginRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class UserLoginRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public UserName As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public Password As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=3)>  _
        Public WebServiceAuthStr As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal UserName As String, ByVal Password As String, ByVal AdminEmail As String, ByVal WebServiceAuthStr As String)
            MyBase.New
            Me.UserName = UserName
            Me.Password = Password
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UserLoginResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UserLoginResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.UserLoginResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.UserLoginResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class UserLoginResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public UserLoginResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal UserLoginResult As String)
            MyBase.New
            Me.UserLoginResult = UserLoginResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class CheckUserExistsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="CheckUserExists", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.CheckUserExistsRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.CheckUserExistsRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class CheckUserExistsRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public UserName As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public WebServiceAuthStr As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal UserName As String, ByVal AdminEmail As String, ByVal WebServiceAuthStr As String)
            MyBase.New
            Me.UserName = UserName
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class CheckUserExistsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="CheckUserExistsResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.CheckUserExistsResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.CheckUserExistsResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class CheckUserExistsResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public CheckUserExistsResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal CheckUserExistsResult As String)
            MyBase.New
            Me.CheckUserExistsResult = CheckUserExistsResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class PEnhancedVFileRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="PEnhancedVFile", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.PEnhancedVFileRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.PEnhancedVFileRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class PEnhancedVFileRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public PID As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public Login As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=3)>  _
        Public WebServiceAuthStr As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal PID As String, ByVal Login As String, ByVal AdminEmail As String, ByVal WebServiceAuthStr As String)
            MyBase.New
            Me.PID = PID
            Me.Login = Login
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class PEnhancedVFileResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="PEnhancedVFileResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.PEnhancedVFileResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.PEnhancedVFileResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class PEnhancedVFileResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public PEnhancedVFileResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal PEnhancedVFileResult As String)
            MyBase.New
            Me.PEnhancedVFileResult = PEnhancedVFileResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UserLoginBySQuestionRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UserLoginBySQuestion", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.UserLoginBySQuestionRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.UserLoginBySQuestionRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class UserLoginBySQuestionRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public UserName As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public Email As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public SQuestion As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=3)>  _
        Public SAnswer As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=4)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=5)>  _
        Public WebServiceAuthStr As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal UserName As String, ByVal Email As String, ByVal SQuestion As String, ByVal SAnswer As String, ByVal AdminEmail As String, ByVal WebServiceAuthStr As String)
            MyBase.New
            Me.UserName = UserName
            Me.Email = Email
            Me.SQuestion = SQuestion
            Me.SAnswer = SAnswer
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UserLoginBySQuestionResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UserLoginBySQuestionResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.UserLoginBySQuestionResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.UserLoginBySQuestionResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class UserLoginBySQuestionResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public UserLoginBySQuestionResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal UserLoginBySQuestionResult As String)
            MyBase.New
            Me.UserLoginBySQuestionResult = UserLoginBySQuestionResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class GetUserDetailsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="GetUserDetails", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.GetUserDetailsRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.GetUserDetailsRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class GetUserDetailsRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public UserLoginName As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal UserLoginName As String)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.UserLoginName = UserLoginName
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class GetUserDetailsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="GetUserDetailsResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.GetUserDetailsResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.GetUserDetailsResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class GetUserDetailsResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public GetUserDetailsResult As DRMX_EN.UserDetails
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetUserDetailsResult As DRMX_EN.UserDetails)
            MyBase.New
            Me.GetUserDetailsResult = GetUserDetailsResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class GetUserDetailsByUserIDRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="GetUserDetailsByUserID", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.GetUserDetailsByUserIDRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.GetUserDetailsByUserIDRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class GetUserDetailsByUserIDRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public UserID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal UserID As String)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.UserID = UserID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class GetUserDetailsByUserIDResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="GetUserDetailsByUserIDResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.GetUserDetailsByUserIDResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.GetUserDetailsByUserIDResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class GetUserDetailsByUserIDResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public GetUserDetailsByUserIDResult As DRMX_EN.UserDetails
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetUserDetailsByUserIDResult As DRMX_EN.UserDetails)
            MyBase.New
            Me.GetUserDetailsByUserIDResult = GetUserDetailsByUserIDResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class GetReportDetailsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="GetReportDetails", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.GetReportDetailsRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.GetReportDetailsRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class GetReportDetailsRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class GetReportDetailsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="GetReportDetailsResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.GetReportDetailsResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.GetReportDetailsResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class GetReportDetailsResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public GetReportDetailsResult As DRMX_EN.ReportDetails
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetReportDetailsResult As DRMX_EN.ReportDetails)
            MyBase.New
            Me.GetReportDetailsResult = GetReportDetailsResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class DeleteUserRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="DeleteUser", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.DeleteUserRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.DeleteUserRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class DeleteUserRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public UserLoginName As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal UserLoginName As String)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.UserLoginName = UserLoginName
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class DeleteUserResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="DeleteUserResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.DeleteUserResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.DeleteUserResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class DeleteUserResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public DeleteUserResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal DeleteUserResult As String)
            MyBase.New
            Me.DeleteUserResult = DeleteUserResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class RevokeEndUserLicenseRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="RevokeEndUserLicense", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.RevokeEndUserLicenseRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.RevokeEndUserLicenseRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class RevokeEndUserLicenseRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public UserLoginName As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=3)>  _
        Public IsRevoke As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal UserLoginName As String, ByVal IsRevoke As String)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.UserLoginName = UserLoginName
            Me.IsRevoke = IsRevoke
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class RevokeEndUserLicenseResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="RevokeEndUserLicenseResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.RevokeEndUserLicenseResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.RevokeEndUserLicenseResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class RevokeEndUserLicenseResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public RevokeEndUserLicenseResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal RevokeEndUserLicenseResult As String)
            MyBase.New
            Me.RevokeEndUserLicenseResult = RevokeEndUserLicenseResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class CheckUserIsRevokedRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="CheckUserIsRevoked", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.CheckUserIsRevokedRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.CheckUserIsRevokedRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class CheckUserIsRevokedRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public UserLoginName As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal UserLoginName As String)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.UserLoginName = UserLoginName
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class CheckUserIsRevokedResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="CheckUserIsRevokedResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.CheckUserIsRevokedResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.CheckUserIsRevokedResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class CheckUserIsRevokedResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public CheckUserIsRevokedResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal CheckUserIsRevokedResult As String)
            MyBase.New
            Me.CheckUserIsRevokedResult = CheckUserIsRevokedResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class CheckUserIsRevokedByLicenseProfileIDRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="CheckUserIsRevokedByLicenseProfileID", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.CheckUserIsRevokedByLicenseProfileIDRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.CheckUserIsRevokedByLicenseProfileIDRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class CheckUserIsRevokedByLicenseProfileIDRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public UserLoginName As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
        Public LicenseProfileID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal UserLoginName As String, ByVal LicenseProfileID As Integer)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.UserLoginName = UserLoginName
            Me.LicenseProfileID = LicenseProfileID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class CheckUserIsRevokedByLicenseProfileIDResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="CheckUserIsRevokedByLicenseProfileIDResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.CheckUserIsRevokedByLicenseProfileIDResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.CheckUserIsRevokedByLicenseProfileIDResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class CheckUserIsRevokedByLicenseProfileIDResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public CheckUserIsRevokedByLicenseProfileIDResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal CheckUserIsRevokedByLicenseProfileIDResult As String)
            MyBase.New
            Me.CheckUserIsRevokedByLicenseProfileIDResult = CheckUserIsRevokedByLicenseProfileIDResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class DeleteUserAllBindRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="DeleteUserAllBind", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.DeleteUserAllBindRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.DeleteUserAllBindRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class DeleteUserAllBindRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public UserLoginName As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal UserLoginName As String)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.UserLoginName = UserLoginName
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class DeleteUserAllBindResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="DeleteUserAllBindResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.DeleteUserAllBindResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.DeleteUserAllBindResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class DeleteUserAllBindResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public DeleteUserAllBindResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal DeleteUserAllBindResult As String)
            MyBase.New
            Me.DeleteUserAllBindResult = DeleteUserAllBindResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class getLicenseRemoteToTableWithVersionRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="getLicenseRemoteToTableWithVersion", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.getLicenseRemoteToTableWithVersionRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.getLicenseRemoteToTableWithVersionRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class getLicenseRemoteToTableWithVersionRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public ProfileID As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=3)>  _
        Public ClientInfo As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=4)>  _
        Public RightsID As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=5)>  _
        Public UserLoginName As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=6)>  _
        Public UserFullName As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=7)>  _
        Public GroupID As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=8)>  _
        Public Message As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=9)>  _
        Public IP As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=10)>  _
        Public Platform As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=11)>  _
        Public ContentType As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=12)>  _
        Public Version As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal ProfileID As String, ByVal ClientInfo As String, ByVal RightsID As String, ByVal UserLoginName As String, ByVal UserFullName As String, ByVal GroupID As String, ByVal Message As String, ByVal IP As String, ByVal Platform As String, ByVal ContentType As String, ByVal Version As String)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.ProfileID = ProfileID
            Me.ClientInfo = ClientInfo
            Me.RightsID = RightsID
            Me.UserLoginName = UserLoginName
            Me.UserFullName = UserFullName
            Me.GroupID = GroupID
            Me.Message = Message
            Me.IP = IP
            Me.Platform = Platform
            Me.ContentType = ContentType
            Me.Version = Version
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class getLicenseRemoteToTableWithVersionResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="getLicenseRemoteToTableWithVersionResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.getLicenseRemoteToTableWithVersionResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.getLicenseRemoteToTableWithVersionResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class getLicenseRemoteToTableWithVersionResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public getLicenseRemoteToTableWithVersionResult As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public Message As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getLicenseRemoteToTableWithVersionResult As String, ByVal Message As String)
            MyBase.New
            Me.getLicenseRemoteToTableWithVersionResult = getLicenseRemoteToTableWithVersionResult
            Me.Message = Message
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class getLicenseRemoteToTableWithVersionWithMacRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="getLicenseRemoteToTableWithVersionWithMac", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.getLicenseRemoteToTableWithVersionWithMacRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.getLicenseRemoteToTableWithVersionWithMacRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class getLicenseRemoteToTableWithVersionWithMacRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public ProfileID As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=3)>  _
        Public ClientInfo As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=4)>  _
        Public RightsID As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=5)>  _
        Public UserLoginName As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=6)>  _
        Public UserFullName As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=7)>  _
        Public GroupID As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=8)>  _
        Public Message As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=9)>  _
        Public IP As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=10)>  _
        Public Platform As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=11)>  _
        Public ContentType As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=12)>  _
        Public Version As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=13)>  _
        Public Mac As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal ProfileID As String, ByVal ClientInfo As String, ByVal RightsID As String, ByVal UserLoginName As String, ByVal UserFullName As String, ByVal GroupID As String, ByVal Message As String, ByVal IP As String, ByVal Platform As String, ByVal ContentType As String, ByVal Version As String, ByVal Mac As String)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.ProfileID = ProfileID
            Me.ClientInfo = ClientInfo
            Me.RightsID = RightsID
            Me.UserLoginName = UserLoginName
            Me.UserFullName = UserFullName
            Me.GroupID = GroupID
            Me.Message = Message
            Me.IP = IP
            Me.Platform = Platform
            Me.ContentType = ContentType
            Me.Version = Version
            Me.Mac = Mac
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class getLicenseRemoteToTableWithVersionWithMacResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="getLicenseRemoteToTableWithVersionWithMacResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.getLicenseRemoteToTableWithVersionWithMacResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.getLicenseRemoteToTableWithVersionWithMacResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class getLicenseRemoteToTableWithVersionWithMacResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public getLicenseRemoteToTableWithVersionWithMacResult As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public Message As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getLicenseRemoteToTableWithVersionWithMacResult As String, ByVal Message As String)
            MyBase.New
            Me.getLicenseRemoteToTableWithVersionWithMacResult = getLicenseRemoteToTableWithVersionWithMacResult
            Me.Message = Message
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class getLicenseForHHMeetRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="getLicenseForHHMeet", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.getLicenseForHHMeetRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.getLicenseForHHMeetRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class getLicenseForHHMeetRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public ProfileID As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=3)>  _
        Public ClientInfo As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=4)>  _
        Public RightsID As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=5)>  _
        Public UserLoginName As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=6)>  _
        Public UserFullName As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=7)>  _
        Public GroupID As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=8)>  _
        Public Message As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=9)>  _
        Public IP As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=10)>  _
        Public Platform As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=11)>  _
        Public ContentType As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=12)>  _
        Public Version As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal ProfileID As String, ByVal ClientInfo As String, ByVal RightsID As String, ByVal UserLoginName As String, ByVal UserFullName As String, ByVal GroupID As String, ByVal Message As String, ByVal IP As String, ByVal Platform As String, ByVal ContentType As String, ByVal Version As String)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.ProfileID = ProfileID
            Me.ClientInfo = ClientInfo
            Me.RightsID = RightsID
            Me.UserLoginName = UserLoginName
            Me.UserFullName = UserFullName
            Me.GroupID = GroupID
            Me.Message = Message
            Me.IP = IP
            Me.Platform = Platform
            Me.ContentType = ContentType
            Me.Version = Version
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class getLicenseForHHMeetResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="getLicenseForHHMeetResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.getLicenseForHHMeetResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.getLicenseForHHMeetResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class getLicenseForHHMeetResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public getLicenseForHHMeetResult As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public Message As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getLicenseForHHMeetResult As String, ByVal Message As String)
            MyBase.New
            Me.getLicenseForHHMeetResult = getLicenseForHHMeetResult
            Me.Message = Message
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class GetLicenseProfileDetailsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="GetLicenseProfileDetails", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.GetLicenseProfileDetailsRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.GetLicenseProfileDetailsRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class GetLicenseProfileDetailsRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public ProfileID As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=3)>  _
        Public ProfileName As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=4)>  _
        Public YourProductID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal ProfileID As String, ByVal ProfileName As String, ByVal YourProductID As String)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.ProfileID = ProfileID
            Me.ProfileName = ProfileName
            Me.YourProductID = YourProductID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class GetLicenseProfileDetailsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="GetLicenseProfileDetailsResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.GetLicenseProfileDetailsResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.GetLicenseProfileDetailsResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class GetLicenseProfileDetailsResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public GetLicenseProfileDetailsResult As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public ProfileName As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public YourProductID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetLicenseProfileDetailsResult As String, ByVal ProfileName As String, ByVal YourProductID As String)
            MyBase.New
            Me.GetLicenseProfileDetailsResult = GetLicenseProfileDetailsResult
            Me.ProfileName = ProfileName
            Me.YourProductID = YourProductID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class GetLicenseProfileIDByEncryptIDRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="GetLicenseProfileIDByEncryptID", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.GetLicenseProfileIDByEncryptIDRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.GetLicenseProfileIDByEncryptIDRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class GetLicenseProfileIDByEncryptIDRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public EncryptedProfileID As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=3)>  _
        Public Pass As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal EncryptedProfileID As String, ByVal Pass As String)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.EncryptedProfileID = EncryptedProfileID
            Me.Pass = Pass
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class GetLicenseProfileIDByEncryptIDResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="GetLicenseProfileIDByEncryptIDResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.GetLicenseProfileIDByEncryptIDResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.GetLicenseProfileIDByEncryptIDResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class GetLicenseProfileIDByEncryptIDResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public GetLicenseProfileIDByEncryptIDResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetLicenseProfileIDByEncryptIDResult As String)
            MyBase.New
            Me.GetLicenseProfileIDByEncryptIDResult = GetLicenseProfileIDByEncryptIDResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class DeleteLicenseProfileRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="DeleteLicenseProfile", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.DeleteLicenseProfileRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.DeleteLicenseProfileRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class DeleteLicenseProfileRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
        Public ProfileID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal ProfileID As Integer)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.ProfileID = ProfileID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class DeleteLicenseProfileResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="DeleteLicenseProfileResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.DeleteLicenseProfileResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.DeleteLicenseProfileResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class DeleteLicenseProfileResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public DeleteLicenseProfileResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal DeleteLicenseProfileResult As String)
            MyBase.New
            Me.DeleteLicenseProfileResult = DeleteLicenseProfileResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class AddNewUserRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="AddNewUser", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.AddNewUserRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.AddNewUserRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class AddNewUserRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public GroupID As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=3)>  _
        Public UserLoginName As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=4)>  _
        Public UserPassword As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=5)>  _
        Public UserEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=6)>  _
        Public UserFullName As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=7)>  _
        Public Title As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=8)>  _
        Public Company As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=9)>  _
        Public Address As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=10)>  _
        Public City As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=11)>  _
        Public Province As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=12)>  _
        Public ZipCode As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=13)>  _
        Public Phone As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=14)>  _
        Public CompanyURL As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=15)>  _
        Public SecurityQuestion As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=16)>  _
        Public SecurityAnswer As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=17)>  _
        Public IP As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=18)>  _
        Public Money As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=19)>  _
        Public BindNumber As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=20)>  _
        Public IsApproved As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=21)>  _
        Public IsLockedOut As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New( _
                    ByVal AdminEmail As String,  _
                    ByVal WebServiceAuthStr As String,  _
                    ByVal GroupID As String,  _
                    ByVal UserLoginName As String,  _
                    ByVal UserPassword As String,  _
                    ByVal UserEmail As String,  _
                    ByVal UserFullName As String,  _
                    ByVal Title As String,  _
                    ByVal Company As String,  _
                    ByVal Address As String,  _
                    ByVal City As String,  _
                    ByVal Province As String,  _
                    ByVal ZipCode As String,  _
                    ByVal Phone As String,  _
                    ByVal CompanyURL As String,  _
                    ByVal SecurityQuestion As String,  _
                    ByVal SecurityAnswer As String,  _
                    ByVal IP As String,  _
                    ByVal Money As String,  _
                    ByVal BindNumber As String,  _
                    ByVal IsApproved As String,  _
                    ByVal IsLockedOut As String)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.GroupID = GroupID
            Me.UserLoginName = UserLoginName
            Me.UserPassword = UserPassword
            Me.UserEmail = UserEmail
            Me.UserFullName = UserFullName
            Me.Title = Title
            Me.Company = Company
            Me.Address = Address
            Me.City = City
            Me.Province = Province
            Me.ZipCode = ZipCode
            Me.Phone = Phone
            Me.CompanyURL = CompanyURL
            Me.SecurityQuestion = SecurityQuestion
            Me.SecurityAnswer = SecurityAnswer
            Me.IP = IP
            Me.Money = Money
            Me.BindNumber = BindNumber
            Me.IsApproved = IsApproved
            Me.IsLockedOut = IsLockedOut
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class AddNewUserResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="AddNewUserResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.AddNewUserResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.AddNewUserResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class AddNewUserResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AddNewUserResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AddNewUserResult As String)
            MyBase.New
            Me.AddNewUserResult = AddNewUserResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UpdateUserRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UpdateUser", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.UpdateUserRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.UpdateUserRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class UpdateUserRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public GroupID As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=3)>  _
        Public UserLoginName As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=4)>  _
        Public UserPassword As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=5)>  _
        Public UserEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=6)>  _
        Public UserFullName As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=7)>  _
        Public Title As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=8)>  _
        Public Company As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=9)>  _
        Public Address As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=10)>  _
        Public City As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=11)>  _
        Public Province As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=12)>  _
        Public ZipCode As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=13)>  _
        Public Phone As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=14)>  _
        Public CompanyURL As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=15)>  _
        Public SecurityQuestion As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=16)>  _
        Public SecurityAnswer As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=17)>  _
        Public IP As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=18)>  _
        Public BindNumber As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=19)>  _
        Public IsApproved As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=20)>  _
        Public IsLockedOut As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New( _
                    ByVal AdminEmail As String,  _
                    ByVal WebServiceAuthStr As String,  _
                    ByVal GroupID As String,  _
                    ByVal UserLoginName As String,  _
                    ByVal UserPassword As String,  _
                    ByVal UserEmail As String,  _
                    ByVal UserFullName As String,  _
                    ByVal Title As String,  _
                    ByVal Company As String,  _
                    ByVal Address As String,  _
                    ByVal City As String,  _
                    ByVal Province As String,  _
                    ByVal ZipCode As String,  _
                    ByVal Phone As String,  _
                    ByVal CompanyURL As String,  _
                    ByVal SecurityQuestion As String,  _
                    ByVal SecurityAnswer As String,  _
                    ByVal IP As String,  _
                    ByVal BindNumber As String,  _
                    ByVal IsApproved As String,  _
                    ByVal IsLockedOut As String)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.GroupID = GroupID
            Me.UserLoginName = UserLoginName
            Me.UserPassword = UserPassword
            Me.UserEmail = UserEmail
            Me.UserFullName = UserFullName
            Me.Title = Title
            Me.Company = Company
            Me.Address = Address
            Me.City = City
            Me.Province = Province
            Me.ZipCode = ZipCode
            Me.Phone = Phone
            Me.CompanyURL = CompanyURL
            Me.SecurityQuestion = SecurityQuestion
            Me.SecurityAnswer = SecurityAnswer
            Me.IP = IP
            Me.BindNumber = BindNumber
            Me.IsApproved = IsApproved
            Me.IsLockedOut = IsLockedOut
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UpdateUserResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UpdateUserResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.UpdateUserResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.UpdateUserResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class UpdateUserResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public UpdateUserResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal UpdateUserResult As String)
            MyBase.New
            Me.UpdateUserResult = UpdateUserResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UpdateUserPasswordRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UpdateUserPassword", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.UpdateUserPasswordRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.UpdateUserPasswordRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class UpdateUserPasswordRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public UserLoginName As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=3)>  _
        Public UserPassword As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal UserLoginName As String, ByVal UserPassword As String)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.UserLoginName = UserLoginName
            Me.UserPassword = UserPassword
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UpdateUserPasswordResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UpdateUserPasswordResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.UpdateUserPasswordResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.UpdateUserPasswordResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class UpdateUserPasswordResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public UpdateUserPasswordResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal UpdateUserPasswordResult As String)
            MyBase.New
            Me.UpdateUserPasswordResult = UpdateUserPasswordResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UpdateUserRevokeSeedIDsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UpdateUserRevokeSeedIDs", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.UpdateUserRevokeSeedIDsRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.UpdateUserRevokeSeedIDsRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class UpdateUserRevokeSeedIDsRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public UserLoginName As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=3)>  _
        Public RevokeSeedIDs As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal UserLoginName As String, ByVal RevokeSeedIDs As String)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.UserLoginName = UserLoginName
            Me.RevokeSeedIDs = RevokeSeedIDs
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UpdateUserRevokeSeedIDsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UpdateUserRevokeSeedIDsResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.UpdateUserRevokeSeedIDsResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.UpdateUserRevokeSeedIDsResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class UpdateUserRevokeSeedIDsResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public UpdateUserRevokeSeedIDsResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal UpdateUserRevokeSeedIDsResult As String)
            MyBase.New
            Me.UpdateUserRevokeSeedIDsResult = UpdateUserRevokeSeedIDsResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UpdateUserGroupRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UpdateUserGroup", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.UpdateUserGroupRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.UpdateUserGroupRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class UpdateUserGroupRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
        Public GroupID As Integer
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=3)>  _
        Public GroupName As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=4)>  _
        Public IP1 As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=5)>  _
        Public IP2 As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
        Public RequireLogin As Boolean
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
        Public CustomerID As Integer
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
        Public BindNum As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal GroupID As Integer, ByVal GroupName As String, ByVal IP1 As String, ByVal IP2 As String, ByVal RequireLogin As Boolean, ByVal CustomerID As Integer, ByVal BindNum As Integer)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.GroupID = GroupID
            Me.GroupName = GroupName
            Me.IP1 = IP1
            Me.IP2 = IP2
            Me.RequireLogin = RequireLogin
            Me.CustomerID = CustomerID
            Me.BindNum = BindNum
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UpdateUserGroupResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UpdateUserGroupResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.UpdateUserGroupResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.UpdateUserGroupResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class UpdateUserGroupResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public UpdateUserGroupResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal UpdateUserGroupResult As String)
            MyBase.New
            Me.UpdateUserGroupResult = UpdateUserGroupResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class GetUserGroupDetailsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="GetUserGroupDetails", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.GetUserGroupDetailsRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.GetUserGroupDetailsRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class GetUserGroupDetailsRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
        Public GroupID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal GroupID As Integer)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.GroupID = GroupID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class GetUserGroupDetailsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="GetUserGroupDetailsResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.GetUserGroupDetailsResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.GetUserGroupDetailsResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class GetUserGroupDetailsResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public GetUserGroupDetailsResult As DRMX_EN.GroupDetails
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetUserGroupDetailsResult As DRMX_EN.GroupDetails)
            MyBase.New
            Me.GetUserGroupDetailsResult = GetUserGroupDetailsResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class DeleteUserGroupRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="DeleteUserGroup", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.DeleteUserGroupRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.DeleteUserGroupRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class DeleteUserGroupRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
        Public GroupID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal GroupID As Integer)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.GroupID = GroupID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class DeleteUserGroupResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="DeleteUserGroupResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.DeleteUserGroupResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.DeleteUserGroupResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class DeleteUserGroupResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public DeleteUserGroupResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal DeleteUserGroupResult As String)
            MyBase.New
            Me.DeleteUserGroupResult = DeleteUserGroupResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UpdateLicenseProfileRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UpdateLicenseProfile", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.UpdateLicenseProfileRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.UpdateLicenseProfileRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class UpdateLicenseProfileRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public ProfileID As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=3)>  _
        Public ProfileName As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=4)>  _
        Public YourProductID As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=5)>  _
        Public SecurityVersion As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal ProfileID As String, ByVal ProfileName As String, ByVal YourProductID As String, ByVal SecurityVersion As String)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.ProfileID = ProfileID
            Me.ProfileName = ProfileName
            Me.YourProductID = YourProductID
            Me.SecurityVersion = SecurityVersion
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UpdateLicenseProfileResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UpdateLicenseProfileResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.UpdateLicenseProfileResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.UpdateLicenseProfileResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class UpdateLicenseProfileResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public UpdateLicenseProfileResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal UpdateLicenseProfileResult As String)
            MyBase.New
            Me.UpdateLicenseProfileResult = UpdateLicenseProfileResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UserAddMoneyRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UserAddMoney", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.UserAddMoneyRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.UserAddMoneyRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class UserAddMoneyRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public Money As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=3)>  _
        Public UserEmail As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal Money As String, ByVal UserEmail As String)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.Money = Money
            Me.UserEmail = UserEmail
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UserAddMoneyResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UserAddMoneyResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.UserAddMoneyResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.UserAddMoneyResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class UserAddMoneyResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public UserAddMoneyResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal UserAddMoneyResult As String)
            MyBase.New
            Me.UserAddMoneyResult = UserAddMoneyResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UserAddMoneyByUserNameRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UserAddMoneyByUserName", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.UserAddMoneyByUserNameRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.UserAddMoneyByUserNameRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class UserAddMoneyByUserNameRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public Money As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=3)>  _
        Public UserName As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal Money As String, ByVal UserName As String)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.Money = Money
            Me.UserName = UserName
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UserAddMoneyByUserNameResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UserAddMoneyByUserNameResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.UserAddMoneyByUserNameResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.UserAddMoneyByUserNameResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class UserAddMoneyByUserNameResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public UserAddMoneyByUserNameResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal UserAddMoneyByUserNameResult As String)
            MyBase.New
            Me.UserAddMoneyByUserNameResult = UserAddMoneyByUserNameResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UpdateRightRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UpdateRight", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.UpdateRightRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.UpdateRightRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class UpdateRightRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public RightsID As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=3)>  _
        Public Description As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=4)>  _
        Public PlayCount As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=5)>  _
        Public BeginDate As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=6)>  _
        Public ExpirationDate As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=7)>  _
        Public ExpirationAfterFirstUse As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=8)>  _
        Public RightsPrice As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=9)>  _
        Public AllowPrint As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=10)>  _
        Public AllowClipBoard As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=11)>  _
        Public AllowDoc As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=12)>  _
        Public EnableWatermark As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=13)>  _
        Public WatermarkText As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=14)>  _
        Public WatermarkArea As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=15)>  _
        Public RandomChangeArea As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=16)>  _
        Public RandomFrquency As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=17)>  _
        Public EnableBlacklist As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=18)>  _
        Public EnableWhitelist As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=19)>  _
        Public ExpireTimeUnit As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=20)>  _
        Public PreviewTime As Integer
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=21)>  _
        Public PreviewTimeUnit As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=22)>  _
        Public PreviewPage As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New( _
                    ByVal AdminEmail As String,  _
                    ByVal WebServiceAuthStr As String,  _
                    ByVal RightsID As String,  _
                    ByVal Description As String,  _
                    ByVal PlayCount As String,  _
                    ByVal BeginDate As String,  _
                    ByVal ExpirationDate As String,  _
                    ByVal ExpirationAfterFirstUse As String,  _
                    ByVal RightsPrice As String,  _
                    ByVal AllowPrint As String,  _
                    ByVal AllowClipBoard As String,  _
                    ByVal AllowDoc As String,  _
                    ByVal EnableWatermark As String,  _
                    ByVal WatermarkText As String,  _
                    ByVal WatermarkArea As String,  _
                    ByVal RandomChangeArea As String,  _
                    ByVal RandomFrquency As String,  _
                    ByVal EnableBlacklist As String,  _
                    ByVal EnableWhitelist As String,  _
                    ByVal ExpireTimeUnit As String,  _
                    ByVal PreviewTime As Integer,  _
                    ByVal PreviewTimeUnit As String,  _
                    ByVal PreviewPage As Integer)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.RightsID = RightsID
            Me.Description = Description
            Me.PlayCount = PlayCount
            Me.BeginDate = BeginDate
            Me.ExpirationDate = ExpirationDate
            Me.ExpirationAfterFirstUse = ExpirationAfterFirstUse
            Me.RightsPrice = RightsPrice
            Me.AllowPrint = AllowPrint
            Me.AllowClipBoard = AllowClipBoard
            Me.AllowDoc = AllowDoc
            Me.EnableWatermark = EnableWatermark
            Me.WatermarkText = WatermarkText
            Me.WatermarkArea = WatermarkArea
            Me.RandomChangeArea = RandomChangeArea
            Me.RandomFrquency = RandomFrquency
            Me.EnableBlacklist = EnableBlacklist
            Me.EnableWhitelist = EnableWhitelist
            Me.ExpireTimeUnit = ExpireTimeUnit
            Me.PreviewTime = PreviewTime
            Me.PreviewTimeUnit = PreviewTimeUnit
            Me.PreviewPage = PreviewPage
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UpdateRightResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UpdateRightResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.UpdateRightResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.UpdateRightResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class UpdateRightResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public UpdateRightResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal UpdateRightResult As String)
            MyBase.New
            Me.UpdateRightResult = UpdateRightResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UpdateRightWithDisableVirtualMachineRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UpdateRightWithDisableVirtualMachine", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.UpdateRightWithDisableVirtualMachineRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.UpdateRightWithDisableVirtualMachineRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class UpdateRightWithDisableVirtualMachineRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public RightsID As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=3)>  _
        Public Description As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=4)>  _
        Public PlayCount As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=5)>  _
        Public BeginDate As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=6)>  _
        Public ExpirationDate As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=7)>  _
        Public ExpirationAfterFirstUse As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=8)>  _
        Public RightsPrice As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=9)>  _
        Public AllowPrint As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=10)>  _
        Public AllowClipBoard As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=11)>  _
        Public AllowDoc As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=12)>  _
        Public EnableWatermark As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=13)>  _
        Public WatermarkText As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=14)>  _
        Public WatermarkArea As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=15)>  _
        Public RandomChangeArea As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=16)>  _
        Public RandomFrquency As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=17)>  _
        Public EnableBlacklist As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=18)>  _
        Public EnableWhitelist As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=19)>  _
        Public ExpireTimeUnit As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=20)>  _
        Public PreviewTime As Integer
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=21)>  _
        Public PreviewTimeUnit As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=22)>  _
        Public PreviewPage As Integer
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=23)>  _
        Public DisableVirtualMachine As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New( _
                    ByVal AdminEmail As String,  _
                    ByVal WebServiceAuthStr As String,  _
                    ByVal RightsID As String,  _
                    ByVal Description As String,  _
                    ByVal PlayCount As String,  _
                    ByVal BeginDate As String,  _
                    ByVal ExpirationDate As String,  _
                    ByVal ExpirationAfterFirstUse As String,  _
                    ByVal RightsPrice As String,  _
                    ByVal AllowPrint As String,  _
                    ByVal AllowClipBoard As String,  _
                    ByVal AllowDoc As String,  _
                    ByVal EnableWatermark As String,  _
                    ByVal WatermarkText As String,  _
                    ByVal WatermarkArea As String,  _
                    ByVal RandomChangeArea As String,  _
                    ByVal RandomFrquency As String,  _
                    ByVal EnableBlacklist As String,  _
                    ByVal EnableWhitelist As String,  _
                    ByVal ExpireTimeUnit As String,  _
                    ByVal PreviewTime As Integer,  _
                    ByVal PreviewTimeUnit As String,  _
                    ByVal PreviewPage As Integer,  _
                    ByVal DisableVirtualMachine As String)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.RightsID = RightsID
            Me.Description = Description
            Me.PlayCount = PlayCount
            Me.BeginDate = BeginDate
            Me.ExpirationDate = ExpirationDate
            Me.ExpirationAfterFirstUse = ExpirationAfterFirstUse
            Me.RightsPrice = RightsPrice
            Me.AllowPrint = AllowPrint
            Me.AllowClipBoard = AllowClipBoard
            Me.AllowDoc = AllowDoc
            Me.EnableWatermark = EnableWatermark
            Me.WatermarkText = WatermarkText
            Me.WatermarkArea = WatermarkArea
            Me.RandomChangeArea = RandomChangeArea
            Me.RandomFrquency = RandomFrquency
            Me.EnableBlacklist = EnableBlacklist
            Me.EnableWhitelist = EnableWhitelist
            Me.ExpireTimeUnit = ExpireTimeUnit
            Me.PreviewTime = PreviewTime
            Me.PreviewTimeUnit = PreviewTimeUnit
            Me.PreviewPage = PreviewPage
            Me.DisableVirtualMachine = DisableVirtualMachine
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UpdateRightWithDisableVirtualMachineResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UpdateRightWithDisableVirtualMachineResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.UpdateRightWithDisableVirtualMachineResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.UpdateRightWithDisableVirtualMachineResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class UpdateRightWithDisableVirtualMachineResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public UpdateRightWithDisableVirtualMachineResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal UpdateRightWithDisableVirtualMachineResult As String)
            MyBase.New
            Me.UpdateRightWithDisableVirtualMachineResult = UpdateRightWithDisableVirtualMachineResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UpdateRightWithPrintCountRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UpdateRightWithPrintCount", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.UpdateRightWithPrintCountRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.UpdateRightWithPrintCountRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class UpdateRightWithPrintCountRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public RightsID As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=3)>  _
        Public Description As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=4)>  _
        Public PlayCount As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=5)>  _
        Public BeginDate As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=6)>  _
        Public ExpirationDate As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=7)>  _
        Public ExpirationAfterFirstUse As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=8)>  _
        Public RightsPrice As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=9)>  _
        Public AllowPrint As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=10)>  _
        Public AllowClipBoard As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=11)>  _
        Public AllowDoc As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=12)>  _
        Public EnableWatermark As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=13)>  _
        Public WatermarkText As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=14)>  _
        Public WatermarkArea As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=15)>  _
        Public RandomChangeArea As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=16)>  _
        Public RandomFrquency As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=17)>  _
        Public EnableBlacklist As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=18)>  _
        Public EnableWhitelist As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=19)>  _
        Public PrintCount As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=20)>  _
        Public DisableVirtualPrinter As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=21)>  _
        Public ExpireTimeUnit As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=22)>  _
        Public PreviewTime As Integer
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=23)>  _
        Public PreviewTimeUnit As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=24)>  _
        Public PreviewPage As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New( _
                    ByVal AdminEmail As String,  _
                    ByVal WebServiceAuthStr As String,  _
                    ByVal RightsID As String,  _
                    ByVal Description As String,  _
                    ByVal PlayCount As String,  _
                    ByVal BeginDate As String,  _
                    ByVal ExpirationDate As String,  _
                    ByVal ExpirationAfterFirstUse As String,  _
                    ByVal RightsPrice As String,  _
                    ByVal AllowPrint As String,  _
                    ByVal AllowClipBoard As String,  _
                    ByVal AllowDoc As String,  _
                    ByVal EnableWatermark As String,  _
                    ByVal WatermarkText As String,  _
                    ByVal WatermarkArea As String,  _
                    ByVal RandomChangeArea As String,  _
                    ByVal RandomFrquency As String,  _
                    ByVal EnableBlacklist As String,  _
                    ByVal EnableWhitelist As String,  _
                    ByVal PrintCount As String,  _
                    ByVal DisableVirtualPrinter As String,  _
                    ByVal ExpireTimeUnit As String,  _
                    ByVal PreviewTime As Integer,  _
                    ByVal PreviewTimeUnit As String,  _
                    ByVal PreviewPage As Integer)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.RightsID = RightsID
            Me.Description = Description
            Me.PlayCount = PlayCount
            Me.BeginDate = BeginDate
            Me.ExpirationDate = ExpirationDate
            Me.ExpirationAfterFirstUse = ExpirationAfterFirstUse
            Me.RightsPrice = RightsPrice
            Me.AllowPrint = AllowPrint
            Me.AllowClipBoard = AllowClipBoard
            Me.AllowDoc = AllowDoc
            Me.EnableWatermark = EnableWatermark
            Me.WatermarkText = WatermarkText
            Me.WatermarkArea = WatermarkArea
            Me.RandomChangeArea = RandomChangeArea
            Me.RandomFrquency = RandomFrquency
            Me.EnableBlacklist = EnableBlacklist
            Me.EnableWhitelist = EnableWhitelist
            Me.PrintCount = PrintCount
            Me.DisableVirtualPrinter = DisableVirtualPrinter
            Me.ExpireTimeUnit = ExpireTimeUnit
            Me.PreviewTime = PreviewTime
            Me.PreviewTimeUnit = PreviewTimeUnit
            Me.PreviewPage = PreviewPage
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UpdateRightWithPrintCountResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UpdateRightWithPrintCountResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.UpdateRightWithPrintCountResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.UpdateRightWithPrintCountResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class UpdateRightWithPrintCountResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public UpdateRightWithPrintCountResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal UpdateRightWithPrintCountResult As String)
            MyBase.New
            Me.UpdateRightWithPrintCountResult = UpdateRightWithPrintCountResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class AddLicenseProfileRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="AddLicenseProfile", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.AddLicenseProfileRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.AddLicenseProfileRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class AddLicenseProfileRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public ProfileName As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=3)>  _
        Public YourProductID As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=4)>  _
        Public ForceInternet As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal ProfileName As String, ByVal YourProductID As String, ByVal ForceInternet As String)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.ProfileName = ProfileName
            Me.YourProductID = YourProductID
            Me.ForceInternet = ForceInternet
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class AddLicenseProfileResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="AddLicenseProfileResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.AddLicenseProfileResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.AddLicenseProfileResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class AddLicenseProfileResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AddLicenseProfileResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AddLicenseProfileResult As String)
            MyBase.New
            Me.AddLicenseProfileResult = AddLicenseProfileResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class AddLicenseProfileToGroupRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="AddLicenseProfileToGroup", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.AddLicenseProfileToGroupRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.AddLicenseProfileToGroupRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class AddLicenseProfileToGroupRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
        Public LicenseProfileID As Integer
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
        Public GroupID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal LicenseProfileID As Integer, ByVal GroupID As Integer)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.LicenseProfileID = LicenseProfileID
            Me.GroupID = GroupID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class AddLicenseProfileToGroupResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="AddLicenseProfileToGroupResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.AddLicenseProfileToGroupResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.AddLicenseProfileToGroupResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class AddLicenseProfileToGroupResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AddLicenseProfileToGroupResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AddLicenseProfileToGroupResult As String)
            MyBase.New
            Me.AddLicenseProfileToGroupResult = AddLicenseProfileToGroupResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class RemoveLicenseProfilesFromGroupRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="RemoveLicenseProfilesFromGroup", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.RemoveLicenseProfilesFromGroupRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.RemoveLicenseProfilesFromGroupRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class RemoveLicenseProfilesFromGroupRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
        Public GroupID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal GroupID As Integer)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.GroupID = GroupID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class RemoveLicenseProfilesFromGroupResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="RemoveLicenseProfilesFromGroupResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.RemoveLicenseProfilesFromGroupResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.RemoveLicenseProfilesFromGroupResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class RemoveLicenseProfilesFromGroupResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public RemoveLicenseProfilesFromGroupResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal RemoveLicenseProfilesFromGroupResult As String)
            MyBase.New
            Me.RemoveLicenseProfilesFromGroupResult = RemoveLicenseProfilesFromGroupResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class AddRightRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="AddRight", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.AddRightRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.AddRightRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class AddRightRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public Description As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=3)>  _
        Public PlayCount As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=4)>  _
        Public BeginDate As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=5)>  _
        Public ExpirationDate As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=6)>  _
        Public ExpirationAfterFirstUse As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=7)>  _
        Public RightsPrice As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=8)>  _
        Public AllowPrint As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=9)>  _
        Public AllowClipBoard As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=10)>  _
        Public AllowDoc As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=11)>  _
        Public EnableWatermark As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=12)>  _
        Public WatermarkText As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=13)>  _
        Public WatermarkArea As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=14)>  _
        Public RandomChangeArea As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=15)>  _
        Public RandomFrquency As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=16)>  _
        Public EnableBlacklist As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=17)>  _
        Public EnableWhitelist As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=18)>  _
        Public ExpireTimeUnit As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=19)>  _
        Public PreviewTime As Integer
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=20)>  _
        Public PreviewTimeUnit As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=21)>  _
        Public PreviewPage As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New( _
                    ByVal AdminEmail As String,  _
                    ByVal WebServiceAuthStr As String,  _
                    ByVal Description As String,  _
                    ByVal PlayCount As String,  _
                    ByVal BeginDate As String,  _
                    ByVal ExpirationDate As String,  _
                    ByVal ExpirationAfterFirstUse As String,  _
                    ByVal RightsPrice As String,  _
                    ByVal AllowPrint As String,  _
                    ByVal AllowClipBoard As String,  _
                    ByVal AllowDoc As String,  _
                    ByVal EnableWatermark As String,  _
                    ByVal WatermarkText As String,  _
                    ByVal WatermarkArea As String,  _
                    ByVal RandomChangeArea As String,  _
                    ByVal RandomFrquency As String,  _
                    ByVal EnableBlacklist As String,  _
                    ByVal EnableWhitelist As String,  _
                    ByVal ExpireTimeUnit As String,  _
                    ByVal PreviewTime As Integer,  _
                    ByVal PreviewTimeUnit As String,  _
                    ByVal PreviewPage As Integer)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.Description = Description
            Me.PlayCount = PlayCount
            Me.BeginDate = BeginDate
            Me.ExpirationDate = ExpirationDate
            Me.ExpirationAfterFirstUse = ExpirationAfterFirstUse
            Me.RightsPrice = RightsPrice
            Me.AllowPrint = AllowPrint
            Me.AllowClipBoard = AllowClipBoard
            Me.AllowDoc = AllowDoc
            Me.EnableWatermark = EnableWatermark
            Me.WatermarkText = WatermarkText
            Me.WatermarkArea = WatermarkArea
            Me.RandomChangeArea = RandomChangeArea
            Me.RandomFrquency = RandomFrquency
            Me.EnableBlacklist = EnableBlacklist
            Me.EnableWhitelist = EnableWhitelist
            Me.ExpireTimeUnit = ExpireTimeUnit
            Me.PreviewTime = PreviewTime
            Me.PreviewTimeUnit = PreviewTimeUnit
            Me.PreviewPage = PreviewPage
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class AddRightResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="AddRightResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.AddRightResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.AddRightResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class AddRightResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AddRightResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AddRightResult As String)
            MyBase.New
            Me.AddRightResult = AddRightResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class AddRightToLicenseProfileRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="AddRightToLicenseProfile", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.AddRightToLicenseProfileRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.AddRightToLicenseProfileRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class AddRightToLicenseProfileRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
        Public RightID As Integer
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
        Public LicenseProfileID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal RightID As Integer, ByVal LicenseProfileID As Integer)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.RightID = RightID
            Me.LicenseProfileID = LicenseProfileID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class AddRightToLicenseProfileResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="AddRightToLicenseProfileResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.AddRightToLicenseProfileResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.AddRightToLicenseProfileResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class AddRightToLicenseProfileResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AddRightToLicenseProfileResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AddRightToLicenseProfileResult As String)
            MyBase.New
            Me.AddRightToLicenseProfileResult = AddRightToLicenseProfileResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class RemoveRightsFromLicenseProfileRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="RemoveRightsFromLicenseProfile", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.RemoveRightsFromLicenseProfileRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.RemoveRightsFromLicenseProfileRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class RemoveRightsFromLicenseProfileRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
        Public LicenseProfileID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal LicenseProfileID As Integer)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.LicenseProfileID = LicenseProfileID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class RemoveRightsFromLicenseProfileResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="RemoveRightsFromLicenseProfileResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.RemoveRightsFromLicenseProfileResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.RemoveRightsFromLicenseProfileResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class RemoveRightsFromLicenseProfileResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public RemoveRightsFromLicenseProfileResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal RemoveRightsFromLicenseProfileResult As String)
            MyBase.New
            Me.RemoveRightsFromLicenseProfileResult = RemoveRightsFromLicenseProfileResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class aLoginRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="aLogin", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.aLoginRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.aLoginRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class aLoginRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public Email As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public Pwd As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Email As String, ByVal Pwd As String)
            MyBase.New
            Me.Email = Email
            Me.Pwd = Pwd
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class aLoginResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="aLoginResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.aLoginResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.aLoginResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class aLoginResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=0)>  _
        Public aLoginResult As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal aLoginResult As Integer)
            MyBase.New
            Me.aLoginResult = aLoginResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class aLogin2Request
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="aLogin2", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.aLogin2RequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.aLogin2RequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class aLogin2RequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public Email As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public Pwd As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Email As String, ByVal Pwd As String)
            MyBase.New
            Me.Email = Email
            Me.Pwd = Pwd
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class aLogin2Response
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="aLogin2Response", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.aLogin2ResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.aLogin2ResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class aLogin2ResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public aLogin2Result As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal aLogin2Result As String)
            MyBase.New
            Me.aLogin2Result = aLogin2Result
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class WebServiceLoginRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="WebServiceLogin", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.WebServiceLoginRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.WebServiceLoginRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class WebServiceLoginRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class WebServiceLoginResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="WebServiceLoginResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.WebServiceLoginResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.WebServiceLoginResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class WebServiceLoginResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=0)>  _
        Public WebServiceLoginResult As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal WebServiceLoginResult As Integer)
            MyBase.New
            Me.WebServiceLoginResult = WebServiceLoginResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class AddUserGroupRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="AddUserGroup", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.AddUserGroupRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.AddUserGroupRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class AddUserGroupRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public GroupName As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
        Public IP1 As Double
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
        Public IP2 As Double
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
        Public RequireLogin As Boolean
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
        Public CustomerID As Integer
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
        Public BindNum As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal GroupName As String, ByVal IP1 As Double, ByVal IP2 As Double, ByVal RequireLogin As Boolean, ByVal CustomerID As Integer, ByVal BindNum As Integer)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.GroupName = GroupName
            Me.IP1 = IP1
            Me.IP2 = IP2
            Me.RequireLogin = RequireLogin
            Me.CustomerID = CustomerID
            Me.BindNum = BindNum
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class AddUserGroupResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="AddUserGroupResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.AddUserGroupResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.AddUserGroupResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class AddUserGroupResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AddUserGroupResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AddUserGroupResult As String)
            MyBase.New
            Me.AddUserGroupResult = AddUserGroupResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class ListRightsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="ListRights", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.ListRightsRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.ListRightsRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class ListRightsRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
        Public LicenseProfileID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal LicenseProfileID As Integer)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.LicenseProfileID = LicenseProfileID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class ListRightsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="ListRightsResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.ListRightsResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.ListRightsResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class ListRightsResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public ListRightsResult As DRMX_EN.ArrayOfAnyType
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ListRightsResult As DRMX_EN.ArrayOfAnyType)
            MyBase.New
            Me.ListRightsResult = ListRightsResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class ListUserGroupsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="ListUserGroups", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.ListUserGroupsRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.ListUserGroupsRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class ListUserGroupsRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class ListUserGroupsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="ListUserGroupsResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.ListUserGroupsResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.ListUserGroupsResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class ListUserGroupsResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public ListUserGroupsResult As Object
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ListUserGroupsResult As Object)
            MyBase.New
            Me.ListUserGroupsResult = ListUserGroupsResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class ListLicenseProfilesRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="ListLicenseProfiles", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.ListLicenseProfilesRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.ListLicenseProfilesRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class ListLicenseProfilesRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
        Public GroupID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal GroupID As Integer)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.GroupID = GroupID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class ListLicenseProfilesResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="ListLicenseProfilesResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.ListLicenseProfilesResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.ListLicenseProfilesResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class ListLicenseProfilesResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public ListLicenseProfilesResult As Object
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ListLicenseProfilesResult As Object)
            MyBase.New
            Me.ListLicenseProfilesResult = ListLicenseProfilesResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class ListLicenseProfilesAsStringRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="ListLicenseProfilesAsString", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.ListLicenseProfilesAsStringRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.ListLicenseProfilesAsStringRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class ListLicenseProfilesAsStringRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
        Public GroupID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal GroupID As Integer)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.GroupID = GroupID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class ListLicenseProfilesAsStringResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="ListLicenseProfilesAsStringResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.ListLicenseProfilesAsStringResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.ListLicenseProfilesAsStringResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class ListLicenseProfilesAsStringResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public ListLicenseProfilesAsStringResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ListLicenseProfilesAsStringResult As String)
            MyBase.New
            Me.ListLicenseProfilesAsStringResult = ListLicenseProfilesAsStringResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class ListUsersRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="ListUsers", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.ListUsersRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.ListUsersRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class ListUsersRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
        Public GroupID As Integer
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
        Public PageNo As Integer
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
        Public PageSize As Integer
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=5)>  _
        Public SortField As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=6)>  _
        Public SortOrder As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
        Public TotalPages As Integer
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
        Public TotalRows As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal GroupID As Integer, ByVal PageNo As Integer, ByVal PageSize As Integer, ByVal SortField As String, ByVal SortOrder As String, ByVal TotalPages As Integer, ByVal TotalRows As Integer)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.GroupID = GroupID
            Me.PageNo = PageNo
            Me.PageSize = PageSize
            Me.SortField = SortField
            Me.SortOrder = SortOrder
            Me.TotalPages = TotalPages
            Me.TotalRows = TotalRows
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class ListUsersResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="ListUsersResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.ListUsersResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.ListUsersResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class ListUsersResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public ListUsersResult As Object
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
        Public TotalPages As Integer
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
        Public TotalRows As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ListUsersResult As Object, ByVal TotalPages As Integer, ByVal TotalRows As Integer)
            MyBase.New
            Me.ListUsersResult = ListUsersResult
            Me.TotalPages = TotalPages
            Me.TotalRows = TotalRows
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class ListReportsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="ListReports", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.ListReportsRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.ListReportsRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class ListReportsRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public BeginDate As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=3)>  _
        Public EndDate As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
        Public GroupID As Integer
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
        Public PageNo As Integer
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
        Public PageSize As Integer
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=7)>  _
        Public SortField As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=8)>  _
        Public SortOrder As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
        Public TotalPages As Integer
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
        Public TotalRows As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal BeginDate As String, ByVal EndDate As String, ByVal GroupID As Integer, ByVal PageNo As Integer, ByVal PageSize As Integer, ByVal SortField As String, ByVal SortOrder As String, ByVal TotalPages As Integer, ByVal TotalRows As Integer)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.BeginDate = BeginDate
            Me.EndDate = EndDate
            Me.GroupID = GroupID
            Me.PageNo = PageNo
            Me.PageSize = PageSize
            Me.SortField = SortField
            Me.SortOrder = SortOrder
            Me.TotalPages = TotalPages
            Me.TotalRows = TotalRows
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class ListReportsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="ListReportsResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.ListReportsResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.ListReportsResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class ListReportsResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public ListReportsResult As Object
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
        Public TotalPages As Integer
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
        Public TotalRows As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ListReportsResult As Object, ByVal TotalPages As Integer, ByVal TotalRows As Integer)
            MyBase.New
            Me.ListReportsResult = ListReportsResult
            Me.TotalPages = TotalPages
            Me.TotalRows = TotalRows
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class GetRightsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="GetRights", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.GetRightsRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.GetRightsRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class GetRightsRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public Email As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
        Public RightsID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Email As String, ByVal WebServiceAuthStr As String, ByVal RightsID As Integer)
            MyBase.New
            Me.Email = Email
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.RightsID = RightsID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class GetRightsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="GetRightsResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.GetRightsResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.GetRightsResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class GetRightsResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public GetRightsResult As DRMX_EN.RightsDetails
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetRightsResult As DRMX_EN.RightsDetails)
            MyBase.New
            Me.GetRightsResult = GetRightsResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class GetRightsReturnStringRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="GetRightsReturnString", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.GetRightsReturnStringRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.GetRightsReturnStringRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class GetRightsReturnStringRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public Email As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
        Public RightsID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Email As String, ByVal WebServiceAuthStr As String, ByVal RightsID As Integer)
            MyBase.New
            Me.Email = Email
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.RightsID = RightsID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class GetRightsReturnStringResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="GetRightsReturnStringResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.GetRightsReturnStringResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.GetRightsReturnStringResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class GetRightsReturnStringResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public GetRightsReturnStringResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetRightsReturnStringResult As String)
            MyBase.New
            Me.GetRightsReturnStringResult = GetRightsReturnStringResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class GetBlocklistOfRightRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="GetBlocklistOfRight", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.GetBlocklistOfRightRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.GetBlocklistOfRightRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class GetBlocklistOfRightRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public Email As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
        Public RightsID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Email As String, ByVal WebServiceAuthStr As String, ByVal RightsID As Integer)
            MyBase.New
            Me.Email = Email
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.RightsID = RightsID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class GetBlocklistOfRightResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="GetBlocklistOfRightResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.GetBlocklistOfRightResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.GetBlocklistOfRightResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class GetBlocklistOfRightResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public GetBlocklistOfRightResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetBlocklistOfRightResult As String)
            MyBase.New
            Me.GetBlocklistOfRightResult = GetBlocklistOfRightResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class DeleteRightRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="DeleteRight", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.DeleteRightRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.DeleteRightRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class DeleteRightRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public Email As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
        Public RightsID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Email As String, ByVal WebServiceAuthStr As String, ByVal RightsID As Integer)
            MyBase.New
            Me.Email = Email
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.RightsID = RightsID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class DeleteRightResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="DeleteRightResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.DeleteRightResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.DeleteRightResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class DeleteRightResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public DeleteRightResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal DeleteRightResult As String)
            MyBase.New
            Me.DeleteRightResult = DeleteRightResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class SendEmailRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="SendEmail", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.SendEmailRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.SendEmailRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class SendEmailRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public Email As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public AuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public Body As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=3)>  _
        Public Title As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Email As String, ByVal AuthStr As String, ByVal Body As String, ByVal Title As String)
            MyBase.New
            Me.Email = Email
            Me.AuthStr = AuthStr
            Me.Body = Body
            Me.Title = Title
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class SendEmailResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="SendEmailResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.SendEmailResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.SendEmailResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class SendEmailResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public SendEmailResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SendEmailResult As String)
            MyBase.New
            Me.SendEmailResult = SendEmailResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class AddNewAdminRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="AddNewAdmin", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.AddNewAdminRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.AddNewAdminRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class AddNewAdminRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public fullName As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public email As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=3)>  _
        Public SecEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=4)>  _
        Public password As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=5)>  _
        Public Company As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=6)>  _
        Public Title As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=7)>  _
        Public Address As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=8)>  _
        Public City As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=9)>  _
        Public Province As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=10)>  _
        Public Zip As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=11)>  _
        Public Country As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=12)>  _
        Public Phone As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
        Public RegisterDate As Date
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
        Public AffiID As Integer
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=15)>  _
        Public Paypal As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=16)>  _
        Public CompanyURL As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=17)>  _
        Public LicenseURL As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=18)>  _
        Public IP As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=19)>  _
        Public AdminType As Integer
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=20)>  _
        Public SQuestion As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=21)>  _
        Public SAnswer As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=22)>  _
        Public FeeID As Integer
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=23)>  _
        Public GUID As String
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=24)>  _
        Public AffiTotal As Decimal
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=25)>  _
        Public AffiLimit As Decimal
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=26)>  _
        Public AffiRate As Decimal
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=27)>  _
        Public TimeZone As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New( _
                    ByVal WebServiceAuthStr As String,  _
                    ByVal fullName As String,  _
                    ByVal email As String,  _
                    ByVal SecEmail As String,  _
                    ByVal password As String,  _
                    ByVal Company As String,  _
                    ByVal Title As String,  _
                    ByVal Address As String,  _
                    ByVal City As String,  _
                    ByVal Province As String,  _
                    ByVal Zip As String,  _
                    ByVal Country As String,  _
                    ByVal Phone As String,  _
                    ByVal RegisterDate As Date,  _
                    ByVal AffiID As Integer,  _
                    ByVal Paypal As String,  _
                    ByVal CompanyURL As String,  _
                    ByVal LicenseURL As String,  _
                    ByVal IP As String,  _
                    ByVal AdminType As Integer,  _
                    ByVal SQuestion As String,  _
                    ByVal SAnswer As String,  _
                    ByVal FeeID As Integer,  _
                    ByVal GUID As String,  _
                    ByVal AffiTotal As Decimal,  _
                    ByVal AffiLimit As Decimal,  _
                    ByVal AffiRate As Decimal,  _
                    ByVal TimeZone As Integer)
            MyBase.New
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.fullName = fullName
            Me.email = email
            Me.SecEmail = SecEmail
            Me.password = password
            Me.Company = Company
            Me.Title = Title
            Me.Address = Address
            Me.City = City
            Me.Province = Province
            Me.Zip = Zip
            Me.Country = Country
            Me.Phone = Phone
            Me.RegisterDate = RegisterDate
            Me.AffiID = AffiID
            Me.Paypal = Paypal
            Me.CompanyURL = CompanyURL
            Me.LicenseURL = LicenseURL
            Me.IP = IP
            Me.AdminType = AdminType
            Me.SQuestion = SQuestion
            Me.SAnswer = SAnswer
            Me.FeeID = FeeID
            Me.GUID = GUID
            Me.AffiTotal = AffiTotal
            Me.AffiLimit = AffiLimit
            Me.AffiRate = AffiRate
            Me.TimeZone = TimeZone
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class AddNewAdminResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="AddNewAdminResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.AddNewAdminResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.AddNewAdminResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class AddNewAdminResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AddNewAdminResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AddNewAdminResult As String)
            MyBase.New
            Me.AddNewAdminResult = AddNewAdminResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UpdateAdminInfoRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UpdateAdminInfo", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.UpdateAdminInfoRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.UpdateAdminInfoRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class UpdateAdminInfoRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public GUID As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public Name As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=3)>  _
        Public Address As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=4)>  _
        Public City As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=5)>  _
        Public Province As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=6)>  _
        Public Country As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=7)>  _
        Public Phone As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=8)>  _
        Public Zip As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=9)>  _
        Public Company As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=10)>  _
        Public CompanyURL As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=11)>  _
        Public Title As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=12)>  _
        Public Email As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=13)>  _
        Public SecEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=14)>  _
        Public SQuestion As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=15)>  _
        Public SAnswer As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New( _
                    ByVal WebServiceAuthStr As String,  _
                    ByVal GUID As String,  _
                    ByVal Name As String,  _
                    ByVal Address As String,  _
                    ByVal City As String,  _
                    ByVal Province As String,  _
                    ByVal Country As String,  _
                    ByVal Phone As String,  _
                    ByVal Zip As String,  _
                    ByVal Company As String,  _
                    ByVal CompanyURL As String,  _
                    ByVal Title As String,  _
                    ByVal Email As String,  _
                    ByVal SecEmail As String,  _
                    ByVal SQuestion As String,  _
                    ByVal SAnswer As String)
            MyBase.New
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.GUID = GUID
            Me.Name = Name
            Me.Address = Address
            Me.City = City
            Me.Province = Province
            Me.Country = Country
            Me.Phone = Phone
            Me.Zip = Zip
            Me.Company = Company
            Me.CompanyURL = CompanyURL
            Me.Title = Title
            Me.Email = Email
            Me.SecEmail = SecEmail
            Me.SQuestion = SQuestion
            Me.SAnswer = SAnswer
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UpdateAdminInfoResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UpdateAdminInfoResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.UpdateAdminInfoResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.UpdateAdminInfoResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class UpdateAdminInfoResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public UpdateAdminInfoResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal UpdateAdminInfoResult As String)
            MyBase.New
            Me.UpdateAdminInfoResult = UpdateAdminInfoResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UpdateAdminPwdRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UpdateAdminPwd", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.UpdateAdminPwdRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.UpdateAdminPwdRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class UpdateAdminPwdRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public GUID As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public Password As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal WebServiceAuthStr As String, ByVal GUID As String, ByVal Password As String)
            MyBase.New
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.GUID = GUID
            Me.Password = Password
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class UpdateAdminPwdResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="UpdateAdminPwdResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.UpdateAdminPwdResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.UpdateAdminPwdResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class UpdateAdminPwdResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public UpdateAdminPwdResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal UpdateAdminPwdResult As String)
            MyBase.New
            Me.UpdateAdminPwdResult = UpdateAdminPwdResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class GetPackagerParamsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="GetPackagerParams", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.GetPackagerParamsRequestBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.GetPackagerParamsRequestBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class GetPackagerParamsRequestBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public AdminEmail As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=1)>  _
        Public WebServiceAuthStr As String
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=2)>  _
        Public ProfileID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal ProfileID As String)
            MyBase.New
            Me.AdminEmail = AdminEmail
            Me.WebServiceAuthStr = WebServiceAuthStr
            Me.ProfileID = ProfileID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class GetPackagerParamsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute(Name:="GetPackagerParamsResponse", [Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService", Order:=0)>  _
        Public Body As DRMX_EN.GetPackagerParamsResponseBody
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Body As DRMX_EN.GetPackagerParamsResponseBody)
            MyBase.New
            Me.Body = Body
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.Runtime.Serialization.DataContractAttribute([Namespace]:="http://tempuri.org/ASPNET.StarterKit.Commerce/HaihaisoftLicenseService")>  _
    Partial Public Class GetPackagerParamsResponseBody
        
        <System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue:=false, Order:=0)>  _
        Public GetPackagerParamsResult As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetPackagerParamsResult As String)
            MyBase.New
            Me.GetPackagerParamsResult = GetPackagerParamsResult
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface HaihaisoftLicenseServiceSoapChannel
        Inherits DRMX_EN.HaihaisoftLicenseServiceSoap, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class HaihaisoftLicenseServiceSoapClient
        Inherits System.ServiceModel.ClientBase(Of DRMX_EN.HaihaisoftLicenseServiceSoap)
        Implements DRMX_EN.HaihaisoftLicenseServiceSoap
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_UserLogin(ByVal request As DRMX_EN.UserLoginRequest) As DRMX_EN.UserLoginResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.UserLogin
            Return MyBase.Channel.UserLogin(request)
        End Function
        
        Public Function UserLogin(ByVal UserName As String, ByVal Password As String, ByVal AdminEmail As String, ByVal WebServiceAuthStr As String) As String
            Dim inValue As DRMX_EN.UserLoginRequest = New DRMX_EN.UserLoginRequest()
            inValue.Body = New DRMX_EN.UserLoginRequestBody()
            inValue.Body.UserName = UserName
            inValue.Body.Password = Password
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            Dim retVal As DRMX_EN.UserLoginResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).UserLogin(inValue)
            Return retVal.Body.UserLoginResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_UserLoginAsync(ByVal request As DRMX_EN.UserLoginRequest) As System.Threading.Tasks.Task(Of DRMX_EN.UserLoginResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.UserLoginAsync
            Return MyBase.Channel.UserLoginAsync(request)
        End Function
        
        Public Function UserLoginAsync(ByVal UserName As String, ByVal Password As String, ByVal AdminEmail As String, ByVal WebServiceAuthStr As String) As System.Threading.Tasks.Task(Of DRMX_EN.UserLoginResponse)
            Dim inValue As DRMX_EN.UserLoginRequest = New DRMX_EN.UserLoginRequest()
            inValue.Body = New DRMX_EN.UserLoginRequestBody()
            inValue.Body.UserName = UserName
            inValue.Body.Password = Password
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).UserLoginAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_CheckUserExists(ByVal request As DRMX_EN.CheckUserExistsRequest) As DRMX_EN.CheckUserExistsResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.CheckUserExists
            Return MyBase.Channel.CheckUserExists(request)
        End Function
        
        Public Function CheckUserExists(ByVal UserName As String, ByVal AdminEmail As String, ByVal WebServiceAuthStr As String) As String
            Dim inValue As DRMX_EN.CheckUserExistsRequest = New DRMX_EN.CheckUserExistsRequest()
            inValue.Body = New DRMX_EN.CheckUserExistsRequestBody()
            inValue.Body.UserName = UserName
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            Dim retVal As DRMX_EN.CheckUserExistsResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).CheckUserExists(inValue)
            Return retVal.Body.CheckUserExistsResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_CheckUserExistsAsync(ByVal request As DRMX_EN.CheckUserExistsRequest) As System.Threading.Tasks.Task(Of DRMX_EN.CheckUserExistsResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.CheckUserExistsAsync
            Return MyBase.Channel.CheckUserExistsAsync(request)
        End Function
        
        Public Function CheckUserExistsAsync(ByVal UserName As String, ByVal AdminEmail As String, ByVal WebServiceAuthStr As String) As System.Threading.Tasks.Task(Of DRMX_EN.CheckUserExistsResponse)
            Dim inValue As DRMX_EN.CheckUserExistsRequest = New DRMX_EN.CheckUserExistsRequest()
            inValue.Body = New DRMX_EN.CheckUserExistsRequestBody()
            inValue.Body.UserName = UserName
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).CheckUserExistsAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_PEnhancedVFile(ByVal request As DRMX_EN.PEnhancedVFileRequest) As DRMX_EN.PEnhancedVFileResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.PEnhancedVFile
            Return MyBase.Channel.PEnhancedVFile(request)
        End Function
        
        Public Function PEnhancedVFile(ByVal PID As String, ByVal Login As String, ByVal AdminEmail As String, ByVal WebServiceAuthStr As String) As String
            Dim inValue As DRMX_EN.PEnhancedVFileRequest = New DRMX_EN.PEnhancedVFileRequest()
            inValue.Body = New DRMX_EN.PEnhancedVFileRequestBody()
            inValue.Body.PID = PID
            inValue.Body.Login = Login
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            Dim retVal As DRMX_EN.PEnhancedVFileResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).PEnhancedVFile(inValue)
            Return retVal.Body.PEnhancedVFileResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_PEnhancedVFileAsync(ByVal request As DRMX_EN.PEnhancedVFileRequest) As System.Threading.Tasks.Task(Of DRMX_EN.PEnhancedVFileResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.PEnhancedVFileAsync
            Return MyBase.Channel.PEnhancedVFileAsync(request)
        End Function
        
        Public Function PEnhancedVFileAsync(ByVal PID As String, ByVal Login As String, ByVal AdminEmail As String, ByVal WebServiceAuthStr As String) As System.Threading.Tasks.Task(Of DRMX_EN.PEnhancedVFileResponse)
            Dim inValue As DRMX_EN.PEnhancedVFileRequest = New DRMX_EN.PEnhancedVFileRequest()
            inValue.Body = New DRMX_EN.PEnhancedVFileRequestBody()
            inValue.Body.PID = PID
            inValue.Body.Login = Login
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).PEnhancedVFileAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_UserLoginBySQuestion(ByVal request As DRMX_EN.UserLoginBySQuestionRequest) As DRMX_EN.UserLoginBySQuestionResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.UserLoginBySQuestion
            Return MyBase.Channel.UserLoginBySQuestion(request)
        End Function
        
        Public Function UserLoginBySQuestion(ByVal UserName As String, ByVal Email As String, ByVal SQuestion As String, ByVal SAnswer As String, ByVal AdminEmail As String, ByVal WebServiceAuthStr As String) As String
            Dim inValue As DRMX_EN.UserLoginBySQuestionRequest = New DRMX_EN.UserLoginBySQuestionRequest()
            inValue.Body = New DRMX_EN.UserLoginBySQuestionRequestBody()
            inValue.Body.UserName = UserName
            inValue.Body.Email = Email
            inValue.Body.SQuestion = SQuestion
            inValue.Body.SAnswer = SAnswer
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            Dim retVal As DRMX_EN.UserLoginBySQuestionResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).UserLoginBySQuestion(inValue)
            Return retVal.Body.UserLoginBySQuestionResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_UserLoginBySQuestionAsync(ByVal request As DRMX_EN.UserLoginBySQuestionRequest) As System.Threading.Tasks.Task(Of DRMX_EN.UserLoginBySQuestionResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.UserLoginBySQuestionAsync
            Return MyBase.Channel.UserLoginBySQuestionAsync(request)
        End Function
        
        Public Function UserLoginBySQuestionAsync(ByVal UserName As String, ByVal Email As String, ByVal SQuestion As String, ByVal SAnswer As String, ByVal AdminEmail As String, ByVal WebServiceAuthStr As String) As System.Threading.Tasks.Task(Of DRMX_EN.UserLoginBySQuestionResponse)
            Dim inValue As DRMX_EN.UserLoginBySQuestionRequest = New DRMX_EN.UserLoginBySQuestionRequest()
            inValue.Body = New DRMX_EN.UserLoginBySQuestionRequestBody()
            inValue.Body.UserName = UserName
            inValue.Body.Email = Email
            inValue.Body.SQuestion = SQuestion
            inValue.Body.SAnswer = SAnswer
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).UserLoginBySQuestionAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_GetUserDetails(ByVal request As DRMX_EN.GetUserDetailsRequest) As DRMX_EN.GetUserDetailsResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.GetUserDetails
            Return MyBase.Channel.GetUserDetails(request)
        End Function
        
        Public Function GetUserDetails(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal UserLoginName As String) As DRMX_EN.UserDetails
            Dim inValue As DRMX_EN.GetUserDetailsRequest = New DRMX_EN.GetUserDetailsRequest()
            inValue.Body = New DRMX_EN.GetUserDetailsRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.UserLoginName = UserLoginName
            Dim retVal As DRMX_EN.GetUserDetailsResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).GetUserDetails(inValue)
            Return retVal.Body.GetUserDetailsResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_GetUserDetailsAsync(ByVal request As DRMX_EN.GetUserDetailsRequest) As System.Threading.Tasks.Task(Of DRMX_EN.GetUserDetailsResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.GetUserDetailsAsync
            Return MyBase.Channel.GetUserDetailsAsync(request)
        End Function
        
        Public Function GetUserDetailsAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal UserLoginName As String) As System.Threading.Tasks.Task(Of DRMX_EN.GetUserDetailsResponse)
            Dim inValue As DRMX_EN.GetUserDetailsRequest = New DRMX_EN.GetUserDetailsRequest()
            inValue.Body = New DRMX_EN.GetUserDetailsRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.UserLoginName = UserLoginName
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).GetUserDetailsAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_GetUserDetailsByUserID(ByVal request As DRMX_EN.GetUserDetailsByUserIDRequest) As DRMX_EN.GetUserDetailsByUserIDResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.GetUserDetailsByUserID
            Return MyBase.Channel.GetUserDetailsByUserID(request)
        End Function
        
        Public Function GetUserDetailsByUserID(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal UserID As String) As DRMX_EN.UserDetails
            Dim inValue As DRMX_EN.GetUserDetailsByUserIDRequest = New DRMX_EN.GetUserDetailsByUserIDRequest()
            inValue.Body = New DRMX_EN.GetUserDetailsByUserIDRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.UserID = UserID
            Dim retVal As DRMX_EN.GetUserDetailsByUserIDResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).GetUserDetailsByUserID(inValue)
            Return retVal.Body.GetUserDetailsByUserIDResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_GetUserDetailsByUserIDAsync(ByVal request As DRMX_EN.GetUserDetailsByUserIDRequest) As System.Threading.Tasks.Task(Of DRMX_EN.GetUserDetailsByUserIDResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.GetUserDetailsByUserIDAsync
            Return MyBase.Channel.GetUserDetailsByUserIDAsync(request)
        End Function
        
        Public Function GetUserDetailsByUserIDAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal UserID As String) As System.Threading.Tasks.Task(Of DRMX_EN.GetUserDetailsByUserIDResponse)
            Dim inValue As DRMX_EN.GetUserDetailsByUserIDRequest = New DRMX_EN.GetUserDetailsByUserIDRequest()
            inValue.Body = New DRMX_EN.GetUserDetailsByUserIDRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.UserID = UserID
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).GetUserDetailsByUserIDAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_GetReportDetails(ByVal request As DRMX_EN.GetReportDetailsRequest) As DRMX_EN.GetReportDetailsResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.GetReportDetails
            Return MyBase.Channel.GetReportDetails(request)
        End Function
        
        Public Function GetReportDetails(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String) As DRMX_EN.ReportDetails
            Dim inValue As DRMX_EN.GetReportDetailsRequest = New DRMX_EN.GetReportDetailsRequest()
            inValue.Body = New DRMX_EN.GetReportDetailsRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            Dim retVal As DRMX_EN.GetReportDetailsResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).GetReportDetails(inValue)
            Return retVal.Body.GetReportDetailsResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_GetReportDetailsAsync(ByVal request As DRMX_EN.GetReportDetailsRequest) As System.Threading.Tasks.Task(Of DRMX_EN.GetReportDetailsResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.GetReportDetailsAsync
            Return MyBase.Channel.GetReportDetailsAsync(request)
        End Function
        
        Public Function GetReportDetailsAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String) As System.Threading.Tasks.Task(Of DRMX_EN.GetReportDetailsResponse)
            Dim inValue As DRMX_EN.GetReportDetailsRequest = New DRMX_EN.GetReportDetailsRequest()
            inValue.Body = New DRMX_EN.GetReportDetailsRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).GetReportDetailsAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_DeleteUser(ByVal request As DRMX_EN.DeleteUserRequest) As DRMX_EN.DeleteUserResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.DeleteUser
            Return MyBase.Channel.DeleteUser(request)
        End Function
        
        Public Function DeleteUser(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal UserLoginName As String) As String
            Dim inValue As DRMX_EN.DeleteUserRequest = New DRMX_EN.DeleteUserRequest()
            inValue.Body = New DRMX_EN.DeleteUserRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.UserLoginName = UserLoginName
            Dim retVal As DRMX_EN.DeleteUserResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).DeleteUser(inValue)
            Return retVal.Body.DeleteUserResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_DeleteUserAsync(ByVal request As DRMX_EN.DeleteUserRequest) As System.Threading.Tasks.Task(Of DRMX_EN.DeleteUserResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.DeleteUserAsync
            Return MyBase.Channel.DeleteUserAsync(request)
        End Function
        
        Public Function DeleteUserAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal UserLoginName As String) As System.Threading.Tasks.Task(Of DRMX_EN.DeleteUserResponse)
            Dim inValue As DRMX_EN.DeleteUserRequest = New DRMX_EN.DeleteUserRequest()
            inValue.Body = New DRMX_EN.DeleteUserRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.UserLoginName = UserLoginName
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).DeleteUserAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_RevokeEndUserLicense(ByVal request As DRMX_EN.RevokeEndUserLicenseRequest) As DRMX_EN.RevokeEndUserLicenseResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.RevokeEndUserLicense
            Return MyBase.Channel.RevokeEndUserLicense(request)
        End Function
        
        Public Function RevokeEndUserLicense(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal UserLoginName As String, ByVal IsRevoke As String) As String
            Dim inValue As DRMX_EN.RevokeEndUserLicenseRequest = New DRMX_EN.RevokeEndUserLicenseRequest()
            inValue.Body = New DRMX_EN.RevokeEndUserLicenseRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.UserLoginName = UserLoginName
            inValue.Body.IsRevoke = IsRevoke
            Dim retVal As DRMX_EN.RevokeEndUserLicenseResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).RevokeEndUserLicense(inValue)
            Return retVal.Body.RevokeEndUserLicenseResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_RevokeEndUserLicenseAsync(ByVal request As DRMX_EN.RevokeEndUserLicenseRequest) As System.Threading.Tasks.Task(Of DRMX_EN.RevokeEndUserLicenseResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.RevokeEndUserLicenseAsync
            Return MyBase.Channel.RevokeEndUserLicenseAsync(request)
        End Function
        
        Public Function RevokeEndUserLicenseAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal UserLoginName As String, ByVal IsRevoke As String) As System.Threading.Tasks.Task(Of DRMX_EN.RevokeEndUserLicenseResponse)
            Dim inValue As DRMX_EN.RevokeEndUserLicenseRequest = New DRMX_EN.RevokeEndUserLicenseRequest()
            inValue.Body = New DRMX_EN.RevokeEndUserLicenseRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.UserLoginName = UserLoginName
            inValue.Body.IsRevoke = IsRevoke
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).RevokeEndUserLicenseAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_CheckUserIsRevoked(ByVal request As DRMX_EN.CheckUserIsRevokedRequest) As DRMX_EN.CheckUserIsRevokedResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.CheckUserIsRevoked
            Return MyBase.Channel.CheckUserIsRevoked(request)
        End Function
        
        Public Function CheckUserIsRevoked(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal UserLoginName As String) As String
            Dim inValue As DRMX_EN.CheckUserIsRevokedRequest = New DRMX_EN.CheckUserIsRevokedRequest()
            inValue.Body = New DRMX_EN.CheckUserIsRevokedRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.UserLoginName = UserLoginName
            Dim retVal As DRMX_EN.CheckUserIsRevokedResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).CheckUserIsRevoked(inValue)
            Return retVal.Body.CheckUserIsRevokedResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_CheckUserIsRevokedAsync(ByVal request As DRMX_EN.CheckUserIsRevokedRequest) As System.Threading.Tasks.Task(Of DRMX_EN.CheckUserIsRevokedResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.CheckUserIsRevokedAsync
            Return MyBase.Channel.CheckUserIsRevokedAsync(request)
        End Function
        
        Public Function CheckUserIsRevokedAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal UserLoginName As String) As System.Threading.Tasks.Task(Of DRMX_EN.CheckUserIsRevokedResponse)
            Dim inValue As DRMX_EN.CheckUserIsRevokedRequest = New DRMX_EN.CheckUserIsRevokedRequest()
            inValue.Body = New DRMX_EN.CheckUserIsRevokedRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.UserLoginName = UserLoginName
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).CheckUserIsRevokedAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_CheckUserIsRevokedByLicenseProfileID(ByVal request As DRMX_EN.CheckUserIsRevokedByLicenseProfileIDRequest) As DRMX_EN.CheckUserIsRevokedByLicenseProfileIDResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.CheckUserIsRevokedByLicenseProfileID
            Return MyBase.Channel.CheckUserIsRevokedByLicenseProfileID(request)
        End Function
        
        Public Function CheckUserIsRevokedByLicenseProfileID(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal UserLoginName As String, ByVal LicenseProfileID As Integer) As String
            Dim inValue As DRMX_EN.CheckUserIsRevokedByLicenseProfileIDRequest = New DRMX_EN.CheckUserIsRevokedByLicenseProfileIDRequest()
            inValue.Body = New DRMX_EN.CheckUserIsRevokedByLicenseProfileIDRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.UserLoginName = UserLoginName
            inValue.Body.LicenseProfileID = LicenseProfileID
            Dim retVal As DRMX_EN.CheckUserIsRevokedByLicenseProfileIDResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).CheckUserIsRevokedByLicenseProfileID(inValue)
            Return retVal.Body.CheckUserIsRevokedByLicenseProfileIDResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_CheckUserIsRevokedByLicenseProfileIDAsync(ByVal request As DRMX_EN.CheckUserIsRevokedByLicenseProfileIDRequest) As System.Threading.Tasks.Task(Of DRMX_EN.CheckUserIsRevokedByLicenseProfileIDResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.CheckUserIsRevokedByLicenseProfileIDAsync
            Return MyBase.Channel.CheckUserIsRevokedByLicenseProfileIDAsync(request)
        End Function
        
        Public Function CheckUserIsRevokedByLicenseProfileIDAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal UserLoginName As String, ByVal LicenseProfileID As Integer) As System.Threading.Tasks.Task(Of DRMX_EN.CheckUserIsRevokedByLicenseProfileIDResponse)
            Dim inValue As DRMX_EN.CheckUserIsRevokedByLicenseProfileIDRequest = New DRMX_EN.CheckUserIsRevokedByLicenseProfileIDRequest()
            inValue.Body = New DRMX_EN.CheckUserIsRevokedByLicenseProfileIDRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.UserLoginName = UserLoginName
            inValue.Body.LicenseProfileID = LicenseProfileID
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).CheckUserIsRevokedByLicenseProfileIDAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_DeleteUserAllBind(ByVal request As DRMX_EN.DeleteUserAllBindRequest) As DRMX_EN.DeleteUserAllBindResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.DeleteUserAllBind
            Return MyBase.Channel.DeleteUserAllBind(request)
        End Function
        
        Public Function DeleteUserAllBind(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal UserLoginName As String) As String
            Dim inValue As DRMX_EN.DeleteUserAllBindRequest = New DRMX_EN.DeleteUserAllBindRequest()
            inValue.Body = New DRMX_EN.DeleteUserAllBindRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.UserLoginName = UserLoginName
            Dim retVal As DRMX_EN.DeleteUserAllBindResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).DeleteUserAllBind(inValue)
            Return retVal.Body.DeleteUserAllBindResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_DeleteUserAllBindAsync(ByVal request As DRMX_EN.DeleteUserAllBindRequest) As System.Threading.Tasks.Task(Of DRMX_EN.DeleteUserAllBindResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.DeleteUserAllBindAsync
            Return MyBase.Channel.DeleteUserAllBindAsync(request)
        End Function
        
        Public Function DeleteUserAllBindAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal UserLoginName As String) As System.Threading.Tasks.Task(Of DRMX_EN.DeleteUserAllBindResponse)
            Dim inValue As DRMX_EN.DeleteUserAllBindRequest = New DRMX_EN.DeleteUserAllBindRequest()
            inValue.Body = New DRMX_EN.DeleteUserAllBindRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.UserLoginName = UserLoginName
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).DeleteUserAllBindAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_getLicenseRemoteToTableWithVersion(ByVal request As DRMX_EN.getLicenseRemoteToTableWithVersionRequest) As DRMX_EN.getLicenseRemoteToTableWithVersionResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.getLicenseRemoteToTableWithVersion
            Return MyBase.Channel.getLicenseRemoteToTableWithVersion(request)
        End Function
        
        Public Function getLicenseRemoteToTableWithVersion(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal ProfileID As String, ByVal ClientInfo As String, ByVal RightsID As String, ByVal UserLoginName As String, ByVal UserFullName As String, ByVal GroupID As String, ByRef Message As String, ByVal IP As String, ByVal Platform As String, ByVal ContentType As String, ByVal Version As String) As String
            Dim inValue As DRMX_EN.getLicenseRemoteToTableWithVersionRequest = New DRMX_EN.getLicenseRemoteToTableWithVersionRequest()
            inValue.Body = New DRMX_EN.getLicenseRemoteToTableWithVersionRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.ProfileID = ProfileID
            inValue.Body.ClientInfo = ClientInfo
            inValue.Body.RightsID = RightsID
            inValue.Body.UserLoginName = UserLoginName
            inValue.Body.UserFullName = UserFullName
            inValue.Body.GroupID = GroupID
            inValue.Body.Message = Message
            inValue.Body.IP = IP
            inValue.Body.Platform = Platform
            inValue.Body.ContentType = ContentType
            inValue.Body.Version = Version
            Dim retVal As DRMX_EN.getLicenseRemoteToTableWithVersionResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).getLicenseRemoteToTableWithVersion(inValue)
            Message = retVal.Body.Message
            Return retVal.Body.getLicenseRemoteToTableWithVersionResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_getLicenseRemoteToTableWithVersionAsync(ByVal request As DRMX_EN.getLicenseRemoteToTableWithVersionRequest) As System.Threading.Tasks.Task(Of DRMX_EN.getLicenseRemoteToTableWithVersionResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.getLicenseRemoteToTableWithVersionAsync
            Return MyBase.Channel.getLicenseRemoteToTableWithVersionAsync(request)
        End Function
        
        Public Function getLicenseRemoteToTableWithVersionAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal ProfileID As String, ByVal ClientInfo As String, ByVal RightsID As String, ByVal UserLoginName As String, ByVal UserFullName As String, ByVal GroupID As String, ByVal Message As String, ByVal IP As String, ByVal Platform As String, ByVal ContentType As String, ByVal Version As String) As System.Threading.Tasks.Task(Of DRMX_EN.getLicenseRemoteToTableWithVersionResponse)
            Dim inValue As DRMX_EN.getLicenseRemoteToTableWithVersionRequest = New DRMX_EN.getLicenseRemoteToTableWithVersionRequest()
            inValue.Body = New DRMX_EN.getLicenseRemoteToTableWithVersionRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.ProfileID = ProfileID
            inValue.Body.ClientInfo = ClientInfo
            inValue.Body.RightsID = RightsID
            inValue.Body.UserLoginName = UserLoginName
            inValue.Body.UserFullName = UserFullName
            inValue.Body.GroupID = GroupID
            inValue.Body.Message = Message
            inValue.Body.IP = IP
            inValue.Body.Platform = Platform
            inValue.Body.ContentType = ContentType
            inValue.Body.Version = Version
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).getLicenseRemoteToTableWithVersionAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_getLicenseRemoteToTableWithVersionWithMac(ByVal request As DRMX_EN.getLicenseRemoteToTableWithVersionWithMacRequest) As DRMX_EN.getLicenseRemoteToTableWithVersionWithMacResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.getLicenseRemoteToTableWithVersionWithMac
            Return MyBase.Channel.getLicenseRemoteToTableWithVersionWithMac(request)
        End Function
        
        Public Function getLicenseRemoteToTableWithVersionWithMac(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal ProfileID As String, ByVal ClientInfo As String, ByVal RightsID As String, ByVal UserLoginName As String, ByVal UserFullName As String, ByVal GroupID As String, ByRef Message As String, ByVal IP As String, ByVal Platform As String, ByVal ContentType As String, ByVal Version As String, ByVal Mac As String) As String
            Dim inValue As DRMX_EN.getLicenseRemoteToTableWithVersionWithMacRequest = New DRMX_EN.getLicenseRemoteToTableWithVersionWithMacRequest()
            inValue.Body = New DRMX_EN.getLicenseRemoteToTableWithVersionWithMacRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.ProfileID = ProfileID
            inValue.Body.ClientInfo = ClientInfo
            inValue.Body.RightsID = RightsID
            inValue.Body.UserLoginName = UserLoginName
            inValue.Body.UserFullName = UserFullName
            inValue.Body.GroupID = GroupID
            inValue.Body.Message = Message
            inValue.Body.IP = IP
            inValue.Body.Platform = Platform
            inValue.Body.ContentType = ContentType
            inValue.Body.Version = Version
            inValue.Body.Mac = Mac
            Dim retVal As DRMX_EN.getLicenseRemoteToTableWithVersionWithMacResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).getLicenseRemoteToTableWithVersionWithMac(inValue)
            Message = retVal.Body.Message
            Return retVal.Body.getLicenseRemoteToTableWithVersionWithMacResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_getLicenseRemoteToTableWithVersionWithMacAsync(ByVal request As DRMX_EN.getLicenseRemoteToTableWithVersionWithMacRequest) As System.Threading.Tasks.Task(Of DRMX_EN.getLicenseRemoteToTableWithVersionWithMacResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.getLicenseRemoteToTableWithVersionWithMacAsync
            Return MyBase.Channel.getLicenseRemoteToTableWithVersionWithMacAsync(request)
        End Function
        
        Public Function getLicenseRemoteToTableWithVersionWithMacAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal ProfileID As String, ByVal ClientInfo As String, ByVal RightsID As String, ByVal UserLoginName As String, ByVal UserFullName As String, ByVal GroupID As String, ByVal Message As String, ByVal IP As String, ByVal Platform As String, ByVal ContentType As String, ByVal Version As String, ByVal Mac As String) As System.Threading.Tasks.Task(Of DRMX_EN.getLicenseRemoteToTableWithVersionWithMacResponse)
            Dim inValue As DRMX_EN.getLicenseRemoteToTableWithVersionWithMacRequest = New DRMX_EN.getLicenseRemoteToTableWithVersionWithMacRequest()
            inValue.Body = New DRMX_EN.getLicenseRemoteToTableWithVersionWithMacRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.ProfileID = ProfileID
            inValue.Body.ClientInfo = ClientInfo
            inValue.Body.RightsID = RightsID
            inValue.Body.UserLoginName = UserLoginName
            inValue.Body.UserFullName = UserFullName
            inValue.Body.GroupID = GroupID
            inValue.Body.Message = Message
            inValue.Body.IP = IP
            inValue.Body.Platform = Platform
            inValue.Body.ContentType = ContentType
            inValue.Body.Version = Version
            inValue.Body.Mac = Mac
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).getLicenseRemoteToTableWithVersionWithMacAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_getLicenseForHHMeet(ByVal request As DRMX_EN.getLicenseForHHMeetRequest) As DRMX_EN.getLicenseForHHMeetResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.getLicenseForHHMeet
            Return MyBase.Channel.getLicenseForHHMeet(request)
        End Function
        
        Public Function getLicenseForHHMeet(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal ProfileID As String, ByVal ClientInfo As String, ByVal RightsID As String, ByVal UserLoginName As String, ByVal UserFullName As String, ByVal GroupID As String, ByRef Message As String, ByVal IP As String, ByVal Platform As String, ByVal ContentType As String, ByVal Version As String) As String
            Dim inValue As DRMX_EN.getLicenseForHHMeetRequest = New DRMX_EN.getLicenseForHHMeetRequest()
            inValue.Body = New DRMX_EN.getLicenseForHHMeetRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.ProfileID = ProfileID
            inValue.Body.ClientInfo = ClientInfo
            inValue.Body.RightsID = RightsID
            inValue.Body.UserLoginName = UserLoginName
            inValue.Body.UserFullName = UserFullName
            inValue.Body.GroupID = GroupID
            inValue.Body.Message = Message
            inValue.Body.IP = IP
            inValue.Body.Platform = Platform
            inValue.Body.ContentType = ContentType
            inValue.Body.Version = Version
            Dim retVal As DRMX_EN.getLicenseForHHMeetResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).getLicenseForHHMeet(inValue)
            Message = retVal.Body.Message
            Return retVal.Body.getLicenseForHHMeetResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_getLicenseForHHMeetAsync(ByVal request As DRMX_EN.getLicenseForHHMeetRequest) As System.Threading.Tasks.Task(Of DRMX_EN.getLicenseForHHMeetResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.getLicenseForHHMeetAsync
            Return MyBase.Channel.getLicenseForHHMeetAsync(request)
        End Function
        
        Public Function getLicenseForHHMeetAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal ProfileID As String, ByVal ClientInfo As String, ByVal RightsID As String, ByVal UserLoginName As String, ByVal UserFullName As String, ByVal GroupID As String, ByVal Message As String, ByVal IP As String, ByVal Platform As String, ByVal ContentType As String, ByVal Version As String) As System.Threading.Tasks.Task(Of DRMX_EN.getLicenseForHHMeetResponse)
            Dim inValue As DRMX_EN.getLicenseForHHMeetRequest = New DRMX_EN.getLicenseForHHMeetRequest()
            inValue.Body = New DRMX_EN.getLicenseForHHMeetRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.ProfileID = ProfileID
            inValue.Body.ClientInfo = ClientInfo
            inValue.Body.RightsID = RightsID
            inValue.Body.UserLoginName = UserLoginName
            inValue.Body.UserFullName = UserFullName
            inValue.Body.GroupID = GroupID
            inValue.Body.Message = Message
            inValue.Body.IP = IP
            inValue.Body.Platform = Platform
            inValue.Body.ContentType = ContentType
            inValue.Body.Version = Version
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).getLicenseForHHMeetAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_GetLicenseProfileDetails(ByVal request As DRMX_EN.GetLicenseProfileDetailsRequest) As DRMX_EN.GetLicenseProfileDetailsResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.GetLicenseProfileDetails
            Return MyBase.Channel.GetLicenseProfileDetails(request)
        End Function
        
        Public Function GetLicenseProfileDetails(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal ProfileID As String, ByRef ProfileName As String, ByRef YourProductID As String) As String
            Dim inValue As DRMX_EN.GetLicenseProfileDetailsRequest = New DRMX_EN.GetLicenseProfileDetailsRequest()
            inValue.Body = New DRMX_EN.GetLicenseProfileDetailsRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.ProfileID = ProfileID
            inValue.Body.ProfileName = ProfileName
            inValue.Body.YourProductID = YourProductID
            Dim retVal As DRMX_EN.GetLicenseProfileDetailsResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).GetLicenseProfileDetails(inValue)
            ProfileName = retVal.Body.ProfileName
            YourProductID = retVal.Body.YourProductID
            Return retVal.Body.GetLicenseProfileDetailsResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_GetLicenseProfileDetailsAsync(ByVal request As DRMX_EN.GetLicenseProfileDetailsRequest) As System.Threading.Tasks.Task(Of DRMX_EN.GetLicenseProfileDetailsResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.GetLicenseProfileDetailsAsync
            Return MyBase.Channel.GetLicenseProfileDetailsAsync(request)
        End Function
        
        Public Function GetLicenseProfileDetailsAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal ProfileID As String, ByVal ProfileName As String, ByVal YourProductID As String) As System.Threading.Tasks.Task(Of DRMX_EN.GetLicenseProfileDetailsResponse)
            Dim inValue As DRMX_EN.GetLicenseProfileDetailsRequest = New DRMX_EN.GetLicenseProfileDetailsRequest()
            inValue.Body = New DRMX_EN.GetLicenseProfileDetailsRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.ProfileID = ProfileID
            inValue.Body.ProfileName = ProfileName
            inValue.Body.YourProductID = YourProductID
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).GetLicenseProfileDetailsAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_GetLicenseProfileIDByEncryptID(ByVal request As DRMX_EN.GetLicenseProfileIDByEncryptIDRequest) As DRMX_EN.GetLicenseProfileIDByEncryptIDResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.GetLicenseProfileIDByEncryptID
            Return MyBase.Channel.GetLicenseProfileIDByEncryptID(request)
        End Function
        
        Public Function GetLicenseProfileIDByEncryptID(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal EncryptedProfileID As String, ByVal Pass As String) As String
            Dim inValue As DRMX_EN.GetLicenseProfileIDByEncryptIDRequest = New DRMX_EN.GetLicenseProfileIDByEncryptIDRequest()
            inValue.Body = New DRMX_EN.GetLicenseProfileIDByEncryptIDRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.EncryptedProfileID = EncryptedProfileID
            inValue.Body.Pass = Pass
            Dim retVal As DRMX_EN.GetLicenseProfileIDByEncryptIDResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).GetLicenseProfileIDByEncryptID(inValue)
            Return retVal.Body.GetLicenseProfileIDByEncryptIDResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_GetLicenseProfileIDByEncryptIDAsync(ByVal request As DRMX_EN.GetLicenseProfileIDByEncryptIDRequest) As System.Threading.Tasks.Task(Of DRMX_EN.GetLicenseProfileIDByEncryptIDResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.GetLicenseProfileIDByEncryptIDAsync
            Return MyBase.Channel.GetLicenseProfileIDByEncryptIDAsync(request)
        End Function
        
        Public Function GetLicenseProfileIDByEncryptIDAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal EncryptedProfileID As String, ByVal Pass As String) As System.Threading.Tasks.Task(Of DRMX_EN.GetLicenseProfileIDByEncryptIDResponse)
            Dim inValue As DRMX_EN.GetLicenseProfileIDByEncryptIDRequest = New DRMX_EN.GetLicenseProfileIDByEncryptIDRequest()
            inValue.Body = New DRMX_EN.GetLicenseProfileIDByEncryptIDRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.EncryptedProfileID = EncryptedProfileID
            inValue.Body.Pass = Pass
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).GetLicenseProfileIDByEncryptIDAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_DeleteLicenseProfile(ByVal request As DRMX_EN.DeleteLicenseProfileRequest) As DRMX_EN.DeleteLicenseProfileResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.DeleteLicenseProfile
            Return MyBase.Channel.DeleteLicenseProfile(request)
        End Function
        
        Public Function DeleteLicenseProfile(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal ProfileID As Integer) As String
            Dim inValue As DRMX_EN.DeleteLicenseProfileRequest = New DRMX_EN.DeleteLicenseProfileRequest()
            inValue.Body = New DRMX_EN.DeleteLicenseProfileRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.ProfileID = ProfileID
            Dim retVal As DRMX_EN.DeleteLicenseProfileResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).DeleteLicenseProfile(inValue)
            Return retVal.Body.DeleteLicenseProfileResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_DeleteLicenseProfileAsync(ByVal request As DRMX_EN.DeleteLicenseProfileRequest) As System.Threading.Tasks.Task(Of DRMX_EN.DeleteLicenseProfileResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.DeleteLicenseProfileAsync
            Return MyBase.Channel.DeleteLicenseProfileAsync(request)
        End Function
        
        Public Function DeleteLicenseProfileAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal ProfileID As Integer) As System.Threading.Tasks.Task(Of DRMX_EN.DeleteLicenseProfileResponse)
            Dim inValue As DRMX_EN.DeleteLicenseProfileRequest = New DRMX_EN.DeleteLicenseProfileRequest()
            inValue.Body = New DRMX_EN.DeleteLicenseProfileRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.ProfileID = ProfileID
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).DeleteLicenseProfileAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_AddNewUser(ByVal request As DRMX_EN.AddNewUserRequest) As DRMX_EN.AddNewUserResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.AddNewUser
            Return MyBase.Channel.AddNewUser(request)
        End Function
        
        Public Function AddNewUser( _
                    ByVal AdminEmail As String,  _
                    ByVal WebServiceAuthStr As String,  _
                    ByVal GroupID As String,  _
                    ByVal UserLoginName As String,  _
                    ByVal UserPassword As String,  _
                    ByVal UserEmail As String,  _
                    ByVal UserFullName As String,  _
                    ByVal Title As String,  _
                    ByVal Company As String,  _
                    ByVal Address As String,  _
                    ByVal City As String,  _
                    ByVal Province As String,  _
                    ByVal ZipCode As String,  _
                    ByVal Phone As String,  _
                    ByVal CompanyURL As String,  _
                    ByVal SecurityQuestion As String,  _
                    ByVal SecurityAnswer As String,  _
                    ByVal IP As String,  _
                    ByVal Money As String,  _
                    ByVal BindNumber As String,  _
                    ByVal IsApproved As String,  _
                    ByVal IsLockedOut As String) As String
            Dim inValue As DRMX_EN.AddNewUserRequest = New DRMX_EN.AddNewUserRequest()
            inValue.Body = New DRMX_EN.AddNewUserRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.GroupID = GroupID
            inValue.Body.UserLoginName = UserLoginName
            inValue.Body.UserPassword = UserPassword
            inValue.Body.UserEmail = UserEmail
            inValue.Body.UserFullName = UserFullName
            inValue.Body.Title = Title
            inValue.Body.Company = Company
            inValue.Body.Address = Address
            inValue.Body.City = City
            inValue.Body.Province = Province
            inValue.Body.ZipCode = ZipCode
            inValue.Body.Phone = Phone
            inValue.Body.CompanyURL = CompanyURL
            inValue.Body.SecurityQuestion = SecurityQuestion
            inValue.Body.SecurityAnswer = SecurityAnswer
            inValue.Body.IP = IP
            inValue.Body.Money = Money
            inValue.Body.BindNumber = BindNumber
            inValue.Body.IsApproved = IsApproved
            inValue.Body.IsLockedOut = IsLockedOut
            Dim retVal As DRMX_EN.AddNewUserResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).AddNewUser(inValue)
            Return retVal.Body.AddNewUserResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_AddNewUserAsync(ByVal request As DRMX_EN.AddNewUserRequest) As System.Threading.Tasks.Task(Of DRMX_EN.AddNewUserResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.AddNewUserAsync
            Return MyBase.Channel.AddNewUserAsync(request)
        End Function
        
        Public Function AddNewUserAsync( _
                    ByVal AdminEmail As String,  _
                    ByVal WebServiceAuthStr As String,  _
                    ByVal GroupID As String,  _
                    ByVal UserLoginName As String,  _
                    ByVal UserPassword As String,  _
                    ByVal UserEmail As String,  _
                    ByVal UserFullName As String,  _
                    ByVal Title As String,  _
                    ByVal Company As String,  _
                    ByVal Address As String,  _
                    ByVal City As String,  _
                    ByVal Province As String,  _
                    ByVal ZipCode As String,  _
                    ByVal Phone As String,  _
                    ByVal CompanyURL As String,  _
                    ByVal SecurityQuestion As String,  _
                    ByVal SecurityAnswer As String,  _
                    ByVal IP As String,  _
                    ByVal Money As String,  _
                    ByVal BindNumber As String,  _
                    ByVal IsApproved As String,  _
                    ByVal IsLockedOut As String) As System.Threading.Tasks.Task(Of DRMX_EN.AddNewUserResponse)
            Dim inValue As DRMX_EN.AddNewUserRequest = New DRMX_EN.AddNewUserRequest()
            inValue.Body = New DRMX_EN.AddNewUserRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.GroupID = GroupID
            inValue.Body.UserLoginName = UserLoginName
            inValue.Body.UserPassword = UserPassword
            inValue.Body.UserEmail = UserEmail
            inValue.Body.UserFullName = UserFullName
            inValue.Body.Title = Title
            inValue.Body.Company = Company
            inValue.Body.Address = Address
            inValue.Body.City = City
            inValue.Body.Province = Province
            inValue.Body.ZipCode = ZipCode
            inValue.Body.Phone = Phone
            inValue.Body.CompanyURL = CompanyURL
            inValue.Body.SecurityQuestion = SecurityQuestion
            inValue.Body.SecurityAnswer = SecurityAnswer
            inValue.Body.IP = IP
            inValue.Body.Money = Money
            inValue.Body.BindNumber = BindNumber
            inValue.Body.IsApproved = IsApproved
            inValue.Body.IsLockedOut = IsLockedOut
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).AddNewUserAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_UpdateUser(ByVal request As DRMX_EN.UpdateUserRequest) As DRMX_EN.UpdateUserResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.UpdateUser
            Return MyBase.Channel.UpdateUser(request)
        End Function
        
        Public Function UpdateUser( _
                    ByVal AdminEmail As String,  _
                    ByVal WebServiceAuthStr As String,  _
                    ByVal GroupID As String,  _
                    ByVal UserLoginName As String,  _
                    ByVal UserPassword As String,  _
                    ByVal UserEmail As String,  _
                    ByVal UserFullName As String,  _
                    ByVal Title As String,  _
                    ByVal Company As String,  _
                    ByVal Address As String,  _
                    ByVal City As String,  _
                    ByVal Province As String,  _
                    ByVal ZipCode As String,  _
                    ByVal Phone As String,  _
                    ByVal CompanyURL As String,  _
                    ByVal SecurityQuestion As String,  _
                    ByVal SecurityAnswer As String,  _
                    ByVal IP As String,  _
                    ByVal BindNumber As String,  _
                    ByVal IsApproved As String,  _
                    ByVal IsLockedOut As String) As String
            Dim inValue As DRMX_EN.UpdateUserRequest = New DRMX_EN.UpdateUserRequest()
            inValue.Body = New DRMX_EN.UpdateUserRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.GroupID = GroupID
            inValue.Body.UserLoginName = UserLoginName
            inValue.Body.UserPassword = UserPassword
            inValue.Body.UserEmail = UserEmail
            inValue.Body.UserFullName = UserFullName
            inValue.Body.Title = Title
            inValue.Body.Company = Company
            inValue.Body.Address = Address
            inValue.Body.City = City
            inValue.Body.Province = Province
            inValue.Body.ZipCode = ZipCode
            inValue.Body.Phone = Phone
            inValue.Body.CompanyURL = CompanyURL
            inValue.Body.SecurityQuestion = SecurityQuestion
            inValue.Body.SecurityAnswer = SecurityAnswer
            inValue.Body.IP = IP
            inValue.Body.BindNumber = BindNumber
            inValue.Body.IsApproved = IsApproved
            inValue.Body.IsLockedOut = IsLockedOut
            Dim retVal As DRMX_EN.UpdateUserResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).UpdateUser(inValue)
            Return retVal.Body.UpdateUserResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_UpdateUserAsync(ByVal request As DRMX_EN.UpdateUserRequest) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateUserResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.UpdateUserAsync
            Return MyBase.Channel.UpdateUserAsync(request)
        End Function
        
        Public Function UpdateUserAsync( _
                    ByVal AdminEmail As String,  _
                    ByVal WebServiceAuthStr As String,  _
                    ByVal GroupID As String,  _
                    ByVal UserLoginName As String,  _
                    ByVal UserPassword As String,  _
                    ByVal UserEmail As String,  _
                    ByVal UserFullName As String,  _
                    ByVal Title As String,  _
                    ByVal Company As String,  _
                    ByVal Address As String,  _
                    ByVal City As String,  _
                    ByVal Province As String,  _
                    ByVal ZipCode As String,  _
                    ByVal Phone As String,  _
                    ByVal CompanyURL As String,  _
                    ByVal SecurityQuestion As String,  _
                    ByVal SecurityAnswer As String,  _
                    ByVal IP As String,  _
                    ByVal BindNumber As String,  _
                    ByVal IsApproved As String,  _
                    ByVal IsLockedOut As String) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateUserResponse)
            Dim inValue As DRMX_EN.UpdateUserRequest = New DRMX_EN.UpdateUserRequest()
            inValue.Body = New DRMX_EN.UpdateUserRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.GroupID = GroupID
            inValue.Body.UserLoginName = UserLoginName
            inValue.Body.UserPassword = UserPassword
            inValue.Body.UserEmail = UserEmail
            inValue.Body.UserFullName = UserFullName
            inValue.Body.Title = Title
            inValue.Body.Company = Company
            inValue.Body.Address = Address
            inValue.Body.City = City
            inValue.Body.Province = Province
            inValue.Body.ZipCode = ZipCode
            inValue.Body.Phone = Phone
            inValue.Body.CompanyURL = CompanyURL
            inValue.Body.SecurityQuestion = SecurityQuestion
            inValue.Body.SecurityAnswer = SecurityAnswer
            inValue.Body.IP = IP
            inValue.Body.BindNumber = BindNumber
            inValue.Body.IsApproved = IsApproved
            inValue.Body.IsLockedOut = IsLockedOut
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).UpdateUserAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_UpdateUserPassword(ByVal request As DRMX_EN.UpdateUserPasswordRequest) As DRMX_EN.UpdateUserPasswordResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.UpdateUserPassword
            Return MyBase.Channel.UpdateUserPassword(request)
        End Function
        
        Public Function UpdateUserPassword(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal UserLoginName As String, ByVal UserPassword As String) As String
            Dim inValue As DRMX_EN.UpdateUserPasswordRequest = New DRMX_EN.UpdateUserPasswordRequest()
            inValue.Body = New DRMX_EN.UpdateUserPasswordRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.UserLoginName = UserLoginName
            inValue.Body.UserPassword = UserPassword
            Dim retVal As DRMX_EN.UpdateUserPasswordResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).UpdateUserPassword(inValue)
            Return retVal.Body.UpdateUserPasswordResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_UpdateUserPasswordAsync(ByVal request As DRMX_EN.UpdateUserPasswordRequest) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateUserPasswordResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.UpdateUserPasswordAsync
            Return MyBase.Channel.UpdateUserPasswordAsync(request)
        End Function
        
        Public Function UpdateUserPasswordAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal UserLoginName As String, ByVal UserPassword As String) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateUserPasswordResponse)
            Dim inValue As DRMX_EN.UpdateUserPasswordRequest = New DRMX_EN.UpdateUserPasswordRequest()
            inValue.Body = New DRMX_EN.UpdateUserPasswordRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.UserLoginName = UserLoginName
            inValue.Body.UserPassword = UserPassword
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).UpdateUserPasswordAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_UpdateUserRevokeSeedIDs(ByVal request As DRMX_EN.UpdateUserRevokeSeedIDsRequest) As DRMX_EN.UpdateUserRevokeSeedIDsResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.UpdateUserRevokeSeedIDs
            Return MyBase.Channel.UpdateUserRevokeSeedIDs(request)
        End Function
        
        Public Function UpdateUserRevokeSeedIDs(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal UserLoginName As String, ByVal RevokeSeedIDs As String) As String
            Dim inValue As DRMX_EN.UpdateUserRevokeSeedIDsRequest = New DRMX_EN.UpdateUserRevokeSeedIDsRequest()
            inValue.Body = New DRMX_EN.UpdateUserRevokeSeedIDsRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.UserLoginName = UserLoginName
            inValue.Body.RevokeSeedIDs = RevokeSeedIDs
            Dim retVal As DRMX_EN.UpdateUserRevokeSeedIDsResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).UpdateUserRevokeSeedIDs(inValue)
            Return retVal.Body.UpdateUserRevokeSeedIDsResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_UpdateUserRevokeSeedIDsAsync(ByVal request As DRMX_EN.UpdateUserRevokeSeedIDsRequest) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateUserRevokeSeedIDsResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.UpdateUserRevokeSeedIDsAsync
            Return MyBase.Channel.UpdateUserRevokeSeedIDsAsync(request)
        End Function
        
        Public Function UpdateUserRevokeSeedIDsAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal UserLoginName As String, ByVal RevokeSeedIDs As String) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateUserRevokeSeedIDsResponse)
            Dim inValue As DRMX_EN.UpdateUserRevokeSeedIDsRequest = New DRMX_EN.UpdateUserRevokeSeedIDsRequest()
            inValue.Body = New DRMX_EN.UpdateUserRevokeSeedIDsRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.UserLoginName = UserLoginName
            inValue.Body.RevokeSeedIDs = RevokeSeedIDs
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).UpdateUserRevokeSeedIDsAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_UpdateUserGroup(ByVal request As DRMX_EN.UpdateUserGroupRequest) As DRMX_EN.UpdateUserGroupResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.UpdateUserGroup
            Return MyBase.Channel.UpdateUserGroup(request)
        End Function
        
        Public Function UpdateUserGroup(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal GroupID As Integer, ByVal GroupName As String, ByVal IP1 As String, ByVal IP2 As String, ByVal RequireLogin As Boolean, ByVal CustomerID As Integer, ByVal BindNum As Integer) As String
            Dim inValue As DRMX_EN.UpdateUserGroupRequest = New DRMX_EN.UpdateUserGroupRequest()
            inValue.Body = New DRMX_EN.UpdateUserGroupRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.GroupID = GroupID
            inValue.Body.GroupName = GroupName
            inValue.Body.IP1 = IP1
            inValue.Body.IP2 = IP2
            inValue.Body.RequireLogin = RequireLogin
            inValue.Body.CustomerID = CustomerID
            inValue.Body.BindNum = BindNum
            Dim retVal As DRMX_EN.UpdateUserGroupResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).UpdateUserGroup(inValue)
            Return retVal.Body.UpdateUserGroupResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_UpdateUserGroupAsync(ByVal request As DRMX_EN.UpdateUserGroupRequest) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateUserGroupResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.UpdateUserGroupAsync
            Return MyBase.Channel.UpdateUserGroupAsync(request)
        End Function
        
        Public Function UpdateUserGroupAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal GroupID As Integer, ByVal GroupName As String, ByVal IP1 As String, ByVal IP2 As String, ByVal RequireLogin As Boolean, ByVal CustomerID As Integer, ByVal BindNum As Integer) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateUserGroupResponse)
            Dim inValue As DRMX_EN.UpdateUserGroupRequest = New DRMX_EN.UpdateUserGroupRequest()
            inValue.Body = New DRMX_EN.UpdateUserGroupRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.GroupID = GroupID
            inValue.Body.GroupName = GroupName
            inValue.Body.IP1 = IP1
            inValue.Body.IP2 = IP2
            inValue.Body.RequireLogin = RequireLogin
            inValue.Body.CustomerID = CustomerID
            inValue.Body.BindNum = BindNum
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).UpdateUserGroupAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_GetUserGroupDetails(ByVal request As DRMX_EN.GetUserGroupDetailsRequest) As DRMX_EN.GetUserGroupDetailsResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.GetUserGroupDetails
            Return MyBase.Channel.GetUserGroupDetails(request)
        End Function
        
        Public Function GetUserGroupDetails(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal GroupID As Integer) As DRMX_EN.GroupDetails
            Dim inValue As DRMX_EN.GetUserGroupDetailsRequest = New DRMX_EN.GetUserGroupDetailsRequest()
            inValue.Body = New DRMX_EN.GetUserGroupDetailsRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.GroupID = GroupID
            Dim retVal As DRMX_EN.GetUserGroupDetailsResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).GetUserGroupDetails(inValue)
            Return retVal.Body.GetUserGroupDetailsResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_GetUserGroupDetailsAsync(ByVal request As DRMX_EN.GetUserGroupDetailsRequest) As System.Threading.Tasks.Task(Of DRMX_EN.GetUserGroupDetailsResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.GetUserGroupDetailsAsync
            Return MyBase.Channel.GetUserGroupDetailsAsync(request)
        End Function
        
        Public Function GetUserGroupDetailsAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal GroupID As Integer) As System.Threading.Tasks.Task(Of DRMX_EN.GetUserGroupDetailsResponse)
            Dim inValue As DRMX_EN.GetUserGroupDetailsRequest = New DRMX_EN.GetUserGroupDetailsRequest()
            inValue.Body = New DRMX_EN.GetUserGroupDetailsRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.GroupID = GroupID
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).GetUserGroupDetailsAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_DeleteUserGroup(ByVal request As DRMX_EN.DeleteUserGroupRequest) As DRMX_EN.DeleteUserGroupResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.DeleteUserGroup
            Return MyBase.Channel.DeleteUserGroup(request)
        End Function
        
        Public Function DeleteUserGroup(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal GroupID As Integer) As String
            Dim inValue As DRMX_EN.DeleteUserGroupRequest = New DRMX_EN.DeleteUserGroupRequest()
            inValue.Body = New DRMX_EN.DeleteUserGroupRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.GroupID = GroupID
            Dim retVal As DRMX_EN.DeleteUserGroupResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).DeleteUserGroup(inValue)
            Return retVal.Body.DeleteUserGroupResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_DeleteUserGroupAsync(ByVal request As DRMX_EN.DeleteUserGroupRequest) As System.Threading.Tasks.Task(Of DRMX_EN.DeleteUserGroupResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.DeleteUserGroupAsync
            Return MyBase.Channel.DeleteUserGroupAsync(request)
        End Function
        
        Public Function DeleteUserGroupAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal GroupID As Integer) As System.Threading.Tasks.Task(Of DRMX_EN.DeleteUserGroupResponse)
            Dim inValue As DRMX_EN.DeleteUserGroupRequest = New DRMX_EN.DeleteUserGroupRequest()
            inValue.Body = New DRMX_EN.DeleteUserGroupRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.GroupID = GroupID
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).DeleteUserGroupAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_UpdateLicenseProfile(ByVal request As DRMX_EN.UpdateLicenseProfileRequest) As DRMX_EN.UpdateLicenseProfileResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.UpdateLicenseProfile
            Return MyBase.Channel.UpdateLicenseProfile(request)
        End Function
        
        Public Function UpdateLicenseProfile(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal ProfileID As String, ByVal ProfileName As String, ByVal YourProductID As String, ByVal SecurityVersion As String) As String
            Dim inValue As DRMX_EN.UpdateLicenseProfileRequest = New DRMX_EN.UpdateLicenseProfileRequest()
            inValue.Body = New DRMX_EN.UpdateLicenseProfileRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.ProfileID = ProfileID
            inValue.Body.ProfileName = ProfileName
            inValue.Body.YourProductID = YourProductID
            inValue.Body.SecurityVersion = SecurityVersion
            Dim retVal As DRMX_EN.UpdateLicenseProfileResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).UpdateLicenseProfile(inValue)
            Return retVal.Body.UpdateLicenseProfileResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_UpdateLicenseProfileAsync(ByVal request As DRMX_EN.UpdateLicenseProfileRequest) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateLicenseProfileResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.UpdateLicenseProfileAsync
            Return MyBase.Channel.UpdateLicenseProfileAsync(request)
        End Function
        
        Public Function UpdateLicenseProfileAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal ProfileID As String, ByVal ProfileName As String, ByVal YourProductID As String, ByVal SecurityVersion As String) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateLicenseProfileResponse)
            Dim inValue As DRMX_EN.UpdateLicenseProfileRequest = New DRMX_EN.UpdateLicenseProfileRequest()
            inValue.Body = New DRMX_EN.UpdateLicenseProfileRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.ProfileID = ProfileID
            inValue.Body.ProfileName = ProfileName
            inValue.Body.YourProductID = YourProductID
            inValue.Body.SecurityVersion = SecurityVersion
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).UpdateLicenseProfileAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_UserAddMoney(ByVal request As DRMX_EN.UserAddMoneyRequest) As DRMX_EN.UserAddMoneyResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.UserAddMoney
            Return MyBase.Channel.UserAddMoney(request)
        End Function
        
        Public Function UserAddMoney(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal Money As String, ByVal UserEmail As String) As String
            Dim inValue As DRMX_EN.UserAddMoneyRequest = New DRMX_EN.UserAddMoneyRequest()
            inValue.Body = New DRMX_EN.UserAddMoneyRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.Money = Money
            inValue.Body.UserEmail = UserEmail
            Dim retVal As DRMX_EN.UserAddMoneyResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).UserAddMoney(inValue)
            Return retVal.Body.UserAddMoneyResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_UserAddMoneyAsync(ByVal request As DRMX_EN.UserAddMoneyRequest) As System.Threading.Tasks.Task(Of DRMX_EN.UserAddMoneyResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.UserAddMoneyAsync
            Return MyBase.Channel.UserAddMoneyAsync(request)
        End Function
        
        Public Function UserAddMoneyAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal Money As String, ByVal UserEmail As String) As System.Threading.Tasks.Task(Of DRMX_EN.UserAddMoneyResponse)
            Dim inValue As DRMX_EN.UserAddMoneyRequest = New DRMX_EN.UserAddMoneyRequest()
            inValue.Body = New DRMX_EN.UserAddMoneyRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.Money = Money
            inValue.Body.UserEmail = UserEmail
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).UserAddMoneyAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_UserAddMoneyByUserName(ByVal request As DRMX_EN.UserAddMoneyByUserNameRequest) As DRMX_EN.UserAddMoneyByUserNameResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.UserAddMoneyByUserName
            Return MyBase.Channel.UserAddMoneyByUserName(request)
        End Function
        
        Public Function UserAddMoneyByUserName(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal Money As String, ByVal UserName As String) As String
            Dim inValue As DRMX_EN.UserAddMoneyByUserNameRequest = New DRMX_EN.UserAddMoneyByUserNameRequest()
            inValue.Body = New DRMX_EN.UserAddMoneyByUserNameRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.Money = Money
            inValue.Body.UserName = UserName
            Dim retVal As DRMX_EN.UserAddMoneyByUserNameResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).UserAddMoneyByUserName(inValue)
            Return retVal.Body.UserAddMoneyByUserNameResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_UserAddMoneyByUserNameAsync(ByVal request As DRMX_EN.UserAddMoneyByUserNameRequest) As System.Threading.Tasks.Task(Of DRMX_EN.UserAddMoneyByUserNameResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.UserAddMoneyByUserNameAsync
            Return MyBase.Channel.UserAddMoneyByUserNameAsync(request)
        End Function
        
        Public Function UserAddMoneyByUserNameAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal Money As String, ByVal UserName As String) As System.Threading.Tasks.Task(Of DRMX_EN.UserAddMoneyByUserNameResponse)
            Dim inValue As DRMX_EN.UserAddMoneyByUserNameRequest = New DRMX_EN.UserAddMoneyByUserNameRequest()
            inValue.Body = New DRMX_EN.UserAddMoneyByUserNameRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.Money = Money
            inValue.Body.UserName = UserName
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).UserAddMoneyByUserNameAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_UpdateRight(ByVal request As DRMX_EN.UpdateRightRequest) As DRMX_EN.UpdateRightResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.UpdateRight
            Return MyBase.Channel.UpdateRight(request)
        End Function
        
        Public Function UpdateRight( _
                    ByVal AdminEmail As String,  _
                    ByVal WebServiceAuthStr As String,  _
                    ByVal RightsID As String,  _
                    ByVal Description As String,  _
                    ByVal PlayCount As String,  _
                    ByVal BeginDate As String,  _
                    ByVal ExpirationDate As String,  _
                    ByVal ExpirationAfterFirstUse As String,  _
                    ByVal RightsPrice As String,  _
                    ByVal AllowPrint As String,  _
                    ByVal AllowClipBoard As String,  _
                    ByVal AllowDoc As String,  _
                    ByVal EnableWatermark As String,  _
                    ByVal WatermarkText As String,  _
                    ByVal WatermarkArea As String,  _
                    ByVal RandomChangeArea As String,  _
                    ByVal RandomFrquency As String,  _
                    ByVal EnableBlacklist As String,  _
                    ByVal EnableWhitelist As String,  _
                    ByVal ExpireTimeUnit As String,  _
                    ByVal PreviewTime As Integer,  _
                    ByVal PreviewTimeUnit As String,  _
                    ByVal PreviewPage As Integer) As String
            Dim inValue As DRMX_EN.UpdateRightRequest = New DRMX_EN.UpdateRightRequest()
            inValue.Body = New DRMX_EN.UpdateRightRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.RightsID = RightsID
            inValue.Body.Description = Description
            inValue.Body.PlayCount = PlayCount
            inValue.Body.BeginDate = BeginDate
            inValue.Body.ExpirationDate = ExpirationDate
            inValue.Body.ExpirationAfterFirstUse = ExpirationAfterFirstUse
            inValue.Body.RightsPrice = RightsPrice
            inValue.Body.AllowPrint = AllowPrint
            inValue.Body.AllowClipBoard = AllowClipBoard
            inValue.Body.AllowDoc = AllowDoc
            inValue.Body.EnableWatermark = EnableWatermark
            inValue.Body.WatermarkText = WatermarkText
            inValue.Body.WatermarkArea = WatermarkArea
            inValue.Body.RandomChangeArea = RandomChangeArea
            inValue.Body.RandomFrquency = RandomFrquency
            inValue.Body.EnableBlacklist = EnableBlacklist
            inValue.Body.EnableWhitelist = EnableWhitelist
            inValue.Body.ExpireTimeUnit = ExpireTimeUnit
            inValue.Body.PreviewTime = PreviewTime
            inValue.Body.PreviewTimeUnit = PreviewTimeUnit
            inValue.Body.PreviewPage = PreviewPage
            Dim retVal As DRMX_EN.UpdateRightResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).UpdateRight(inValue)
            Return retVal.Body.UpdateRightResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_UpdateRightAsync(ByVal request As DRMX_EN.UpdateRightRequest) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateRightResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.UpdateRightAsync
            Return MyBase.Channel.UpdateRightAsync(request)
        End Function
        
        Public Function UpdateRightAsync( _
                    ByVal AdminEmail As String,  _
                    ByVal WebServiceAuthStr As String,  _
                    ByVal RightsID As String,  _
                    ByVal Description As String,  _
                    ByVal PlayCount As String,  _
                    ByVal BeginDate As String,  _
                    ByVal ExpirationDate As String,  _
                    ByVal ExpirationAfterFirstUse As String,  _
                    ByVal RightsPrice As String,  _
                    ByVal AllowPrint As String,  _
                    ByVal AllowClipBoard As String,  _
                    ByVal AllowDoc As String,  _
                    ByVal EnableWatermark As String,  _
                    ByVal WatermarkText As String,  _
                    ByVal WatermarkArea As String,  _
                    ByVal RandomChangeArea As String,  _
                    ByVal RandomFrquency As String,  _
                    ByVal EnableBlacklist As String,  _
                    ByVal EnableWhitelist As String,  _
                    ByVal ExpireTimeUnit As String,  _
                    ByVal PreviewTime As Integer,  _
                    ByVal PreviewTimeUnit As String,  _
                    ByVal PreviewPage As Integer) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateRightResponse)
            Dim inValue As DRMX_EN.UpdateRightRequest = New DRMX_EN.UpdateRightRequest()
            inValue.Body = New DRMX_EN.UpdateRightRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.RightsID = RightsID
            inValue.Body.Description = Description
            inValue.Body.PlayCount = PlayCount
            inValue.Body.BeginDate = BeginDate
            inValue.Body.ExpirationDate = ExpirationDate
            inValue.Body.ExpirationAfterFirstUse = ExpirationAfterFirstUse
            inValue.Body.RightsPrice = RightsPrice
            inValue.Body.AllowPrint = AllowPrint
            inValue.Body.AllowClipBoard = AllowClipBoard
            inValue.Body.AllowDoc = AllowDoc
            inValue.Body.EnableWatermark = EnableWatermark
            inValue.Body.WatermarkText = WatermarkText
            inValue.Body.WatermarkArea = WatermarkArea
            inValue.Body.RandomChangeArea = RandomChangeArea
            inValue.Body.RandomFrquency = RandomFrquency
            inValue.Body.EnableBlacklist = EnableBlacklist
            inValue.Body.EnableWhitelist = EnableWhitelist
            inValue.Body.ExpireTimeUnit = ExpireTimeUnit
            inValue.Body.PreviewTime = PreviewTime
            inValue.Body.PreviewTimeUnit = PreviewTimeUnit
            inValue.Body.PreviewPage = PreviewPage
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).UpdateRightAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_UpdateRightWithDisableVirtualMachine(ByVal request As DRMX_EN.UpdateRightWithDisableVirtualMachineRequest) As DRMX_EN.UpdateRightWithDisableVirtualMachineResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.UpdateRightWithDisableVirtualMachine
            Return MyBase.Channel.UpdateRightWithDisableVirtualMachine(request)
        End Function
        
        Public Function UpdateRightWithDisableVirtualMachine( _
                    ByVal AdminEmail As String,  _
                    ByVal WebServiceAuthStr As String,  _
                    ByVal RightsID As String,  _
                    ByVal Description As String,  _
                    ByVal PlayCount As String,  _
                    ByVal BeginDate As String,  _
                    ByVal ExpirationDate As String,  _
                    ByVal ExpirationAfterFirstUse As String,  _
                    ByVal RightsPrice As String,  _
                    ByVal AllowPrint As String,  _
                    ByVal AllowClipBoard As String,  _
                    ByVal AllowDoc As String,  _
                    ByVal EnableWatermark As String,  _
                    ByVal WatermarkText As String,  _
                    ByVal WatermarkArea As String,  _
                    ByVal RandomChangeArea As String,  _
                    ByVal RandomFrquency As String,  _
                    ByVal EnableBlacklist As String,  _
                    ByVal EnableWhitelist As String,  _
                    ByVal ExpireTimeUnit As String,  _
                    ByVal PreviewTime As Integer,  _
                    ByVal PreviewTimeUnit As String,  _
                    ByVal PreviewPage As Integer,  _
                    ByVal DisableVirtualMachine As String) As String
            Dim inValue As DRMX_EN.UpdateRightWithDisableVirtualMachineRequest = New DRMX_EN.UpdateRightWithDisableVirtualMachineRequest()
            inValue.Body = New DRMX_EN.UpdateRightWithDisableVirtualMachineRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.RightsID = RightsID
            inValue.Body.Description = Description
            inValue.Body.PlayCount = PlayCount
            inValue.Body.BeginDate = BeginDate
            inValue.Body.ExpirationDate = ExpirationDate
            inValue.Body.ExpirationAfterFirstUse = ExpirationAfterFirstUse
            inValue.Body.RightsPrice = RightsPrice
            inValue.Body.AllowPrint = AllowPrint
            inValue.Body.AllowClipBoard = AllowClipBoard
            inValue.Body.AllowDoc = AllowDoc
            inValue.Body.EnableWatermark = EnableWatermark
            inValue.Body.WatermarkText = WatermarkText
            inValue.Body.WatermarkArea = WatermarkArea
            inValue.Body.RandomChangeArea = RandomChangeArea
            inValue.Body.RandomFrquency = RandomFrquency
            inValue.Body.EnableBlacklist = EnableBlacklist
            inValue.Body.EnableWhitelist = EnableWhitelist
            inValue.Body.ExpireTimeUnit = ExpireTimeUnit
            inValue.Body.PreviewTime = PreviewTime
            inValue.Body.PreviewTimeUnit = PreviewTimeUnit
            inValue.Body.PreviewPage = PreviewPage
            inValue.Body.DisableVirtualMachine = DisableVirtualMachine
            Dim retVal As DRMX_EN.UpdateRightWithDisableVirtualMachineResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).UpdateRightWithDisableVirtualMachine(inValue)
            Return retVal.Body.UpdateRightWithDisableVirtualMachineResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_UpdateRightWithDisableVirtualMachineAsync(ByVal request As DRMX_EN.UpdateRightWithDisableVirtualMachineRequest) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateRightWithDisableVirtualMachineResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.UpdateRightWithDisableVirtualMachineAsync
            Return MyBase.Channel.UpdateRightWithDisableVirtualMachineAsync(request)
        End Function
        
        Public Function UpdateRightWithDisableVirtualMachineAsync( _
                    ByVal AdminEmail As String,  _
                    ByVal WebServiceAuthStr As String,  _
                    ByVal RightsID As String,  _
                    ByVal Description As String,  _
                    ByVal PlayCount As String,  _
                    ByVal BeginDate As String,  _
                    ByVal ExpirationDate As String,  _
                    ByVal ExpirationAfterFirstUse As String,  _
                    ByVal RightsPrice As String,  _
                    ByVal AllowPrint As String,  _
                    ByVal AllowClipBoard As String,  _
                    ByVal AllowDoc As String,  _
                    ByVal EnableWatermark As String,  _
                    ByVal WatermarkText As String,  _
                    ByVal WatermarkArea As String,  _
                    ByVal RandomChangeArea As String,  _
                    ByVal RandomFrquency As String,  _
                    ByVal EnableBlacklist As String,  _
                    ByVal EnableWhitelist As String,  _
                    ByVal ExpireTimeUnit As String,  _
                    ByVal PreviewTime As Integer,  _
                    ByVal PreviewTimeUnit As String,  _
                    ByVal PreviewPage As Integer,  _
                    ByVal DisableVirtualMachine As String) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateRightWithDisableVirtualMachineResponse)
            Dim inValue As DRMX_EN.UpdateRightWithDisableVirtualMachineRequest = New DRMX_EN.UpdateRightWithDisableVirtualMachineRequest()
            inValue.Body = New DRMX_EN.UpdateRightWithDisableVirtualMachineRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.RightsID = RightsID
            inValue.Body.Description = Description
            inValue.Body.PlayCount = PlayCount
            inValue.Body.BeginDate = BeginDate
            inValue.Body.ExpirationDate = ExpirationDate
            inValue.Body.ExpirationAfterFirstUse = ExpirationAfterFirstUse
            inValue.Body.RightsPrice = RightsPrice
            inValue.Body.AllowPrint = AllowPrint
            inValue.Body.AllowClipBoard = AllowClipBoard
            inValue.Body.AllowDoc = AllowDoc
            inValue.Body.EnableWatermark = EnableWatermark
            inValue.Body.WatermarkText = WatermarkText
            inValue.Body.WatermarkArea = WatermarkArea
            inValue.Body.RandomChangeArea = RandomChangeArea
            inValue.Body.RandomFrquency = RandomFrquency
            inValue.Body.EnableBlacklist = EnableBlacklist
            inValue.Body.EnableWhitelist = EnableWhitelist
            inValue.Body.ExpireTimeUnit = ExpireTimeUnit
            inValue.Body.PreviewTime = PreviewTime
            inValue.Body.PreviewTimeUnit = PreviewTimeUnit
            inValue.Body.PreviewPage = PreviewPage
            inValue.Body.DisableVirtualMachine = DisableVirtualMachine
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).UpdateRightWithDisableVirtualMachineAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_UpdateRightWithPrintCount(ByVal request As DRMX_EN.UpdateRightWithPrintCountRequest) As DRMX_EN.UpdateRightWithPrintCountResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.UpdateRightWithPrintCount
            Return MyBase.Channel.UpdateRightWithPrintCount(request)
        End Function
        
        Public Function UpdateRightWithPrintCount( _
                    ByVal AdminEmail As String,  _
                    ByVal WebServiceAuthStr As String,  _
                    ByVal RightsID As String,  _
                    ByVal Description As String,  _
                    ByVal PlayCount As String,  _
                    ByVal BeginDate As String,  _
                    ByVal ExpirationDate As String,  _
                    ByVal ExpirationAfterFirstUse As String,  _
                    ByVal RightsPrice As String,  _
                    ByVal AllowPrint As String,  _
                    ByVal AllowClipBoard As String,  _
                    ByVal AllowDoc As String,  _
                    ByVal EnableWatermark As String,  _
                    ByVal WatermarkText As String,  _
                    ByVal WatermarkArea As String,  _
                    ByVal RandomChangeArea As String,  _
                    ByVal RandomFrquency As String,  _
                    ByVal EnableBlacklist As String,  _
                    ByVal EnableWhitelist As String,  _
                    ByVal PrintCount As String,  _
                    ByVal DisableVirtualPrinter As String,  _
                    ByVal ExpireTimeUnit As String,  _
                    ByVal PreviewTime As Integer,  _
                    ByVal PreviewTimeUnit As String,  _
                    ByVal PreviewPage As Integer) As String
            Dim inValue As DRMX_EN.UpdateRightWithPrintCountRequest = New DRMX_EN.UpdateRightWithPrintCountRequest()
            inValue.Body = New DRMX_EN.UpdateRightWithPrintCountRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.RightsID = RightsID
            inValue.Body.Description = Description
            inValue.Body.PlayCount = PlayCount
            inValue.Body.BeginDate = BeginDate
            inValue.Body.ExpirationDate = ExpirationDate
            inValue.Body.ExpirationAfterFirstUse = ExpirationAfterFirstUse
            inValue.Body.RightsPrice = RightsPrice
            inValue.Body.AllowPrint = AllowPrint
            inValue.Body.AllowClipBoard = AllowClipBoard
            inValue.Body.AllowDoc = AllowDoc
            inValue.Body.EnableWatermark = EnableWatermark
            inValue.Body.WatermarkText = WatermarkText
            inValue.Body.WatermarkArea = WatermarkArea
            inValue.Body.RandomChangeArea = RandomChangeArea
            inValue.Body.RandomFrquency = RandomFrquency
            inValue.Body.EnableBlacklist = EnableBlacklist
            inValue.Body.EnableWhitelist = EnableWhitelist
            inValue.Body.PrintCount = PrintCount
            inValue.Body.DisableVirtualPrinter = DisableVirtualPrinter
            inValue.Body.ExpireTimeUnit = ExpireTimeUnit
            inValue.Body.PreviewTime = PreviewTime
            inValue.Body.PreviewTimeUnit = PreviewTimeUnit
            inValue.Body.PreviewPage = PreviewPage
            Dim retVal As DRMX_EN.UpdateRightWithPrintCountResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).UpdateRightWithPrintCount(inValue)
            Return retVal.Body.UpdateRightWithPrintCountResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_UpdateRightWithPrintCountAsync(ByVal request As DRMX_EN.UpdateRightWithPrintCountRequest) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateRightWithPrintCountResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.UpdateRightWithPrintCountAsync
            Return MyBase.Channel.UpdateRightWithPrintCountAsync(request)
        End Function
        
        Public Function UpdateRightWithPrintCountAsync( _
                    ByVal AdminEmail As String,  _
                    ByVal WebServiceAuthStr As String,  _
                    ByVal RightsID As String,  _
                    ByVal Description As String,  _
                    ByVal PlayCount As String,  _
                    ByVal BeginDate As String,  _
                    ByVal ExpirationDate As String,  _
                    ByVal ExpirationAfterFirstUse As String,  _
                    ByVal RightsPrice As String,  _
                    ByVal AllowPrint As String,  _
                    ByVal AllowClipBoard As String,  _
                    ByVal AllowDoc As String,  _
                    ByVal EnableWatermark As String,  _
                    ByVal WatermarkText As String,  _
                    ByVal WatermarkArea As String,  _
                    ByVal RandomChangeArea As String,  _
                    ByVal RandomFrquency As String,  _
                    ByVal EnableBlacklist As String,  _
                    ByVal EnableWhitelist As String,  _
                    ByVal PrintCount As String,  _
                    ByVal DisableVirtualPrinter As String,  _
                    ByVal ExpireTimeUnit As String,  _
                    ByVal PreviewTime As Integer,  _
                    ByVal PreviewTimeUnit As String,  _
                    ByVal PreviewPage As Integer) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateRightWithPrintCountResponse)
            Dim inValue As DRMX_EN.UpdateRightWithPrintCountRequest = New DRMX_EN.UpdateRightWithPrintCountRequest()
            inValue.Body = New DRMX_EN.UpdateRightWithPrintCountRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.RightsID = RightsID
            inValue.Body.Description = Description
            inValue.Body.PlayCount = PlayCount
            inValue.Body.BeginDate = BeginDate
            inValue.Body.ExpirationDate = ExpirationDate
            inValue.Body.ExpirationAfterFirstUse = ExpirationAfterFirstUse
            inValue.Body.RightsPrice = RightsPrice
            inValue.Body.AllowPrint = AllowPrint
            inValue.Body.AllowClipBoard = AllowClipBoard
            inValue.Body.AllowDoc = AllowDoc
            inValue.Body.EnableWatermark = EnableWatermark
            inValue.Body.WatermarkText = WatermarkText
            inValue.Body.WatermarkArea = WatermarkArea
            inValue.Body.RandomChangeArea = RandomChangeArea
            inValue.Body.RandomFrquency = RandomFrquency
            inValue.Body.EnableBlacklist = EnableBlacklist
            inValue.Body.EnableWhitelist = EnableWhitelist
            inValue.Body.PrintCount = PrintCount
            inValue.Body.DisableVirtualPrinter = DisableVirtualPrinter
            inValue.Body.ExpireTimeUnit = ExpireTimeUnit
            inValue.Body.PreviewTime = PreviewTime
            inValue.Body.PreviewTimeUnit = PreviewTimeUnit
            inValue.Body.PreviewPage = PreviewPage
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).UpdateRightWithPrintCountAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_AddLicenseProfile(ByVal request As DRMX_EN.AddLicenseProfileRequest) As DRMX_EN.AddLicenseProfileResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.AddLicenseProfile
            Return MyBase.Channel.AddLicenseProfile(request)
        End Function
        
        Public Function AddLicenseProfile(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal ProfileName As String, ByVal YourProductID As String, ByVal ForceInternet As String) As String
            Dim inValue As DRMX_EN.AddLicenseProfileRequest = New DRMX_EN.AddLicenseProfileRequest()
            inValue.Body = New DRMX_EN.AddLicenseProfileRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.ProfileName = ProfileName
            inValue.Body.YourProductID = YourProductID
            inValue.Body.ForceInternet = ForceInternet
            Dim retVal As DRMX_EN.AddLicenseProfileResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).AddLicenseProfile(inValue)
            Return retVal.Body.AddLicenseProfileResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_AddLicenseProfileAsync(ByVal request As DRMX_EN.AddLicenseProfileRequest) As System.Threading.Tasks.Task(Of DRMX_EN.AddLicenseProfileResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.AddLicenseProfileAsync
            Return MyBase.Channel.AddLicenseProfileAsync(request)
        End Function
        
        Public Function AddLicenseProfileAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal ProfileName As String, ByVal YourProductID As String, ByVal ForceInternet As String) As System.Threading.Tasks.Task(Of DRMX_EN.AddLicenseProfileResponse)
            Dim inValue As DRMX_EN.AddLicenseProfileRequest = New DRMX_EN.AddLicenseProfileRequest()
            inValue.Body = New DRMX_EN.AddLicenseProfileRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.ProfileName = ProfileName
            inValue.Body.YourProductID = YourProductID
            inValue.Body.ForceInternet = ForceInternet
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).AddLicenseProfileAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_AddLicenseProfileToGroup(ByVal request As DRMX_EN.AddLicenseProfileToGroupRequest) As DRMX_EN.AddLicenseProfileToGroupResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.AddLicenseProfileToGroup
            Return MyBase.Channel.AddLicenseProfileToGroup(request)
        End Function
        
        Public Function AddLicenseProfileToGroup(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal LicenseProfileID As Integer, ByVal GroupID As Integer) As String
            Dim inValue As DRMX_EN.AddLicenseProfileToGroupRequest = New DRMX_EN.AddLicenseProfileToGroupRequest()
            inValue.Body = New DRMX_EN.AddLicenseProfileToGroupRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.LicenseProfileID = LicenseProfileID
            inValue.Body.GroupID = GroupID
            Dim retVal As DRMX_EN.AddLicenseProfileToGroupResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).AddLicenseProfileToGroup(inValue)
            Return retVal.Body.AddLicenseProfileToGroupResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_AddLicenseProfileToGroupAsync(ByVal request As DRMX_EN.AddLicenseProfileToGroupRequest) As System.Threading.Tasks.Task(Of DRMX_EN.AddLicenseProfileToGroupResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.AddLicenseProfileToGroupAsync
            Return MyBase.Channel.AddLicenseProfileToGroupAsync(request)
        End Function
        
        Public Function AddLicenseProfileToGroupAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal LicenseProfileID As Integer, ByVal GroupID As Integer) As System.Threading.Tasks.Task(Of DRMX_EN.AddLicenseProfileToGroupResponse)
            Dim inValue As DRMX_EN.AddLicenseProfileToGroupRequest = New DRMX_EN.AddLicenseProfileToGroupRequest()
            inValue.Body = New DRMX_EN.AddLicenseProfileToGroupRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.LicenseProfileID = LicenseProfileID
            inValue.Body.GroupID = GroupID
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).AddLicenseProfileToGroupAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_RemoveLicenseProfilesFromGroup(ByVal request As DRMX_EN.RemoveLicenseProfilesFromGroupRequest) As DRMX_EN.RemoveLicenseProfilesFromGroupResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.RemoveLicenseProfilesFromGroup
            Return MyBase.Channel.RemoveLicenseProfilesFromGroup(request)
        End Function
        
        Public Function RemoveLicenseProfilesFromGroup(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal GroupID As Integer) As String
            Dim inValue As DRMX_EN.RemoveLicenseProfilesFromGroupRequest = New DRMX_EN.RemoveLicenseProfilesFromGroupRequest()
            inValue.Body = New DRMX_EN.RemoveLicenseProfilesFromGroupRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.GroupID = GroupID
            Dim retVal As DRMX_EN.RemoveLicenseProfilesFromGroupResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).RemoveLicenseProfilesFromGroup(inValue)
            Return retVal.Body.RemoveLicenseProfilesFromGroupResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_RemoveLicenseProfilesFromGroupAsync(ByVal request As DRMX_EN.RemoveLicenseProfilesFromGroupRequest) As System.Threading.Tasks.Task(Of DRMX_EN.RemoveLicenseProfilesFromGroupResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.RemoveLicenseProfilesFromGroupAsync
            Return MyBase.Channel.RemoveLicenseProfilesFromGroupAsync(request)
        End Function
        
        Public Function RemoveLicenseProfilesFromGroupAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal GroupID As Integer) As System.Threading.Tasks.Task(Of DRMX_EN.RemoveLicenseProfilesFromGroupResponse)
            Dim inValue As DRMX_EN.RemoveLicenseProfilesFromGroupRequest = New DRMX_EN.RemoveLicenseProfilesFromGroupRequest()
            inValue.Body = New DRMX_EN.RemoveLicenseProfilesFromGroupRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.GroupID = GroupID
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).RemoveLicenseProfilesFromGroupAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_AddRight(ByVal request As DRMX_EN.AddRightRequest) As DRMX_EN.AddRightResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.AddRight
            Return MyBase.Channel.AddRight(request)
        End Function
        
        Public Function AddRight( _
                    ByVal AdminEmail As String,  _
                    ByVal WebServiceAuthStr As String,  _
                    ByVal Description As String,  _
                    ByVal PlayCount As String,  _
                    ByVal BeginDate As String,  _
                    ByVal ExpirationDate As String,  _
                    ByVal ExpirationAfterFirstUse As String,  _
                    ByVal RightsPrice As String,  _
                    ByVal AllowPrint As String,  _
                    ByVal AllowClipBoard As String,  _
                    ByVal AllowDoc As String,  _
                    ByVal EnableWatermark As String,  _
                    ByVal WatermarkText As String,  _
                    ByVal WatermarkArea As String,  _
                    ByVal RandomChangeArea As String,  _
                    ByVal RandomFrquency As String,  _
                    ByVal EnableBlacklist As String,  _
                    ByVal EnableWhitelist As String,  _
                    ByVal ExpireTimeUnit As String,  _
                    ByVal PreviewTime As Integer,  _
                    ByVal PreviewTimeUnit As String,  _
                    ByVal PreviewPage As Integer) As String
            Dim inValue As DRMX_EN.AddRightRequest = New DRMX_EN.AddRightRequest()
            inValue.Body = New DRMX_EN.AddRightRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.Description = Description
            inValue.Body.PlayCount = PlayCount
            inValue.Body.BeginDate = BeginDate
            inValue.Body.ExpirationDate = ExpirationDate
            inValue.Body.ExpirationAfterFirstUse = ExpirationAfterFirstUse
            inValue.Body.RightsPrice = RightsPrice
            inValue.Body.AllowPrint = AllowPrint
            inValue.Body.AllowClipBoard = AllowClipBoard
            inValue.Body.AllowDoc = AllowDoc
            inValue.Body.EnableWatermark = EnableWatermark
            inValue.Body.WatermarkText = WatermarkText
            inValue.Body.WatermarkArea = WatermarkArea
            inValue.Body.RandomChangeArea = RandomChangeArea
            inValue.Body.RandomFrquency = RandomFrquency
            inValue.Body.EnableBlacklist = EnableBlacklist
            inValue.Body.EnableWhitelist = EnableWhitelist
            inValue.Body.ExpireTimeUnit = ExpireTimeUnit
            inValue.Body.PreviewTime = PreviewTime
            inValue.Body.PreviewTimeUnit = PreviewTimeUnit
            inValue.Body.PreviewPage = PreviewPage
            Dim retVal As DRMX_EN.AddRightResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).AddRight(inValue)
            Return retVal.Body.AddRightResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_AddRightAsync(ByVal request As DRMX_EN.AddRightRequest) As System.Threading.Tasks.Task(Of DRMX_EN.AddRightResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.AddRightAsync
            Return MyBase.Channel.AddRightAsync(request)
        End Function
        
        Public Function AddRightAsync( _
                    ByVal AdminEmail As String,  _
                    ByVal WebServiceAuthStr As String,  _
                    ByVal Description As String,  _
                    ByVal PlayCount As String,  _
                    ByVal BeginDate As String,  _
                    ByVal ExpirationDate As String,  _
                    ByVal ExpirationAfterFirstUse As String,  _
                    ByVal RightsPrice As String,  _
                    ByVal AllowPrint As String,  _
                    ByVal AllowClipBoard As String,  _
                    ByVal AllowDoc As String,  _
                    ByVal EnableWatermark As String,  _
                    ByVal WatermarkText As String,  _
                    ByVal WatermarkArea As String,  _
                    ByVal RandomChangeArea As String,  _
                    ByVal RandomFrquency As String,  _
                    ByVal EnableBlacklist As String,  _
                    ByVal EnableWhitelist As String,  _
                    ByVal ExpireTimeUnit As String,  _
                    ByVal PreviewTime As Integer,  _
                    ByVal PreviewTimeUnit As String,  _
                    ByVal PreviewPage As Integer) As System.Threading.Tasks.Task(Of DRMX_EN.AddRightResponse)
            Dim inValue As DRMX_EN.AddRightRequest = New DRMX_EN.AddRightRequest()
            inValue.Body = New DRMX_EN.AddRightRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.Description = Description
            inValue.Body.PlayCount = PlayCount
            inValue.Body.BeginDate = BeginDate
            inValue.Body.ExpirationDate = ExpirationDate
            inValue.Body.ExpirationAfterFirstUse = ExpirationAfterFirstUse
            inValue.Body.RightsPrice = RightsPrice
            inValue.Body.AllowPrint = AllowPrint
            inValue.Body.AllowClipBoard = AllowClipBoard
            inValue.Body.AllowDoc = AllowDoc
            inValue.Body.EnableWatermark = EnableWatermark
            inValue.Body.WatermarkText = WatermarkText
            inValue.Body.WatermarkArea = WatermarkArea
            inValue.Body.RandomChangeArea = RandomChangeArea
            inValue.Body.RandomFrquency = RandomFrquency
            inValue.Body.EnableBlacklist = EnableBlacklist
            inValue.Body.EnableWhitelist = EnableWhitelist
            inValue.Body.ExpireTimeUnit = ExpireTimeUnit
            inValue.Body.PreviewTime = PreviewTime
            inValue.Body.PreviewTimeUnit = PreviewTimeUnit
            inValue.Body.PreviewPage = PreviewPage
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).AddRightAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_AddRightToLicenseProfile(ByVal request As DRMX_EN.AddRightToLicenseProfileRequest) As DRMX_EN.AddRightToLicenseProfileResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.AddRightToLicenseProfile
            Return MyBase.Channel.AddRightToLicenseProfile(request)
        End Function
        
        Public Function AddRightToLicenseProfile(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal RightID As Integer, ByVal LicenseProfileID As Integer) As String
            Dim inValue As DRMX_EN.AddRightToLicenseProfileRequest = New DRMX_EN.AddRightToLicenseProfileRequest()
            inValue.Body = New DRMX_EN.AddRightToLicenseProfileRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.RightID = RightID
            inValue.Body.LicenseProfileID = LicenseProfileID
            Dim retVal As DRMX_EN.AddRightToLicenseProfileResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).AddRightToLicenseProfile(inValue)
            Return retVal.Body.AddRightToLicenseProfileResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_AddRightToLicenseProfileAsync(ByVal request As DRMX_EN.AddRightToLicenseProfileRequest) As System.Threading.Tasks.Task(Of DRMX_EN.AddRightToLicenseProfileResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.AddRightToLicenseProfileAsync
            Return MyBase.Channel.AddRightToLicenseProfileAsync(request)
        End Function
        
        Public Function AddRightToLicenseProfileAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal RightID As Integer, ByVal LicenseProfileID As Integer) As System.Threading.Tasks.Task(Of DRMX_EN.AddRightToLicenseProfileResponse)
            Dim inValue As DRMX_EN.AddRightToLicenseProfileRequest = New DRMX_EN.AddRightToLicenseProfileRequest()
            inValue.Body = New DRMX_EN.AddRightToLicenseProfileRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.RightID = RightID
            inValue.Body.LicenseProfileID = LicenseProfileID
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).AddRightToLicenseProfileAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_RemoveRightsFromLicenseProfile(ByVal request As DRMX_EN.RemoveRightsFromLicenseProfileRequest) As DRMX_EN.RemoveRightsFromLicenseProfileResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.RemoveRightsFromLicenseProfile
            Return MyBase.Channel.RemoveRightsFromLicenseProfile(request)
        End Function
        
        Public Function RemoveRightsFromLicenseProfile(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal LicenseProfileID As Integer) As String
            Dim inValue As DRMX_EN.RemoveRightsFromLicenseProfileRequest = New DRMX_EN.RemoveRightsFromLicenseProfileRequest()
            inValue.Body = New DRMX_EN.RemoveRightsFromLicenseProfileRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.LicenseProfileID = LicenseProfileID
            Dim retVal As DRMX_EN.RemoveRightsFromLicenseProfileResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).RemoveRightsFromLicenseProfile(inValue)
            Return retVal.Body.RemoveRightsFromLicenseProfileResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_RemoveRightsFromLicenseProfileAsync(ByVal request As DRMX_EN.RemoveRightsFromLicenseProfileRequest) As System.Threading.Tasks.Task(Of DRMX_EN.RemoveRightsFromLicenseProfileResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.RemoveRightsFromLicenseProfileAsync
            Return MyBase.Channel.RemoveRightsFromLicenseProfileAsync(request)
        End Function
        
        Public Function RemoveRightsFromLicenseProfileAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal LicenseProfileID As Integer) As System.Threading.Tasks.Task(Of DRMX_EN.RemoveRightsFromLicenseProfileResponse)
            Dim inValue As DRMX_EN.RemoveRightsFromLicenseProfileRequest = New DRMX_EN.RemoveRightsFromLicenseProfileRequest()
            inValue.Body = New DRMX_EN.RemoveRightsFromLicenseProfileRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.LicenseProfileID = LicenseProfileID
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).RemoveRightsFromLicenseProfileAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_aLogin(ByVal request As DRMX_EN.aLoginRequest) As DRMX_EN.aLoginResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.aLogin
            Return MyBase.Channel.aLogin(request)
        End Function
        
        Public Function aLogin(ByVal Email As String, ByVal Pwd As String) As Integer
            Dim inValue As DRMX_EN.aLoginRequest = New DRMX_EN.aLoginRequest()
            inValue.Body = New DRMX_EN.aLoginRequestBody()
            inValue.Body.Email = Email
            inValue.Body.Pwd = Pwd
            Dim retVal As DRMX_EN.aLoginResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).aLogin(inValue)
            Return retVal.Body.aLoginResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_aLoginAsync(ByVal request As DRMX_EN.aLoginRequest) As System.Threading.Tasks.Task(Of DRMX_EN.aLoginResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.aLoginAsync
            Return MyBase.Channel.aLoginAsync(request)
        End Function
        
        Public Function aLoginAsync(ByVal Email As String, ByVal Pwd As String) As System.Threading.Tasks.Task(Of DRMX_EN.aLoginResponse)
            Dim inValue As DRMX_EN.aLoginRequest = New DRMX_EN.aLoginRequest()
            inValue.Body = New DRMX_EN.aLoginRequestBody()
            inValue.Body.Email = Email
            inValue.Body.Pwd = Pwd
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).aLoginAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_aLogin2(ByVal request As DRMX_EN.aLogin2Request) As DRMX_EN.aLogin2Response Implements DRMX_EN.HaihaisoftLicenseServiceSoap.aLogin2
            Return MyBase.Channel.aLogin2(request)
        End Function
        
        Public Function aLogin2(ByVal Email As String, ByVal Pwd As String) As String
            Dim inValue As DRMX_EN.aLogin2Request = New DRMX_EN.aLogin2Request()
            inValue.Body = New DRMX_EN.aLogin2RequestBody()
            inValue.Body.Email = Email
            inValue.Body.Pwd = Pwd
            Dim retVal As DRMX_EN.aLogin2Response = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).aLogin2(inValue)
            Return retVal.Body.aLogin2Result
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_aLogin2Async(ByVal request As DRMX_EN.aLogin2Request) As System.Threading.Tasks.Task(Of DRMX_EN.aLogin2Response) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.aLogin2Async
            Return MyBase.Channel.aLogin2Async(request)
        End Function
        
        Public Function aLogin2Async(ByVal Email As String, ByVal Pwd As String) As System.Threading.Tasks.Task(Of DRMX_EN.aLogin2Response)
            Dim inValue As DRMX_EN.aLogin2Request = New DRMX_EN.aLogin2Request()
            inValue.Body = New DRMX_EN.aLogin2RequestBody()
            inValue.Body.Email = Email
            inValue.Body.Pwd = Pwd
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).aLogin2Async(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_WebServiceLogin(ByVal request As DRMX_EN.WebServiceLoginRequest) As DRMX_EN.WebServiceLoginResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.WebServiceLogin
            Return MyBase.Channel.WebServiceLogin(request)
        End Function
        
        Public Function WebServiceLogin(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String) As Integer
            Dim inValue As DRMX_EN.WebServiceLoginRequest = New DRMX_EN.WebServiceLoginRequest()
            inValue.Body = New DRMX_EN.WebServiceLoginRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            Dim retVal As DRMX_EN.WebServiceLoginResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).WebServiceLogin(inValue)
            Return retVal.Body.WebServiceLoginResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_WebServiceLoginAsync(ByVal request As DRMX_EN.WebServiceLoginRequest) As System.Threading.Tasks.Task(Of DRMX_EN.WebServiceLoginResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.WebServiceLoginAsync
            Return MyBase.Channel.WebServiceLoginAsync(request)
        End Function
        
        Public Function WebServiceLoginAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String) As System.Threading.Tasks.Task(Of DRMX_EN.WebServiceLoginResponse)
            Dim inValue As DRMX_EN.WebServiceLoginRequest = New DRMX_EN.WebServiceLoginRequest()
            inValue.Body = New DRMX_EN.WebServiceLoginRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).WebServiceLoginAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_AddUserGroup(ByVal request As DRMX_EN.AddUserGroupRequest) As DRMX_EN.AddUserGroupResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.AddUserGroup
            Return MyBase.Channel.AddUserGroup(request)
        End Function
        
        Public Function AddUserGroup(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal GroupName As String, ByVal IP1 As Double, ByVal IP2 As Double, ByVal RequireLogin As Boolean, ByVal CustomerID As Integer, ByVal BindNum As Integer) As String
            Dim inValue As DRMX_EN.AddUserGroupRequest = New DRMX_EN.AddUserGroupRequest()
            inValue.Body = New DRMX_EN.AddUserGroupRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.GroupName = GroupName
            inValue.Body.IP1 = IP1
            inValue.Body.IP2 = IP2
            inValue.Body.RequireLogin = RequireLogin
            inValue.Body.CustomerID = CustomerID
            inValue.Body.BindNum = BindNum
            Dim retVal As DRMX_EN.AddUserGroupResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).AddUserGroup(inValue)
            Return retVal.Body.AddUserGroupResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_AddUserGroupAsync(ByVal request As DRMX_EN.AddUserGroupRequest) As System.Threading.Tasks.Task(Of DRMX_EN.AddUserGroupResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.AddUserGroupAsync
            Return MyBase.Channel.AddUserGroupAsync(request)
        End Function
        
        Public Function AddUserGroupAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal GroupName As String, ByVal IP1 As Double, ByVal IP2 As Double, ByVal RequireLogin As Boolean, ByVal CustomerID As Integer, ByVal BindNum As Integer) As System.Threading.Tasks.Task(Of DRMX_EN.AddUserGroupResponse)
            Dim inValue As DRMX_EN.AddUserGroupRequest = New DRMX_EN.AddUserGroupRequest()
            inValue.Body = New DRMX_EN.AddUserGroupRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.GroupName = GroupName
            inValue.Body.IP1 = IP1
            inValue.Body.IP2 = IP2
            inValue.Body.RequireLogin = RequireLogin
            inValue.Body.CustomerID = CustomerID
            inValue.Body.BindNum = BindNum
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).AddUserGroupAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_ListRights(ByVal request As DRMX_EN.ListRightsRequest) As DRMX_EN.ListRightsResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.ListRights
            Return MyBase.Channel.ListRights(request)
        End Function
        
        Public Function ListRights(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal LicenseProfileID As Integer) As DRMX_EN.ArrayOfAnyType
            Dim inValue As DRMX_EN.ListRightsRequest = New DRMX_EN.ListRightsRequest()
            inValue.Body = New DRMX_EN.ListRightsRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.LicenseProfileID = LicenseProfileID
            Dim retVal As DRMX_EN.ListRightsResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).ListRights(inValue)
            Return retVal.Body.ListRightsResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_ListRightsAsync(ByVal request As DRMX_EN.ListRightsRequest) As System.Threading.Tasks.Task(Of DRMX_EN.ListRightsResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.ListRightsAsync
            Return MyBase.Channel.ListRightsAsync(request)
        End Function
        
        Public Function ListRightsAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal LicenseProfileID As Integer) As System.Threading.Tasks.Task(Of DRMX_EN.ListRightsResponse)
            Dim inValue As DRMX_EN.ListRightsRequest = New DRMX_EN.ListRightsRequest()
            inValue.Body = New DRMX_EN.ListRightsRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.LicenseProfileID = LicenseProfileID
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).ListRightsAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_ListUserGroups(ByVal request As DRMX_EN.ListUserGroupsRequest) As DRMX_EN.ListUserGroupsResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.ListUserGroups
            Return MyBase.Channel.ListUserGroups(request)
        End Function
        
        Public Function ListUserGroups(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String) As Object
            Dim inValue As DRMX_EN.ListUserGroupsRequest = New DRMX_EN.ListUserGroupsRequest()
            inValue.Body = New DRMX_EN.ListUserGroupsRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            Dim retVal As DRMX_EN.ListUserGroupsResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).ListUserGroups(inValue)
            Return retVal.Body.ListUserGroupsResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_ListUserGroupsAsync(ByVal request As DRMX_EN.ListUserGroupsRequest) As System.Threading.Tasks.Task(Of DRMX_EN.ListUserGroupsResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.ListUserGroupsAsync
            Return MyBase.Channel.ListUserGroupsAsync(request)
        End Function
        
        Public Function ListUserGroupsAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String) As System.Threading.Tasks.Task(Of DRMX_EN.ListUserGroupsResponse)
            Dim inValue As DRMX_EN.ListUserGroupsRequest = New DRMX_EN.ListUserGroupsRequest()
            inValue.Body = New DRMX_EN.ListUserGroupsRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).ListUserGroupsAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_ListLicenseProfiles(ByVal request As DRMX_EN.ListLicenseProfilesRequest) As DRMX_EN.ListLicenseProfilesResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.ListLicenseProfiles
            Return MyBase.Channel.ListLicenseProfiles(request)
        End Function
        
        Public Function ListLicenseProfiles(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal GroupID As Integer) As Object
            Dim inValue As DRMX_EN.ListLicenseProfilesRequest = New DRMX_EN.ListLicenseProfilesRequest()
            inValue.Body = New DRMX_EN.ListLicenseProfilesRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.GroupID = GroupID
            Dim retVal As DRMX_EN.ListLicenseProfilesResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).ListLicenseProfiles(inValue)
            Return retVal.Body.ListLicenseProfilesResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_ListLicenseProfilesAsync(ByVal request As DRMX_EN.ListLicenseProfilesRequest) As System.Threading.Tasks.Task(Of DRMX_EN.ListLicenseProfilesResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.ListLicenseProfilesAsync
            Return MyBase.Channel.ListLicenseProfilesAsync(request)
        End Function
        
        Public Function ListLicenseProfilesAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal GroupID As Integer) As System.Threading.Tasks.Task(Of DRMX_EN.ListLicenseProfilesResponse)
            Dim inValue As DRMX_EN.ListLicenseProfilesRequest = New DRMX_EN.ListLicenseProfilesRequest()
            inValue.Body = New DRMX_EN.ListLicenseProfilesRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.GroupID = GroupID
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).ListLicenseProfilesAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_ListLicenseProfilesAsString(ByVal request As DRMX_EN.ListLicenseProfilesAsStringRequest) As DRMX_EN.ListLicenseProfilesAsStringResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.ListLicenseProfilesAsString
            Return MyBase.Channel.ListLicenseProfilesAsString(request)
        End Function
        
        Public Function ListLicenseProfilesAsString(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal GroupID As Integer) As String
            Dim inValue As DRMX_EN.ListLicenseProfilesAsStringRequest = New DRMX_EN.ListLicenseProfilesAsStringRequest()
            inValue.Body = New DRMX_EN.ListLicenseProfilesAsStringRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.GroupID = GroupID
            Dim retVal As DRMX_EN.ListLicenseProfilesAsStringResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).ListLicenseProfilesAsString(inValue)
            Return retVal.Body.ListLicenseProfilesAsStringResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_ListLicenseProfilesAsStringAsync(ByVal request As DRMX_EN.ListLicenseProfilesAsStringRequest) As System.Threading.Tasks.Task(Of DRMX_EN.ListLicenseProfilesAsStringResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.ListLicenseProfilesAsStringAsync
            Return MyBase.Channel.ListLicenseProfilesAsStringAsync(request)
        End Function
        
        Public Function ListLicenseProfilesAsStringAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal GroupID As Integer) As System.Threading.Tasks.Task(Of DRMX_EN.ListLicenseProfilesAsStringResponse)
            Dim inValue As DRMX_EN.ListLicenseProfilesAsStringRequest = New DRMX_EN.ListLicenseProfilesAsStringRequest()
            inValue.Body = New DRMX_EN.ListLicenseProfilesAsStringRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.GroupID = GroupID
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).ListLicenseProfilesAsStringAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_ListUsers(ByVal request As DRMX_EN.ListUsersRequest) As DRMX_EN.ListUsersResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.ListUsers
            Return MyBase.Channel.ListUsers(request)
        End Function
        
        Public Function ListUsers(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal GroupID As Integer, ByVal PageNo As Integer, ByVal PageSize As Integer, ByVal SortField As String, ByVal SortOrder As String, ByRef TotalPages As Integer, ByRef TotalRows As Integer) As Object
            Dim inValue As DRMX_EN.ListUsersRequest = New DRMX_EN.ListUsersRequest()
            inValue.Body = New DRMX_EN.ListUsersRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.GroupID = GroupID
            inValue.Body.PageNo = PageNo
            inValue.Body.PageSize = PageSize
            inValue.Body.SortField = SortField
            inValue.Body.SortOrder = SortOrder
            inValue.Body.TotalPages = TotalPages
            inValue.Body.TotalRows = TotalRows
            Dim retVal As DRMX_EN.ListUsersResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).ListUsers(inValue)
            TotalPages = retVal.Body.TotalPages
            TotalRows = retVal.Body.TotalRows
            Return retVal.Body.ListUsersResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_ListUsersAsync(ByVal request As DRMX_EN.ListUsersRequest) As System.Threading.Tasks.Task(Of DRMX_EN.ListUsersResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.ListUsersAsync
            Return MyBase.Channel.ListUsersAsync(request)
        End Function
        
        Public Function ListUsersAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal GroupID As Integer, ByVal PageNo As Integer, ByVal PageSize As Integer, ByVal SortField As String, ByVal SortOrder As String, ByVal TotalPages As Integer, ByVal TotalRows As Integer) As System.Threading.Tasks.Task(Of DRMX_EN.ListUsersResponse)
            Dim inValue As DRMX_EN.ListUsersRequest = New DRMX_EN.ListUsersRequest()
            inValue.Body = New DRMX_EN.ListUsersRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.GroupID = GroupID
            inValue.Body.PageNo = PageNo
            inValue.Body.PageSize = PageSize
            inValue.Body.SortField = SortField
            inValue.Body.SortOrder = SortOrder
            inValue.Body.TotalPages = TotalPages
            inValue.Body.TotalRows = TotalRows
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).ListUsersAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_ListReports(ByVal request As DRMX_EN.ListReportsRequest) As DRMX_EN.ListReportsResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.ListReports
            Return MyBase.Channel.ListReports(request)
        End Function
        
        Public Function ListReports(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal BeginDate As String, ByVal EndDate As String, ByVal GroupID As Integer, ByVal PageNo As Integer, ByVal PageSize As Integer, ByVal SortField As String, ByVal SortOrder As String, ByRef TotalPages As Integer, ByRef TotalRows As Integer) As Object
            Dim inValue As DRMX_EN.ListReportsRequest = New DRMX_EN.ListReportsRequest()
            inValue.Body = New DRMX_EN.ListReportsRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.BeginDate = BeginDate
            inValue.Body.EndDate = EndDate
            inValue.Body.GroupID = GroupID
            inValue.Body.PageNo = PageNo
            inValue.Body.PageSize = PageSize
            inValue.Body.SortField = SortField
            inValue.Body.SortOrder = SortOrder
            inValue.Body.TotalPages = TotalPages
            inValue.Body.TotalRows = TotalRows
            Dim retVal As DRMX_EN.ListReportsResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).ListReports(inValue)
            TotalPages = retVal.Body.TotalPages
            TotalRows = retVal.Body.TotalRows
            Return retVal.Body.ListReportsResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_ListReportsAsync(ByVal request As DRMX_EN.ListReportsRequest) As System.Threading.Tasks.Task(Of DRMX_EN.ListReportsResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.ListReportsAsync
            Return MyBase.Channel.ListReportsAsync(request)
        End Function
        
        Public Function ListReportsAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal BeginDate As String, ByVal EndDate As String, ByVal GroupID As Integer, ByVal PageNo As Integer, ByVal PageSize As Integer, ByVal SortField As String, ByVal SortOrder As String, ByVal TotalPages As Integer, ByVal TotalRows As Integer) As System.Threading.Tasks.Task(Of DRMX_EN.ListReportsResponse)
            Dim inValue As DRMX_EN.ListReportsRequest = New DRMX_EN.ListReportsRequest()
            inValue.Body = New DRMX_EN.ListReportsRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.BeginDate = BeginDate
            inValue.Body.EndDate = EndDate
            inValue.Body.GroupID = GroupID
            inValue.Body.PageNo = PageNo
            inValue.Body.PageSize = PageSize
            inValue.Body.SortField = SortField
            inValue.Body.SortOrder = SortOrder
            inValue.Body.TotalPages = TotalPages
            inValue.Body.TotalRows = TotalRows
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).ListReportsAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_GetRights(ByVal request As DRMX_EN.GetRightsRequest) As DRMX_EN.GetRightsResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.GetRights
            Return MyBase.Channel.GetRights(request)
        End Function
        
        Public Function GetRights(ByVal Email As String, ByVal WebServiceAuthStr As String, ByVal RightsID As Integer) As DRMX_EN.RightsDetails
            Dim inValue As DRMX_EN.GetRightsRequest = New DRMX_EN.GetRightsRequest()
            inValue.Body = New DRMX_EN.GetRightsRequestBody()
            inValue.Body.Email = Email
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.RightsID = RightsID
            Dim retVal As DRMX_EN.GetRightsResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).GetRights(inValue)
            Return retVal.Body.GetRightsResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_GetRightsAsync(ByVal request As DRMX_EN.GetRightsRequest) As System.Threading.Tasks.Task(Of DRMX_EN.GetRightsResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.GetRightsAsync
            Return MyBase.Channel.GetRightsAsync(request)
        End Function
        
        Public Function GetRightsAsync(ByVal Email As String, ByVal WebServiceAuthStr As String, ByVal RightsID As Integer) As System.Threading.Tasks.Task(Of DRMX_EN.GetRightsResponse)
            Dim inValue As DRMX_EN.GetRightsRequest = New DRMX_EN.GetRightsRequest()
            inValue.Body = New DRMX_EN.GetRightsRequestBody()
            inValue.Body.Email = Email
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.RightsID = RightsID
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).GetRightsAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_GetRightsReturnString(ByVal request As DRMX_EN.GetRightsReturnStringRequest) As DRMX_EN.GetRightsReturnStringResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.GetRightsReturnString
            Return MyBase.Channel.GetRightsReturnString(request)
        End Function
        
        Public Function GetRightsReturnString(ByVal Email As String, ByVal WebServiceAuthStr As String, ByVal RightsID As Integer) As String
            Dim inValue As DRMX_EN.GetRightsReturnStringRequest = New DRMX_EN.GetRightsReturnStringRequest()
            inValue.Body = New DRMX_EN.GetRightsReturnStringRequestBody()
            inValue.Body.Email = Email
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.RightsID = RightsID
            Dim retVal As DRMX_EN.GetRightsReturnStringResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).GetRightsReturnString(inValue)
            Return retVal.Body.GetRightsReturnStringResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_GetRightsReturnStringAsync(ByVal request As DRMX_EN.GetRightsReturnStringRequest) As System.Threading.Tasks.Task(Of DRMX_EN.GetRightsReturnStringResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.GetRightsReturnStringAsync
            Return MyBase.Channel.GetRightsReturnStringAsync(request)
        End Function
        
        Public Function GetRightsReturnStringAsync(ByVal Email As String, ByVal WebServiceAuthStr As String, ByVal RightsID As Integer) As System.Threading.Tasks.Task(Of DRMX_EN.GetRightsReturnStringResponse)
            Dim inValue As DRMX_EN.GetRightsReturnStringRequest = New DRMX_EN.GetRightsReturnStringRequest()
            inValue.Body = New DRMX_EN.GetRightsReturnStringRequestBody()
            inValue.Body.Email = Email
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.RightsID = RightsID
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).GetRightsReturnStringAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_GetBlocklistOfRight(ByVal request As DRMX_EN.GetBlocklistOfRightRequest) As DRMX_EN.GetBlocklistOfRightResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.GetBlocklistOfRight
            Return MyBase.Channel.GetBlocklistOfRight(request)
        End Function
        
        Public Function GetBlocklistOfRight(ByVal Email As String, ByVal WebServiceAuthStr As String, ByVal RightsID As Integer) As String
            Dim inValue As DRMX_EN.GetBlocklistOfRightRequest = New DRMX_EN.GetBlocklistOfRightRequest()
            inValue.Body = New DRMX_EN.GetBlocklistOfRightRequestBody()
            inValue.Body.Email = Email
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.RightsID = RightsID
            Dim retVal As DRMX_EN.GetBlocklistOfRightResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).GetBlocklistOfRight(inValue)
            Return retVal.Body.GetBlocklistOfRightResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_GetBlocklistOfRightAsync(ByVal request As DRMX_EN.GetBlocklistOfRightRequest) As System.Threading.Tasks.Task(Of DRMX_EN.GetBlocklistOfRightResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.GetBlocklistOfRightAsync
            Return MyBase.Channel.GetBlocklistOfRightAsync(request)
        End Function
        
        Public Function GetBlocklistOfRightAsync(ByVal Email As String, ByVal WebServiceAuthStr As String, ByVal RightsID As Integer) As System.Threading.Tasks.Task(Of DRMX_EN.GetBlocklistOfRightResponse)
            Dim inValue As DRMX_EN.GetBlocklistOfRightRequest = New DRMX_EN.GetBlocklistOfRightRequest()
            inValue.Body = New DRMX_EN.GetBlocklistOfRightRequestBody()
            inValue.Body.Email = Email
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.RightsID = RightsID
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).GetBlocklistOfRightAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_DeleteRight(ByVal request As DRMX_EN.DeleteRightRequest) As DRMX_EN.DeleteRightResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.DeleteRight
            Return MyBase.Channel.DeleteRight(request)
        End Function
        
        Public Function DeleteRight(ByVal Email As String, ByVal WebServiceAuthStr As String, ByVal RightsID As Integer) As String
            Dim inValue As DRMX_EN.DeleteRightRequest = New DRMX_EN.DeleteRightRequest()
            inValue.Body = New DRMX_EN.DeleteRightRequestBody()
            inValue.Body.Email = Email
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.RightsID = RightsID
            Dim retVal As DRMX_EN.DeleteRightResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).DeleteRight(inValue)
            Return retVal.Body.DeleteRightResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_DeleteRightAsync(ByVal request As DRMX_EN.DeleteRightRequest) As System.Threading.Tasks.Task(Of DRMX_EN.DeleteRightResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.DeleteRightAsync
            Return MyBase.Channel.DeleteRightAsync(request)
        End Function
        
        Public Function DeleteRightAsync(ByVal Email As String, ByVal WebServiceAuthStr As String, ByVal RightsID As Integer) As System.Threading.Tasks.Task(Of DRMX_EN.DeleteRightResponse)
            Dim inValue As DRMX_EN.DeleteRightRequest = New DRMX_EN.DeleteRightRequest()
            inValue.Body = New DRMX_EN.DeleteRightRequestBody()
            inValue.Body.Email = Email
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.RightsID = RightsID
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).DeleteRightAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_SendEmail(ByVal request As DRMX_EN.SendEmailRequest) As DRMX_EN.SendEmailResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.SendEmail
            Return MyBase.Channel.SendEmail(request)
        End Function
        
        Public Function SendEmail(ByVal Email As String, ByVal AuthStr As String, ByVal Body As String, ByVal Title As String) As String
            Dim inValue As DRMX_EN.SendEmailRequest = New DRMX_EN.SendEmailRequest()
            inValue.Body = New DRMX_EN.SendEmailRequestBody()
            inValue.Body.Email = Email
            inValue.Body.AuthStr = AuthStr
            inValue.Body.Body = Body
            inValue.Body.Title = Title
            Dim retVal As DRMX_EN.SendEmailResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).SendEmail(inValue)
            Return retVal.Body.SendEmailResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_SendEmailAsync(ByVal request As DRMX_EN.SendEmailRequest) As System.Threading.Tasks.Task(Of DRMX_EN.SendEmailResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.SendEmailAsync
            Return MyBase.Channel.SendEmailAsync(request)
        End Function
        
        Public Function SendEmailAsync(ByVal Email As String, ByVal AuthStr As String, ByVal Body As String, ByVal Title As String) As System.Threading.Tasks.Task(Of DRMX_EN.SendEmailResponse)
            Dim inValue As DRMX_EN.SendEmailRequest = New DRMX_EN.SendEmailRequest()
            inValue.Body = New DRMX_EN.SendEmailRequestBody()
            inValue.Body.Email = Email
            inValue.Body.AuthStr = AuthStr
            inValue.Body.Body = Body
            inValue.Body.Title = Title
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).SendEmailAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_AddNewAdmin(ByVal request As DRMX_EN.AddNewAdminRequest) As DRMX_EN.AddNewAdminResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.AddNewAdmin
            Return MyBase.Channel.AddNewAdmin(request)
        End Function
        
        Public Function AddNewAdmin( _
                    ByVal WebServiceAuthStr As String,  _
                    ByVal fullName As String,  _
                    ByVal email As String,  _
                    ByVal SecEmail As String,  _
                    ByVal password As String,  _
                    ByVal Company As String,  _
                    ByVal Title As String,  _
                    ByVal Address As String,  _
                    ByVal City As String,  _
                    ByVal Province As String,  _
                    ByVal Zip As String,  _
                    ByVal Country As String,  _
                    ByVal Phone As String,  _
                    ByVal RegisterDate As Date,  _
                    ByVal AffiID As Integer,  _
                    ByVal Paypal As String,  _
                    ByVal CompanyURL As String,  _
                    ByVal LicenseURL As String,  _
                    ByVal IP As String,  _
                    ByVal AdminType As Integer,  _
                    ByVal SQuestion As String,  _
                    ByVal SAnswer As String,  _
                    ByVal FeeID As Integer,  _
                    ByVal GUID As String,  _
                    ByVal AffiTotal As Decimal,  _
                    ByVal AffiLimit As Decimal,  _
                    ByVal AffiRate As Decimal,  _
                    ByVal TimeZone As Integer) As String
            Dim inValue As DRMX_EN.AddNewAdminRequest = New DRMX_EN.AddNewAdminRequest()
            inValue.Body = New DRMX_EN.AddNewAdminRequestBody()
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.fullName = fullName
            inValue.Body.email = email
            inValue.Body.SecEmail = SecEmail
            inValue.Body.password = password
            inValue.Body.Company = Company
            inValue.Body.Title = Title
            inValue.Body.Address = Address
            inValue.Body.City = City
            inValue.Body.Province = Province
            inValue.Body.Zip = Zip
            inValue.Body.Country = Country
            inValue.Body.Phone = Phone
            inValue.Body.RegisterDate = RegisterDate
            inValue.Body.AffiID = AffiID
            inValue.Body.Paypal = Paypal
            inValue.Body.CompanyURL = CompanyURL
            inValue.Body.LicenseURL = LicenseURL
            inValue.Body.IP = IP
            inValue.Body.AdminType = AdminType
            inValue.Body.SQuestion = SQuestion
            inValue.Body.SAnswer = SAnswer
            inValue.Body.FeeID = FeeID
            inValue.Body.GUID = GUID
            inValue.Body.AffiTotal = AffiTotal
            inValue.Body.AffiLimit = AffiLimit
            inValue.Body.AffiRate = AffiRate
            inValue.Body.TimeZone = TimeZone
            Dim retVal As DRMX_EN.AddNewAdminResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).AddNewAdmin(inValue)
            Return retVal.Body.AddNewAdminResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_AddNewAdminAsync(ByVal request As DRMX_EN.AddNewAdminRequest) As System.Threading.Tasks.Task(Of DRMX_EN.AddNewAdminResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.AddNewAdminAsync
            Return MyBase.Channel.AddNewAdminAsync(request)
        End Function
        
        Public Function AddNewAdminAsync( _
                    ByVal WebServiceAuthStr As String,  _
                    ByVal fullName As String,  _
                    ByVal email As String,  _
                    ByVal SecEmail As String,  _
                    ByVal password As String,  _
                    ByVal Company As String,  _
                    ByVal Title As String,  _
                    ByVal Address As String,  _
                    ByVal City As String,  _
                    ByVal Province As String,  _
                    ByVal Zip As String,  _
                    ByVal Country As String,  _
                    ByVal Phone As String,  _
                    ByVal RegisterDate As Date,  _
                    ByVal AffiID As Integer,  _
                    ByVal Paypal As String,  _
                    ByVal CompanyURL As String,  _
                    ByVal LicenseURL As String,  _
                    ByVal IP As String,  _
                    ByVal AdminType As Integer,  _
                    ByVal SQuestion As String,  _
                    ByVal SAnswer As String,  _
                    ByVal FeeID As Integer,  _
                    ByVal GUID As String,  _
                    ByVal AffiTotal As Decimal,  _
                    ByVal AffiLimit As Decimal,  _
                    ByVal AffiRate As Decimal,  _
                    ByVal TimeZone As Integer) As System.Threading.Tasks.Task(Of DRMX_EN.AddNewAdminResponse)
            Dim inValue As DRMX_EN.AddNewAdminRequest = New DRMX_EN.AddNewAdminRequest()
            inValue.Body = New DRMX_EN.AddNewAdminRequestBody()
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.fullName = fullName
            inValue.Body.email = email
            inValue.Body.SecEmail = SecEmail
            inValue.Body.password = password
            inValue.Body.Company = Company
            inValue.Body.Title = Title
            inValue.Body.Address = Address
            inValue.Body.City = City
            inValue.Body.Province = Province
            inValue.Body.Zip = Zip
            inValue.Body.Country = Country
            inValue.Body.Phone = Phone
            inValue.Body.RegisterDate = RegisterDate
            inValue.Body.AffiID = AffiID
            inValue.Body.Paypal = Paypal
            inValue.Body.CompanyURL = CompanyURL
            inValue.Body.LicenseURL = LicenseURL
            inValue.Body.IP = IP
            inValue.Body.AdminType = AdminType
            inValue.Body.SQuestion = SQuestion
            inValue.Body.SAnswer = SAnswer
            inValue.Body.FeeID = FeeID
            inValue.Body.GUID = GUID
            inValue.Body.AffiTotal = AffiTotal
            inValue.Body.AffiLimit = AffiLimit
            inValue.Body.AffiRate = AffiRate
            inValue.Body.TimeZone = TimeZone
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).AddNewAdminAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_UpdateAdminInfo(ByVal request As DRMX_EN.UpdateAdminInfoRequest) As DRMX_EN.UpdateAdminInfoResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.UpdateAdminInfo
            Return MyBase.Channel.UpdateAdminInfo(request)
        End Function
        
        Public Function UpdateAdminInfo( _
                    ByVal WebServiceAuthStr As String,  _
                    ByVal GUID As String,  _
                    ByVal Name As String,  _
                    ByVal Address As String,  _
                    ByVal City As String,  _
                    ByVal Province As String,  _
                    ByVal Country As String,  _
                    ByVal Phone As String,  _
                    ByVal Zip As String,  _
                    ByVal Company As String,  _
                    ByVal CompanyURL As String,  _
                    ByVal Title As String,  _
                    ByVal Email As String,  _
                    ByVal SecEmail As String,  _
                    ByVal SQuestion As String,  _
                    ByVal SAnswer As String) As String
            Dim inValue As DRMX_EN.UpdateAdminInfoRequest = New DRMX_EN.UpdateAdminInfoRequest()
            inValue.Body = New DRMX_EN.UpdateAdminInfoRequestBody()
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.GUID = GUID
            inValue.Body.Name = Name
            inValue.Body.Address = Address
            inValue.Body.City = City
            inValue.Body.Province = Province
            inValue.Body.Country = Country
            inValue.Body.Phone = Phone
            inValue.Body.Zip = Zip
            inValue.Body.Company = Company
            inValue.Body.CompanyURL = CompanyURL
            inValue.Body.Title = Title
            inValue.Body.Email = Email
            inValue.Body.SecEmail = SecEmail
            inValue.Body.SQuestion = SQuestion
            inValue.Body.SAnswer = SAnswer
            Dim retVal As DRMX_EN.UpdateAdminInfoResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).UpdateAdminInfo(inValue)
            Return retVal.Body.UpdateAdminInfoResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_UpdateAdminInfoAsync(ByVal request As DRMX_EN.UpdateAdminInfoRequest) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateAdminInfoResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.UpdateAdminInfoAsync
            Return MyBase.Channel.UpdateAdminInfoAsync(request)
        End Function
        
        Public Function UpdateAdminInfoAsync( _
                    ByVal WebServiceAuthStr As String,  _
                    ByVal GUID As String,  _
                    ByVal Name As String,  _
                    ByVal Address As String,  _
                    ByVal City As String,  _
                    ByVal Province As String,  _
                    ByVal Country As String,  _
                    ByVal Phone As String,  _
                    ByVal Zip As String,  _
                    ByVal Company As String,  _
                    ByVal CompanyURL As String,  _
                    ByVal Title As String,  _
                    ByVal Email As String,  _
                    ByVal SecEmail As String,  _
                    ByVal SQuestion As String,  _
                    ByVal SAnswer As String) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateAdminInfoResponse)
            Dim inValue As DRMX_EN.UpdateAdminInfoRequest = New DRMX_EN.UpdateAdminInfoRequest()
            inValue.Body = New DRMX_EN.UpdateAdminInfoRequestBody()
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.GUID = GUID
            inValue.Body.Name = Name
            inValue.Body.Address = Address
            inValue.Body.City = City
            inValue.Body.Province = Province
            inValue.Body.Country = Country
            inValue.Body.Phone = Phone
            inValue.Body.Zip = Zip
            inValue.Body.Company = Company
            inValue.Body.CompanyURL = CompanyURL
            inValue.Body.Title = Title
            inValue.Body.Email = Email
            inValue.Body.SecEmail = SecEmail
            inValue.Body.SQuestion = SQuestion
            inValue.Body.SAnswer = SAnswer
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).UpdateAdminInfoAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_UpdateAdminPwd(ByVal request As DRMX_EN.UpdateAdminPwdRequest) As DRMX_EN.UpdateAdminPwdResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.UpdateAdminPwd
            Return MyBase.Channel.UpdateAdminPwd(request)
        End Function
        
        Public Function UpdateAdminPwd(ByVal WebServiceAuthStr As String, ByVal GUID As String, ByVal Password As String) As String
            Dim inValue As DRMX_EN.UpdateAdminPwdRequest = New DRMX_EN.UpdateAdminPwdRequest()
            inValue.Body = New DRMX_EN.UpdateAdminPwdRequestBody()
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.GUID = GUID
            inValue.Body.Password = Password
            Dim retVal As DRMX_EN.UpdateAdminPwdResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).UpdateAdminPwd(inValue)
            Return retVal.Body.UpdateAdminPwdResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_UpdateAdminPwdAsync(ByVal request As DRMX_EN.UpdateAdminPwdRequest) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateAdminPwdResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.UpdateAdminPwdAsync
            Return MyBase.Channel.UpdateAdminPwdAsync(request)
        End Function
        
        Public Function UpdateAdminPwdAsync(ByVal WebServiceAuthStr As String, ByVal GUID As String, ByVal Password As String) As System.Threading.Tasks.Task(Of DRMX_EN.UpdateAdminPwdResponse)
            Dim inValue As DRMX_EN.UpdateAdminPwdRequest = New DRMX_EN.UpdateAdminPwdRequest()
            inValue.Body = New DRMX_EN.UpdateAdminPwdRequestBody()
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.GUID = GUID
            inValue.Body.Password = Password
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).UpdateAdminPwdAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_GetPackagerParams(ByVal request As DRMX_EN.GetPackagerParamsRequest) As DRMX_EN.GetPackagerParamsResponse Implements DRMX_EN.HaihaisoftLicenseServiceSoap.GetPackagerParams
            Return MyBase.Channel.GetPackagerParams(request)
        End Function
        
        Public Function GetPackagerParams(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal ProfileID As String) As String
            Dim inValue As DRMX_EN.GetPackagerParamsRequest = New DRMX_EN.GetPackagerParamsRequest()
            inValue.Body = New DRMX_EN.GetPackagerParamsRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.ProfileID = ProfileID
            Dim retVal As DRMX_EN.GetPackagerParamsResponse = CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).GetPackagerParams(inValue)
            Return retVal.Body.GetPackagerParamsResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function DRMX_EN_HaihaisoftLicenseServiceSoap_GetPackagerParamsAsync(ByVal request As DRMX_EN.GetPackagerParamsRequest) As System.Threading.Tasks.Task(Of DRMX_EN.GetPackagerParamsResponse) Implements DRMX_EN.HaihaisoftLicenseServiceSoap.GetPackagerParamsAsync
            Return MyBase.Channel.GetPackagerParamsAsync(request)
        End Function
        
        Public Function GetPackagerParamsAsync(ByVal AdminEmail As String, ByVal WebServiceAuthStr As String, ByVal ProfileID As String) As System.Threading.Tasks.Task(Of DRMX_EN.GetPackagerParamsResponse)
            Dim inValue As DRMX_EN.GetPackagerParamsRequest = New DRMX_EN.GetPackagerParamsRequest()
            inValue.Body = New DRMX_EN.GetPackagerParamsRequestBody()
            inValue.Body.AdminEmail = AdminEmail
            inValue.Body.WebServiceAuthStr = WebServiceAuthStr
            inValue.Body.ProfileID = ProfileID
            Return CType(Me,DRMX_EN.HaihaisoftLicenseServiceSoap).GetPackagerParamsAsync(inValue)
        End Function
    End Class
End Namespace
